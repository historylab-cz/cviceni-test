{"version":3,"sources":["tools/libs/_animations.scss","homepage.css","tools/libs/_helpers.scss","homepage.scss","variables/_variables.scss","tools/vendor/_media-queries.scss","tools/vendor/modular-scale/_calc.scss","tools/libs/_toolbox.scss"],"names":[],"mappings":"AAAA;EACE;IACE,WAAU;GCCX;EDED;IACE,WAAU;GCAX;CACF;;ADPD;EACE;IACE,WAAU;GCCX;EDED;IACE,WAAU;GCAX;CACF;;ACPD;EACE,yBAAwB;CACzB;;ACGD;;EAEE,oBAAmB;EACnB,kCAAiC;CAClC;;AAED;EACE,iBAAgB;CACjB;;AAED;EACE,YAAW;EACX,8BCuDuB;EDtDvB,8DAAiE;EACjE,0BAAyB;EACzB,eCgG+C;ED/F/C,mBAAkB;CACnB;;AAED;EACE,mBAAkB;EAClB,eAAsB;CACvB;;AAED;EACE,YAAW;EACX,kBAAiB;EAUjB,eAAc;EACd,qBAAa;EAAb,qBAAa;EAAb,cAAa;EACb,yBAAuB;MAAvB,sBAAuB;UAAvB,wBAAuB;EACvB,oBAAe;MAAf,gBAAe;CAMhB;;AEtBC;EFCF;IAMI,WAAU;IACV,kBAAiB;IACjB,kBAAiB;IACjB,gBCkCqB;GDtBxB;CFGA;;AExBD;EAkBI,gBCyBqB;CDvBtB;;AAGH;EACE,oBAA8B;EAC9B,cAAa;CACd;;AAED;EACE,kBG5CwC;EH6CxC,0BAAyB;CAC1B;;AAED;EACE,mBGjDwC;EHkDxC,oBCe4B;CDd7B;;AAED;EACE,kBGtDwC;EHuDxC,oBCQ6B;CDP9B;;AAED;EACE,mBAAkB;CACnB;;AAED;EACE,oBAAW;MAAX,gBAAW;UAAX,YAAW;CAKZ;;AAND;EAII,sBAA6B;CAC9B;;AAGH;EACE,oBAAY;MAAZ,iBAAY;UAAZ,aAAY;EACZ,0BC8B+C;ED7B/C,+BC6CsB;ED5CtB,gCC4CsB;CDFvB;;AEtGC;EFwDF;IAQI,oBAAW;QAAX,gBAAW;YAAX,YAAW;GAsCd;CF5BA;;AI1EC;EFwDF;IAaI,oBAA2B;IAC3B,oBAA2B;GAgC9B;CFrBA;;AEzBD;EAkBI,iBAAgB;EAChB,WAAU;CAyBX;;AA5CH;EAuBM,oBC9ByB;ED+BzB,wBCpCmB;EDqCnB,+CCc8C;EDb9C,iCIpGsC;CJqGvC;;AA3BL;EAoCQ,0BAAyB;EACzB,mBG3GkC;CH4GnC;;AAtCP;EA0CM,mBAA0B;CAC3B;;AAKL;EACE,oBAAO;MAAP,YAAO;UAAP,QAAO;CACR","file":"../homepage.css","sourcesContent":["@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n","@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.hidden {\n  display: none !important;\n}\n\nbody,\nhtml {\n  overflow-y: initial;\n  -webkit-overflow-scrolling: touch;\n}\n\nbody {\n  min-height: 100%;\n}\n\nheader {\n  width: 100%;\n  padding: 2.4rem 1.6rem 1.6rem;\n  background: linear-gradient(135deg, #a77977 0%, #5352A6 100%);\n  background-color: #5352A6;\n  color: #fdf2f2;\n  text-align: center;\n}\n\n#logo {\n  fill: currentColor;\n  height: 6.4rem;\n}\n\nmain {\n  width: 100%;\n  max-width: 1024px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n@media only screen and (min-width: 1280px) {\n  main {\n    width: 70%;\n    min-width: 1200px;\n    max-width: 1200px;\n    padding: 1.6rem;\n  }\n}\n\nmain section {\n  padding: 1.6rem;\n}\n\nh1 {\n  line-height: 2.8rem;\n  margin-top: 0;\n}\n\n.section-name {\n  font-size: 0.8rem;\n  text-transform: uppercase;\n}\n\n.text-large {\n  font-size: 1.25rem;\n  line-height: 1.8rem;\n}\n\n.text-small {\n  font-size: 0.8rem;\n  line-height: 1.4rem;\n}\n\n.text-centered {\n  text-align: center;\n}\n\n.section-about {\n  flex: 1 60%;\n}\n\n.section-about li {\n  margin-bottom: 0.4rem;\n}\n\n.section-cviceni {\n  flex: 1 100%;\n  background-color: #fdf2f2;\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n\n@media only screen and (min-width: 768px) {\n  .section-cviceni {\n    flex: 1 40%;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .section-cviceni {\n    margin-top: -1.6rem;\n    padding-top: 3.2rem;\n  }\n}\n\n.section-cviceni ul {\n  list-style: none;\n  padding: 0;\n}\n\n.section-cviceni ul li {\n  line-height: 1.4rem;\n  padding: 0.48rem 1.6rem;\n  border-bottom: 1px solid rgba(28, 19, 18, 0.1);\n  border-bottom: 1px solid #fce4e3;\n}\n\n.section-cviceni ul a:nth-of-type(2) {\n  text-transform: uppercase;\n  font-size: 0.64rem;\n}\n\n.section-cviceni ul + p {\n  margin-top: 3.2rem;\n}\n\n.section-pictures {\n  flex: 1;\n}\n",".hidden {\n  display: none !important;\n}\n","@import \"tools/vendor/modular-scale\";\n@import \"tools/vendor/media-queries\";\n@import \"tools/libs/libs\";\n@import \"variables/variables\";\n\nbody,\nhtml {\n  overflow-y: initial;\n  -webkit-overflow-scrolling: touch;\n}\n\nbody {\n  min-height: 100%;\n}\n\nheader {\n  width: 100%;\n  padding: $base-unit * 1.5 $base-unit $base-unit;\n  background: linear-gradient(135deg, $bg-color-2 0%, #5352A6 100%);\n  background-color: #5352A6;\n  color: $bg-color-1;\n  text-align: center;\n}\n\n#logo {\n  fill: currentColor;\n  height: $base-unit * 4;\n}\n\nmain {\n  width: 100%;\n  max-width: 1024px;\n\n  //\n  @include mq($min-width: 1280px) {\n    width: 70%;\n    min-width: 1200px;\n    max-width: 1200px;\n    padding: $base-unit;\n  }\n\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  section {\n    padding: $base-unit;\n    // border-radius: $base-border-radius;\n  }\n}\n\nh1 {\n  line-height: $base-unit * 1.75;\n  margin-top: 0;\n}\n\n.section-name {\n  font-size: ms(-1);\n  text-transform: uppercase;\n}\n\n.text-large {\n  font-size: ms(1);\n  line-height: ms-line-height(1);\n}\n\n.text-small {\n  font-size: ms(-1);\n  line-height: ms-line-height(-1);\n}\n\n.text-centered {\n  text-align: center;\n}\n\n.section-about {\n  flex: 1 60%;\n\n  li {\n    margin-bottom: $base-unit / 4;\n  }\n}\n\n.section-cviceni {\n  flex: 1 100%;\n  background-color: $bg-color-1;\n  border-bottom-left-radius: $base-border-radius;\n  border-bottom-right-radius: $base-border-radius;\n\n  //\n  @include mq($min-width: 768px) {\n    flex: 1 40%;\n  }\n\n  //\n  @include mq($min-width: 1280px) {\n    margin-top: $base-unit * -1;\n    padding-top: $base-unit * 2;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    // margin: 0;\n\n    li {\n      line-height: ms-line-height(-1);\n      padding: $base-unit * .3 $base-unit;\n      border-bottom: 1px solid rgba($text-color,.1);\n      border-bottom: 1px solid $bg-color;\n    }\n\n    a {\n\n      &:nth-of-type(1) {\n        // font-size: ms(1);\n      }\n\n      &:nth-of-type(2) {\n        text-transform: uppercase;\n        font-size: ms(-2);\n      }\n    }\n\n    + p {\n      margin-top: $base-unit * 2;\n    }\n  }\n\n}\n\n.section-pictures {\n  flex: 1;\n}\n","// ==================================================\n// Settings\n// ==================================================\n\n$theme: dark;\n\n\n// Modular scale\n// scale 1.25\n// 2.441rem\n// 1.953rem\n// 1.563rem\n// 1.25rem\n// 1rem\n// 0.8rem\n$ms-ratio: $major-third;\n$ms-base: 1rem;\n\n\n\n// ==================================================\n// Breakpoints\n// ==================================================\n\n// Extra small devices (portrait phones, less than 576px)\n$screen-xs: 320px;\n// Small devices (landscape phones, 576px and up)\n$screen-s: 576px;\n// Medium devices (tablets, 768px and up)\n$screen-m: 768px;\n// Large devices (desktops, 992px and up)\n$screen-l: 992px;\n// Extra large devices (large desktops, 1200px and up)\n$screen-xl: 1200px;\n$screen-xxl: 1600px;\n\n$breakpoints: (\n   xs: $screen-xs,\n    s: $screen-s,\n    m: $screen-m,\n    l: $screen-l,\n   xl: $screen-xl,\n  xxl: $screen-xxl\n) !default;\n\n\n\n// ==================================================\n// Typography\n// ==================================================\n\n// Fonts\n$base-font-family: \"ff-meta-web-pro\", Helvetica, Verdana, sans-serif;\n$heading-font-family: \"ff-meta-web-pro\", Helvetica, Verdana, sans-serif;\n$ui-font-family: \"ff-meta-web-pro\", Helvetica, Verdana, sans-serif;\n$serif-font-family: \"ff-meta-serif-web-pro\", \"Times New Roman\", serif;\n// $line-height: 1.6rem;\n\n// Font Sizes\n$base-font-size: 100%;\n// Font Sizes for different media queries\n$font-sizes: (\n  null: 87.5%,\n  xs:   93.75%,\n  s:   106.25%,\n  m:   93.75%,\n  l:   100%,\n  xl:   106.25%,\n  xxl:   112.5%\n  ) !default;\n\n// Line height\n$base-line-height: 1.6rem;\n$heading-line-height: 1.2;\n$ms-line-heights: (\n  -3: $base-line-height * 0.5,\n  -2: $base-line-height * 0.75,\n  -1: $base-line-height * 0.875,\n  0: $base-line-height,\n  1: $base-line-height * 1.125,\n  2: $base-line-height * 1.5,\n  3: $base-line-height * 2,\n  4: $base-line-height * 2,\n  5: $base-line-height * 2.5,\n  6: $base-line-height * 3,\n  7: $base-line-height * 3,\n  8: $base-line-height * 4,\n  );\n\n// Vertical rhytm units\n$base-unit: $base-line-height;\n\n//\n// Headings Options\n// - size (rem),\n// - line height (rem),\n// - margin top (rem),\n// - margin bottom (rem)\n$headings: (\n  h1: (ms(4), ms-line-height(4), 0, $base-unit),\n  h2: (ms(2), ms-line-height(2), 0, $base-unit / 2),\n  h3: (ms(1), ms-line-height(1), 0, $base-unit / 2),\n  h4: (ms(0), ms-line-height(0), 0, 0),\n  h5: (ms(-1), ms-line-height(-1), 0, 0),\n  h6: (ms(-1), ms-line-height(-1), 0, 0)\n  ) !default;\n\n\n\n// ==================================================\n// Variables\n// ==================================================\n\n// Colors\n$base-color: hsb(2,10,99);\n$bg-color: $base-color;\n$bg-color-1: lighten(desaturate($bg-color, 5), 3);\n$bg-color-2: darken(desaturate($bg-color, 62), 38);\n\n@if $theme == light {\n  $bg-color-2: $bg-color;\n}\n\n$text-color: desaturate(darken($base-color, 85), 62);\n$action-color: hsb(1,74,82);\n$button-color: $action-color;\n$beauty-bush: #EEC5C3;\n$beauty-bush-gradient: desaturate(darken($beauty-bush, 2), 4), desaturate(darken($beauty-bush, 4), 8), desaturate(darken($beauty-bush, 6), 12), desaturate(darken($beauty-bush, 8), 16), desaturate(darken($beauty-bush, 10), 20), desaturate(darken($beauty-bush, 12), 24);\n\n// Border\n$base-border-color: transparent;\n$base-border: 1px solid $base-border-color;\n$base-border-radius: 3px;\n$box-shadow: 0 0 $base-unit * 2 rgba($text-color, .8);\n\n// Buttons\n$button-shadow: 0 0 $base-unit / 2 rgba(0, 0, 0, .2);\n\n// Animations\n$base-duration: .1s;\n$base-timing: ease-in-out;\n$transition-all: all $base-duration $base-timing;\n$timing-in: cubic-bezier(.62, 0, .8, .38);\n$timing-out: cubic-bezier(.2, .62, .38, 1);\n\n// SVG\n$svg-circle-size: $base-unit * 1.2;\n\n// Navigation\n$navigation-height: $base-unit * 2;\n\n// Text module - editor\n$editor-font-family: $serif-font-family;\n","//  Author: Rafal Bromirski\n//  www: http://rafalbromirski.com/\n//  github: http://github.com/paranoida/sass-mediaqueries\n//\n//  Licensed under a MIT License\n//\n//  Version:\n//  1.6.1\n\n// --- generator ---------------------------------------------------------------\n\n@mixin mq($args...) {\n  $media-type: 'only screen';\n  $media-type-key: 'media-type';\n  $args: keywords($args);\n  $expr: '';\n\n  @if map-has-key($args, $media-type-key) {\n    $media-type: map-get($args, $media-type-key);\n    $args: map-remove($args, $media-type-key);\n  }\n\n  @each $key, $value in $args {\n    @if $value {\n      $expr: \"#{$expr} and (#{$key}: #{$value})\";\n    }\n  }\n\n  @media #{$media-type} #{$expr} {\n    @content;\n  }\n}\n\n// --- screen ------------------------------------------------------------------\n\n@mixin screen($min, $max, $orientation: false) {\n  @include mq($min-width: $min, $max-width: $max, $orientation: $orientation) {\n    @content;\n  }\n}\n\n@mixin max-screen($max) {\n  @include mq($max-width: $max) {\n    @content;\n  }\n}\n\n@mixin min-screen($min) {\n  @include mq($min-width: $min) {\n    @content;\n  }\n}\n\n@mixin screen-height($min, $max, $orientation: false) {\n  @include mq($min-height: $min, $max-height: $max, $orientation: $orientation) {\n    @content;\n  }\n}\n\n@mixin max-screen-height($max) {\n  @include mq($max-height: $max) {\n    @content;\n  }\n}\n\n@mixin min-screen-height($min) {\n  @include mq($min-height: $min) {\n    @content;\n  }\n}\n\n// --- hdpi --------------------------------------------------------------------\n\n@mixin hdpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min-resolution: #{round($ratio*96)}dpi) {\n    @content;\n  }\n}\n\n// --- hdtv --------------------------------------------------------------------\n\n@mixin hdtv($standard: '1080') {\n  $min-width: false;\n  $min-height: false;\n\n  $standards: ('720p', 1280px, 720px)\n              ('1080', 1920px, 1080px)\n              ('2K', 2048px, 1080px)\n              ('4K', 4096px, 2160px);\n\n  @each $s in $standards {\n    @if $standard == nth($s, 1) {\n      $min-width: nth($s, 2);\n      $min-height: nth($s, 3);\n    }\n  }\n\n  @include mq(\n    $min-device-width: $min-width,\n    $min-device-height: $min-height,\n    $min-width: $min-width,\n    $min-height: $min-height\n  ) {\n    @content;\n  }\n}\n\n// --- iphone4 -----------------------------------------------------------------\n\n@mixin iphone4($orientation: false) {\n  $min: 320px;\n  $max: 480px;\n  $pixel-ratio: 2;\n  $aspect-ratio: '2/3';\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $device-aspect-ratio: $aspect-ratio,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone5 -----------------------------------------------------------------\n\n@mixin iphone5($orientation: false) {\n  $min: 320px;\n  $max: 568px;\n  $pixel-ratio: 2;\n  $aspect-ratio: '40/71';\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $device-aspect-ratio: $aspect-ratio,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone6 -----------------------------------------------------------------\n\n@mixin iphone6($orientation: false) {\n  $min: 375px;\n  $max: 667px;\n  $pixel-ratio: 2;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- iphone6 plus ------------------------------------------------------------\n\n@mixin iphone6-plus($orientation: false) {\n  $min: 414px;\n  $max: 736px;\n  $pixel-ratio: 3;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- ipad (all) --------------------------------------------------------------\n\n@mixin ipad($orientation: false) {\n  $min: 768px;\n  $max: 1024px;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation\n  ) {\n    @content;\n  }\n}\n\n// --- ipad-retina -------------------------------------------------------------\n\n@mixin ipad-retina($orientation: false) {\n  $min: 768px;\n  $max: 1024px;\n  $pixel-ratio: 2;\n\n  @include mq(\n    $min-device-width: $min,\n    $max-device-width: $max,\n    $orientation: $orientation,\n    $-webkit-device-pixel-ratio: $pixel-ratio\n  ) {\n    @content;\n  }\n}\n\n// --- orientation -------------------------------------------------------------\n\n@mixin landscape() {\n  @include mq($orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin portrait() {\n  @include mq($orientation: portrait) {\n    @content;\n  }\n}\n","@function ms-calc($Value, $Base: $ms-base, $Ratio: $ms-ratio) {\n  \n  // If pow exists use it.\n  // It supports non-interger values!\n  @if $MS-pow-exists {\n\n    // The formula for figuring out modular scales is:\n    // (r^v)*b\n    @return pow($Ratio, $Value) * $Base;\n  }\n\n  // If not, use ms-pow().\n  // Not as fast or capable of non-integer exponents.\n  @else {\n    @return ms-pow($Ratio, $Value) * $Base;\n  }\n}","// ==================================================\n// Colors\n// ==================================================\n\n@function hsb($h-hsb, $s-hsb, $b-hsb, $a: 1) {\n  @if $b-hsb == 0 {\n    @return hsla(0, 0, 0, $a)\n  } @else {\n    $l-hsl: ($b-hsb/2) * (2 - ($s-hsb/100));\n    $s-hsl: ($b-hsb * $s-hsb) / if($l-hsl < 50, $l-hsl * 2, 200 - $l-hsl * 2);\n    @return hsla($h-hsb, $s-hsl, $l-hsl, $a);\n  }\n}\n\n// ==================================================\n// Numbers & Math\n// ==================================================\n\n@function strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n// ==================================================\n// Typography\n// ==================================================\n\n// map the breakpoints\n// — font-size for <html>\n@mixin font-size($fs-map) {\n  @each $fs-breakpoint, $fs-font-size in $fs-map {\n    @if $fs-breakpoint == null {\n      font-size: $fs-font-size;\n    }\n    @else {\n      @include mq($min-width: map-get($breakpoints, $fs-breakpoint)) {\n        font-size: $fs-font-size;\n      }\n    }\n  }\n}\n\n// — line-height for <body>\n@mixin line-height($fs-map) {\n  @each $fs-breakpoint, $fs-font-size in $fs-map {\n    @if $fs-breakpoint == null {\n      line-height: $base-line-height * strip-unit($fs-font-size) / 100;\n    }\n    @else if $fs-breakpoint == xxl {\n      @include mq($min-width: map-get($breakpoints, $fs-breakpoint)) {\n        line-height: $base-line-height * strip-unit(map-get($font-sizes, l)) / 100;\n      }\n    }\n    @else {\n      @include mq($min-width: map-get($breakpoints, $fs-breakpoint)) {\n        line-height: $base-line-height * strip-unit($fs-font-size) / 100;\n      }\n    }\n  }\n}\n\n@function ms-line-height($level) {\n  @return map-get($ms-line-heights, $level);\n}\n\n@mixin heading($heading, $heading-color: $black, $heading-weight: 400) {\n  @if map-has-key($headings, $heading) {\n    $properties: map-get($headings, $heading);\n\n    font-size: nth($properties, 1);\n    line-height: nth($properties, 2);\n    margin-top: nth($properties, 3);\n    margin-bottom: nth($properties, 4);\n    font-weight: $heading-weight;\n    color: $heading-color;\n  }\n}\n\n\n\n// ==================================================\n// Numbers & Math\n// ==================================================\n\n@mixin list-border-radius {\n  &:first-of-type {\n    border-top-left-radius: $base-border-radius;\n    border-top-right-radius: $base-border-radius;\n  }\n  &:last-of-type {\n    border-bottom-left-radius: $base-border-radius;\n    border-bottom-right-radius: $base-border-radius;\n  }\n}\n"]}