{"version":3,"file":"components.build.js","sources":["../../../../src/js/components/dom-load.js","../../../../src/js/components/component.js","../../../../src/js/components/magnifying-glass.js","../../../../src/js/lib/utils.js","../../../../src/js/components/media/media.js","../../../../src/js/components/media/audio-player.js","../../../../src/js/components/svg-lib/svg-dragndrop.js","../../../../src/js/components/svg-lib/svg-draw.js","../../../../src/js/components/svg-lib/svg-text.js","../../../../src/js/components/svg.js","../../../../src/js/components/sortable.js","../../../../src/js/components/svg-lib/svg-radial-menu.js","../../../../src/js/components/editor/editor.js","../../../../src/js/components/keywords.js","../../../../src/js/components/test-quiz.js","../../../../src/js/components/fullscreen.js","../../../../src/js/components/user-text.js","../../../../src/js/components/media/audio-player-normal.js","../../../../src/js/components/media/audio-player-simple.js","../../../../src/js/components/fake-map.js","../../../../src/js/components/media/video.js","../../../../src/js/components/selectable.js","../../../../src/js/components/new-table.js","../../../../src/js/components/draggable.js","../../../../src/js/components/window-load.js","../../../../src/js/components/components.js","../../../../src/js/lib/unsupported-browsers.js"],"sourcesContent":["\nconst domLoadComponents = () => {\n  console.log('domLoad:components');\n\n  // instantiate\n\n  // run\n\n};\n\nexport default domLoadComponents;\n","export default class Component {\n  constructor($element) {\n    this.target = $element;\n    this.$slide = this.target.closest('.slide');\n    this.lang = document.documentElement.getAttribute('lang');\n\n    if (!HISTORYLAB.import.done) {\n\n      if (this.$slide) {\n        this.$buttonFeedback = this.$slide.querySelector('[data-feedback-button]');\n\n        if (this.$buttonFeedback) {\n          this.$buttonFeedbackText = this.$buttonFeedback.querySelector('span');\n        }\n      }\n\n\n      this.showFeedback = this.showFeedback.bind(this);\n    }\n  }\n\n  showFeedback() {\n    if (this.$buttonFeedback && this.$buttonFeedback.classList.contains('button-hidden')) {\n      this.$buttonFeedback.classList.remove('button-hidden');\n    }\n  }\n\n  hideFeedback() {\n    this.$buttonFeedback.classList.add('button-hidden');\n  }\n}\n","import Component from './component';\n\nexport default class MagnifyingGlass extends Component {\n  // https://www.youtube.com/watch?v=e8IwM3iqnL0\n  constructor($element) {\n    super($element);\n    // SVG lupa a ještě dynamicky měnícího se SVG,\n    // který není na počátku známé?\n    // if (el.nodeName === 'svg') {\n    //   console.log('SVG');\n    //   el.children[0].getAttribute('xlink:href')\n    // }\n    this.$element = document.querySelector('[data-lupa]');\n    this.$canvas = document.querySelector('[data-lupa-canvas]');\n    this.ctx = this.$canvas.getContext('2d');\n\n    this._onStart = this._onStart.bind(this);\n    this._onMove = this._onMove.bind(this);\n    this._onEnd = this._onEnd.bind(this);\n    this._update = this._update.bind(this);\n    this._onResize = this._onResize.bind(this);\n\n    this.zoomGlassSize = 230;\n    this.targetBCR = null;\n    this.zoomed = 0;\n    this.targetZoomed = 0;\n\n    this.x = 0;\n    this.y = 0;\n    this.trackingTouch = false;\n\n    this._addEventListeners();\n    this._initCanvas();\n    this._onResize();\n\n    window.requestAnimationFrame(this._update);\n  }\n\n  _initCanvas() {\n    const width = this.zoomGlassSize;\n    const height = this.zoomGlassSize;\n    // if retina makes canvas more dense\n    const dPR = window.devicePixelRation || 1;\n    this.$canvas.width = width * dPR;\n    this.$canvas.height = height * dPR;\n\n    this.$canvas.style.width = `${width}px`;\n    this.$canvas.style.height = `${height}px`;\n\n    this.ctx.scale(dPR, dPR);\n  }\n\n  _onResize() {\n    this.targetBCR = this.target.getBoundingClientRect();\n  }\n\n  _onStart(event) {\n    if (event.target !== this.target) {\n      return;\n    }\n\n    event.preventDefault();\n    this.x = event.pageX || event.touches[0].pageX;\n    this.y = event.pageY || event.touches[0].pageY;\n\n    this.trackingTouch = true;\n    this.targetZoomed = 1;\n    this.zoomed = 0;\n\n    window.requestAnimationFrame(this._update);\n  }\n\n  _onMove(event) {\n    if (!this.trackingTouch) {\n      return;\n    }\n\n    this.x = event.pageX || event.touches[0].pageX;\n    this.y = event.pageY || event.touches[0].pageY;\n  }\n\n  _onEnd() {\n    if (this.targetZoomed) {\n      // show OK button or feedback\n      this.showFeedback();\n    }\n\n    this.targetZoomed = 0;\n    this.trackingTouch = false;\n  }\n\n  _update() {\n    const TAU = Math.PI * 2;\n    const MAX_RADIUS = 100;\n    const radius = this.zoomed * MAX_RADIUS;\n\n    this.targetBCR = this.target.getBoundingClientRect();\n\n    // local coordinates (ratio <0,1>)\n    const ratioX =\n      // min. 0\n      Math.max(0,\n        // max. 1\n        Math.min(1, ((this.x - this.targetBCR.left) / this.targetBCR.width))\n      );\n    // console.log(ratioX);\n    const ratioY =\n      // min. 0\n      Math.max(0,\n        // max. 1\n        Math.min(1, ((this.y - this.targetBCR.top) / this.targetBCR.height))\n      );\n    // console.log(ratioY);\n\n    // actual zooming (scaling)\n    const imageScale = 2.5;\n    const scaledTargetWidth = this.targetBCR.width * imageScale;\n    const scaledTargetHeight = this.targetBCR.height * imageScale;\n\n    // Firefox on Windows has a bug because of the shadow\n    if (!(platform.os.family.indexOf('Windows') > -1 && platform.name.indexOf('Firefox') > -1)) {\n      // Shadow.\n      this.ctx.shadowColor = 'rgba(0,0,0,0.4)';\n      this.ctx.shadowBlur = 12;\n      this.ctx.shadowOffsetY = 8;\n    }\n\n    // Background.\n    this.ctx.clearRect(0, 0, this.zoomGlassSize, this.zoomGlassSize);\n    this.ctx.fillStyle = '#fff';\n    this.ctx.beginPath();\n    this.ctx.arc(\n      // x\n      this.zoomGlassSize / 2,\n      // y\n      (this.zoomGlassSize - 10) - radius,\n      // radius, startAngle, endAngle\n      radius, 0, TAU);\n    this.ctx.closePath();\n    this.ctx.fill();\n\n    // save the default state (without image)\n    this.ctx.save();\n\n    // Zoomed image.\n    this.ctx.beginPath();\n    this.ctx.arc(\n      // x\n      this.zoomGlassSize / 2,\n      // y\n      (this.zoomGlassSize - 10) - (radius + 1),\n      // radius, startAngle, endAngle\n      radius * 1.03, 0, TAU);\n    this.ctx.clip();\n    this.ctx.closePath();\n    this.ctx.drawImage(this.target,\n      // dx and dy (left and top)\n      (-ratioX * scaledTargetWidth) + (this.zoomGlassSize / 2),\n      (-ratioY * scaledTargetHeight) + (this.zoomGlassSize / 2),\n      // scaled width and height\n      scaledTargetWidth, scaledTargetHeight);\n\n    // go back to default state (without image)\n    // so next update starts fresh\n    this.ctx.restore();\n\n    // Position the parent $element.\n    this._setTransformStyle(this.x, this.y);\n\n    // Update the zoom value.\n    this.zoomed += (this.targetZoomed - this.zoomed) / 4;\n\n    // Schedule another update if the zoom is fairly non-zero.\n    if (this.zoomed > 0.001) {\n      // if (this.zoomed > 0.001 && this.zoomed < 0.998) {\n      window.requestAnimationFrame(this._update);\n      // } else if (this.zoomed >= 0.998) {\n      //   this.zoomed = 1;\n    } else {\n      this.zoomed = 0;\n    }\n  }\n\n  _addEventListeners() {\n    // touch events\n    document.addEventListener('touchstart', this._onStart);\n    document.addEventListener('touchmove', this._onMove);\n    document.addEventListener('touchend', this._onEnd);\n    // mouse events\n    document.addEventListener('mousedown', this._onStart);\n    document.addEventListener('mousemove', this._onMove);\n    document.addEventListener('mouseup', this._onEnd);\n    // window events\n    window.addEventListener('resize', this._onResize);\n  }\n\n  _setTransformStyle(x, y) {\n    const halfYoomGlassSize = this.zoomGlassSize / 2;\n    let betterX;\n    let betterY;\n\n    if (x - halfYoomGlassSize < 0) {\n      betterX = Math.abs(x) + halfYoomGlassSize + 18;\n    }\n    else if (x + halfYoomGlassSize > window.innerWidth) {\n      betterX = window.innerWidth - (x - window.innerWidth) - this.zoomGlassSize;\n    }\n    else {\n      betterX = x;\n    }\n\n    if (y - this.zoomGlassSize < 0) {\n      betterY = Math.abs(y) + this.zoomGlassSize + 18;\n    }\n    else {\n      betterY = y;\n    }\n\n    this.$element.style.transform = `translate(${betterX}px, ${betterY}px)`;\n  }\n}\n","export function __isTouchEnabled() {\n  return ('ontouchstart' in window) ||\n         (navigator.maxTouchPoints > 0) ||\n         (navigator.msMaxTouchPoints > 0);\n}\n\n// Is touch: mql.matches === true\nexport function __isTouchOnly() {\n  return window.matchMedia('(hover: none)').matches;\n}\n\nexport function imageIsLoaded(src) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = src;\n  });\n}\n\nexport function __createNewCustomEvent(name, options = {}, data = null) {\n  const defaults = {\n    // https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Event_bubbling\n    bubbles: true,\n    // cancelBubble\n    // stopPropagation()\n    // cancelable\n    // composed\n    // currentTarget\n    // defaultPrevented\n    // preventDefault()\n    // eventPhase\n    // returnValue\n    // preventDefault()\n    // defaultPrevented\n    // target\n    // timeStamp\n    // type\n    // isTrusted\n  };\n\n  const properties = Object.assign(defaults, options);\n\n  return new CustomEvent(name, {\n    detail: data,\n    ...properties,\n  });\n}\n\nexport function __dispatchEvent($element, type, options, payload) {\n  const event = __createNewCustomEvent(type, options, payload);\n\n  // console.log(event);\n  $element.dispatchEvent(event);\n}\n\n/* https://plainjs.com/javascript/events/trigger-an-event-11/ */\nexport function __triggerEvent(el, type) {\n\n  if ('createEvent' in document) {\n    // modern browsers, IE9+\n    const e = new Event(type);\n    el.dispatchEvent(e);\n  } else {\n    // IE 8\n    const e = document.createEventObject();\n    e.eventType = type;\n    el.fireEvent('on'+e.eventType, e);\n  }\n}\n\nexport function __keycodeIsPrintableCharacter(keycode) {\n\n  const valid =\n    (keycode > 47 && keycode < 58) || // number keys\n    keycode == 32 || keycode == 13 || // spacebar & return key(s) (if you want to allow carriage returns)\n    (keycode > 64 && keycode < 91) || // letter keys\n    (keycode > 95 && keycode < 112) || // numpad keys\n    (keycode > 185 && keycode < 193) || // ;=,-./` (in order)\n    (keycode > 218 && keycode < 223); // [\\]' (in order)\n  // https://stackoverflow.com/questions/12467240/determine-if-javascript-e-keycode-is-a-printable-non-control-character#answer-12467610\n\n  return valid;\n\n}\n\nexport function __isObject(item) {\n  return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\n// https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge\n// Maybe use lodash ? https://lodash.com/docs/4.17.10#defaultsDeep\nexport function __mergeDeep(target, source) {\n  const output = Object.assign({}, target);\n  if (__isObject(target) && __isObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (__isObject(source[key])) {\n        if (!(key in target)) {\n          Object.assign(output, { [key]: source[key] });\n        } else {\n          output[key] = __mergeDeep(target[key], source[key]);\n        }\n      } else {\n        Object.assign(output, { [key]: source[key] });\n      }\n    });\n  }\n  return output;\n}\n\nexport function __isObjectEmpty(object) {\n  return !Object.keys(object).length;\n}\n\nexport function __insertBefore(newNode, referenceNode) {\n  referenceNode.parentNode.insertBefore(newNode, referenceNode);\n}\n\nexport function __insertAfter(newNode, referenceNode) {\n\n  referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n\n}\n\nexport function __getRealDimensions(el, translated = true) {\n\n  const clonedElement = el.cloneNode(true);\n\n  clonedElement.style.visibility = 'hidden';\n  clonedElement.style.display = 'block';\n\n  __insertAfter(clonedElement, el);\n\n  const elDimensions = clonedElement.getBoundingClientRect();\n  const elPosition = (translated) ? __positionTranslated(clonedElement) : __position(clonedElement);\n\n\n  __remove(clonedElement);\n\n  return {\n    width: elDimensions.width,\n    height: elDimensions.height,\n    top: elPosition.top,\n    left: elPosition.left,\n  };\n\n}\n\nexport function __remove(el /* :HTMLElement */) {\n\n  el.parentNode.removeChild(el);\n\n}\n\n\nexport function __getHTML(node) {\n\n  if (!node || !node.tagName) { return; }\n  if (node.outerHTML) { return node.outerHTML; }\n\n  // polyfill:\n  const wrapper = document.createElement('div');\n  wrapper.appendChild(node.cloneNode(true));\n  return wrapper.innerHTML;\n\n}\n\nexport function __getText(el) {\n  return el.innerText || el.textContent;\n}\n\nexport function __globalPosition(event) {\n  // d3.event\n  // The current event, if any. This is set during the invocation of an event listener, and is reset after the listener terminates. Use this to access standard event fields such as event.timeStamp and methods such as event.preventDefault. While you can use the native event.pageX and event.pageY, it is often more convenient to transform the event position to the local coordinate system of the container that received the event using d3.mouse, d3.touch or d3.touches.\n  // If you use Babel, Webpack, or another ES6-to-ES5 bundler, be aware that the value of d3.event changes during an event! An import of d3.event must be a live binding, so you may need to configure the bundler to import from D3’s ES6 modules rather than from the generated UMD bundle; not all bundlers observe jsnext:main. Also beware of conflicts with the window.event global.\n  return {\n    x: event.pageX,\n    y: event.pageY,\n  };\n}\n\nexport function __localPosition(container) {\n  // d3.mouse\n  // Returns the x and y coordinates of the current event relative to the specified container. The container may be an HTML or SVG container element, such as a G element or an SVG element. The coordinates are returned as a two-element array of numbers [x, y].\n  // BUG: d3.mouse doesn’t observe CSS transform on Firefox — https://github.com/d3/d3-selection/issues/81\n  // TEMPORARY FIX: https://github.com/d3/d3-selection/issues/191#issuecomment-474987103\n\n  let position = [];\n\n  if (platform.name === 'Firefox' && d3.event.target.closest('.half-slide-active')) {\n    // this works for Firefox even in transformed container\n    // if (platform.name === 'Firefox')\n    // but creates another bug when used on top of another SVG element (with different viewbox?),\n    // so make temporary fix only of .half-slide-active to fix the orginal bug with new bug\n    // console.log(d3.event.target.closest('.half-slide-active'));\n    position = [\n      d3.event.offsetX,\n      d3.event.offsetY,\n    ];\n  } else {\n    // this works for Chrome\n    position = d3.mouse(container);\n  }\n\n  return {\n    x: d3.format('.0f')(position[0]),\n    y: d3.format('.0f')(position[1]),\n  };\n}\n\nexport function __positionTranslated(el) {\n\n\n  const curTransform = new WebKitCSSMatrix(window.getComputedStyle(el).webkitTransform);\n\n  const body = document.body;\n\n  const scrollTop = window.pageYOffset || body.scrollTop;\n  const scrollLeft = window.pageXOffset || body.scrollLeft;\n\n  return {\n    left: el.offsetLeft + curTransform.m41,\n    top: el.offsetTop + curTransform.m42,\n  };\n\n}\n\nexport function __position(el) {\n\n  const elAttibutes = el.getBoundingClientRect();\n  const body = document.body;\n\n  const scrollTop = window.pageYOffset || body.scrollTop;\n  const scrollLeft = window.pageXOffset || body.scrollLeft;\n\n  return {\n    left: elAttibutes.left + scrollLeft,\n    top: elAttibutes.top + scrollTop,\n    height: elAttibutes.height,\n    width: elAttibutes.width,\n  };\n}\n\n// TODO: check for https://github.com/vladocar/nanoJS/\nexport function __toggleClass(element, cls) {\n  if (__hasClass(element, cls)) {\n    __removeClass(element, cls);\n  } else {\n    __addClass(element, cls);\n  }\n}\n\nexport function __hasClass(element, cls) {\n  // if there are no elements or classes, we're done\n  if (!element || !cls) return false;\n  return (element.classList) ? element.classList.contains(cls) : (`${element.className} `).indexOf(`${cls} `) > -1;\n}\n\nexport function __addClass(elements, classes) {\n  let _elements = elements;\n  let _classes = classes;\n\n  // if there are no elements or classes, we're done\n  if (!_elements || !_classes) { return; }\n\n  if (typeof (_elements) === 'string') {\n    // if we have a selector, get the chosen _elements\n    _elements = document.querySelectorAll(_elements);\n  } else if (_elements.tagName) {\n    // if we have a single DOM element, make it an array to simplify behavior\n    _elements = [_elements];\n  }\n\n  if (typeof (_classes) === 'string') {\n    // make an array from string _classes\n    _classes = _classes.split(' ');\n  } else {\n    console.log('Class argument must be string with spaces in between class names.');\n    return;\n  }\n\n  // add class to all chosen _elements\n  for (let i = 0; i < _elements.length; i += 1) {\n    // check classList support\n    if (_elements[i].classList) {\n      _elements[i].classList.add(..._classes);\n    } else if (!__hasClass(_elements[i], ..._classes)) {\n      for (let j = 0; j < _classes.length; j += 1) {\n        _elements[i].classes += ` ${_classes[j]}`;\n      }\n    }\n  }\n}\n\nexport function __removeClass(elements, classes) {\n  let _elements = elements;\n  let _classes = classes;\n\n  // if there are no elements or classes, we're done\n  if (!_elements || !_classes) { return; }\n\n  if (typeof (_elements) === 'string') {\n    // if we have a selector, get the chosen _elements\n    _elements = document.querySelectorAll(_elements);\n  } else if (_elements.tagName) {\n    // if we have a single DOM element, make it an array to simplify behavior\n    _elements = [_elements];\n  }\n\n  if (typeof (_classes) === 'string') {\n    // make an array from string _classes\n    _classes = _classes.split(' ');\n  } else {\n    console.log('Class argument must be string with spaces in between class names.');\n    return;\n  }\n\n  // remove class from all chosen _elements\n  for (let i = 0; i < _elements.length; i += 1) {\n    // check classList support\n    if (_elements[i].classList) {\n      _elements[i].classList.remove(..._classes);\n    } else {\n      for (let j = 0; j < _classes.length; j += 1) {\n        _elements[i].className = _elements[i].className.replace(new RegExp(`\\\\b${classes[j]}\\\\b`, 'g'), '');\n      }\n    }\n  }\n}\n","import { __createNewCustomEvent } from '../../lib/utils';\n\nconst mediaEvents = {\n  playchange: __createNewCustomEvent('playchange'),\n  timechange: __createNewCustomEvent('timechange'),\n  canplaystart: __createNewCustomEvent('canplaystart'),\n};\n\nfunction stopPlayingVideoPlayers($players) {\n  // pause all other playing media tracks\n  $players.forEach(($player) => {\n    const $media = $player.querySelector('audio') || $player.querySelector('video');\n    if ($media && !$media.paused) {\n      $media.pause();\n      $player\n        .querySelector('[data-player-control]')\n        .setAttribute('data-player-control', 'paused');\n    }\n  });\n}\n\nfunction getSecondsMinutesFormat(seconds) {\n  const duration = {\n    seconds: Math.floor(seconds),\n    minutes: Math.floor(seconds / 60),\n  };\n\n  duration.seconds = (duration.seconds - (duration.minutes * 60)).toString(10);\n\n  return `${duration.minutes}:${(`0${duration.seconds}`).slice(-2)}`;\n}\n\nexport {\n  getSecondsMinutesFormat,\n  stopPlayingVideoPlayers,\n  mediaEvents,\n};\n","import Component from '../component';\nimport { getSecondsMinutesFormat, stopPlayingVideoPlayers } from './media';\n\nexport default class AudioPlayer extends Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor($element) {\n    super($element);\n  }\n\n  // TODO: move to audio-simple.js\n  static addEventListeners($item, showFeedback) {\n    const $players = document.querySelectorAll('[data-player-audio]');\n    const $audio = $item.querySelector('audio');\n    const $playButton = $item.querySelector('[data-player-control]');\n    const $timeLeft = $item.querySelector('[data-audio-time-left]');\n\n    $playButton.addEventListener('click', (event) => {\n      if ($playButton.getAttribute('data-player-control') === 'paused') {\n        // TODO: abstract\n        stopPlayingVideoPlayers($players);\n        $audio.play();\n        $playButton.setAttribute('data-player-control', 'playing');\n      } else {\n        // TODO: abstract\n        $audio.pause();\n        $playButton.setAttribute('data-player-control', 'paused');\n      }\n\n      showFeedback();\n\n      event.stopPropagation();\n    }, false);\n\n    // do not propagate audio control events higher into the dom\n    $playButton.addEventListener('mousedown', (event) => {\n      event.stopPropagation();\n    }, false);\n\n    $audio.addEventListener('timeupdate', () => {\n      $timeLeft.innerText = getSecondsMinutesFormat($audio.currentTime);\n    });\n\n    $audio.addEventListener('ended', () => {\n      $playButton.setAttribute('data-player-control', 'paused');\n    });\n  }\n}\n","export default class SVGDragNDrop {\n  // static drag(id) {\n  //   d3.drag()\n  //     .on('start', () => {\n  //       SVGDragNDrop.start(id);\n  //     })\n  //     .on('drag', () => {\n  //       SVGDragNDrop.dragged(id);\n  //     })\n  //     .on('end', () => {\n  //       SVGDragNDrop.end(id);\n  //     });\n  // }\n\n  static start(element) {\n    d3.select(element).raise().classed('is-dragged', true);\n  }\n\n  static dragged(element, diff) {\n\n    d3.select(element)\n      .attr('x', (d3.event.x - diff.x).toFixed())\n      .attr('y', (d3.event.y - diff.y).toFixed());\n  }\n\n  static end(element, type, diff) {\n\n    d3.select(element)\n      .attr('x', (d3.event.x - diff.x).toFixed())\n      .attr('y', (d3.event.y - diff.y).toFixed())\n      // neumožňuje v jiných funkcí s tímto objektem dále pracovat,\n      // protože pracují s id\n      // .attr('id', `${type}-${d3.event.x.toFixed()}-${d3.event.y.toFixed()}`)\n      .classed('is-dragged', false);\n  }\n}\n","import { __localPosition, __dispatchEvent } from '../../lib/utils';\n\n// import SVG from '../svg';\nimport SVGDragNDrop from './svg-dragndrop';\nimport SVG from '../svg';\n\nexport default class SVGDraw {\n  // static selectPath(svg) {\n  //   // https://bl.ocks.org/mbostock/8027637\n  // }\n\n  static renderPath($svg, color, callback) {\n    if (d3.event.sourceEvent.target.nodeName === 'image') {\n\n      const line = d3.line()\n        // removed smooth curve to get rid of loong decimals\n        // see https://github.com/d3/d3-path/issues/10\n        .curve(d3.curveLinear); // _dragStarted\n\n      const format = d3.format('.0f');\n      const d = d3.event.subject;\n      // origin\n      let x0 = format(d3.event.x);\n      let y0 = format(d3.event.y);\n\n      const id = `${$svg.id}_path-${x0}-${y0}`;\n\n      const active = d3.select(`#${$svg.id} .svg-view`).append('svg:path')\n        // .attr('marker-start', 'url('#marker-circle-blue')')\n        // .attr('marker-end', 'url('#marker-arrow-blue')')\n        .attr('data-svg-path', '')\n        .attr('class', `svg-path ${color}`)\n        .attr('id', id)\n        .datum(d);\n\n      // github.com/d3/d3-drag#event_on\n      d3.event\n        .on('drag', () => {\n          // current position\n          const x1 = format(d3.event.x);\n          const y1 = format(d3.event.y);\n          // distance from origin\n          const dx = x1 - x0;\n          const dy = y1 - y0;\n\n          // if the distance of drag event is too large, make new origin\n          if ((dx * dx) + (dy * dy) > 300) d.push([x0 = x1, y0 = y1]);\n          // smooth line, correct last point\n          else d[d.length - 1] = [x1, y1];\n\n          active.attr('d', line);\n        })\n        .on('end', () => {\n          const $thisPath = d3.select(`#${id}`);\n          if ($thisPath) {\n            if ($thisPath.attr('d')) {\n              if ($thisPath.attr('d').length < 40) {\n                $thisPath.remove();\n              } else {\n                // dispatch event that svg has changed\n                __dispatchEvent(document, 'svg.change', {}, {\n                  svg: {\n                    id: $svg.id,\n                    task: 'create',\n                    node: $thisPath.node(),\n                    nodeName: $thisPath.node().nodeName,\n                    contextMenu: false,\n                  },\n                });\n              }\n            } else if (!$thisPath.attr('d')) {\n              $thisPath.remove();\n            }\n          }\n\n          callback();\n        });\n\n      // add events to element\n      SVGDraw.pathEventsManager($svg, d3.select(`#${id}`).node());\n    }\n  }\n\n  // Draw a SVG circle on click\n  static createCircle($svg, color) {\n    const d3svg = d3.select(`#${$svg.id} .svg-view`);\n    // const canvas = document.querySelector(`#${$svg.id} .svg-view`);\n    const localPosition = __localPosition($svg);\n    const id = `${$svg.id}_circle-${localPosition.x}-${localPosition.y}`;\n\n    // circle wrapper\n    const foreignObject = d3svg.append('svg:foreignObject')\n      .attr('data-svg-circle', '')\n      .attr('id', id)\n      .attr('x', localPosition.x)\n      .attr('y', localPosition.y)\n      .attr('width', 1)\n      .attr('height', 1);\n\n    const circle = foreignObject.append('xhtml:div')\n      .attr('class', `svg-circle ${color}`);\n\n    const $element = document.querySelector(`#${id}`);\n\n    // add events to element\n    SVGDraw.circleEventsManager($svg, $element);\n\n    // dispatch event that svg has changed\n    __dispatchEvent(document, 'svg.change', {}, {\n      svg: {\n        id: $svg.id,\n        task: 'create',\n        node: $element,\n        nodeName: $element.nodeName,\n        contextMenu: false,\n      },\n    });\n  }\n\n  static pathEventsManager($svg, $element) {\n    d3.select(`#${$element.id}`).on('click', () => {\n      // dispatch event that svg has changed\n      __dispatchEvent(document, 'svg.change', {}, {\n        svg: {\n          id: $svg.id,\n          task: 'remove',\n          node: d3.event.target,\n          nodeName: d3.event.target.nodeName,\n          contextMenu: false,\n        },\n      });\n\n      d3.select(`#${$element.id}`).remove();\n\n      d3.event.preventDefault();\n    }, false);\n  }\n\n  static circleEventsManager($svg, $element) {\n    const $canvas = document.querySelector(`#${$svg.id} .svg-view`);\n\n    // TODO:\n    // standalone function\n    // same for all draggable svg elements\n    let elementPosition = [\n      $element.getAttribute('x'),\n      $element.getAttribute('y'),\n    ];\n    let diff = {};\n\n    const selection = d3.selectAll(`#${$element.id} > div`);\n    d3.select(selection.nodes()[0]).on('click', () => {\n\n      // dispatch event that svg has changed\n      __dispatchEvent(document, 'svg.change', {}, {\n        svg: {\n          id: $svg.id,\n          task: 'remove',\n          node: $element,\n          nodeName: $element.nodeName,\n          contextMenu: false,\n        },\n      });\n\n      // dispatch event that drop item was deleted\n      const idParts = $element.id.split('_');\n      if (idParts[idParts.length - 1] === 'dropItem') {\n        __dispatchEvent(document, 'svg.drop.delete', {}, {\n          item: {\n            id: idParts[1],\n            $object: $element.firstChild,\n          },\n        });\n      }\n\n      d3.event.target.closest('foreignObject').remove();\n    })\n      .call(d3.drag()\n        .container($canvas)\n        .subject($element)\n        .on('start', () => {\n          diff = {\n            x: d3.event.x - elementPosition[0],\n            y: d3.event.y - elementPosition[1],\n          };\n\n          SVGDragNDrop.start($element);\n        })\n        .on('drag', () => {\n          SVGDragNDrop.dragged($element, diff);\n        })\n        .on('end', () => {\n          const oldXCoordinate = elementPosition[0];\n          const oldYCoordinate = elementPosition[1];\n          let taskType = 'move';\n\n          SVGDragNDrop.end($element, 'circle', diff);\n\n          elementPosition = [\n            $element.getAttribute('x'),\n            $element.getAttribute('y'),\n          ];\n\n          // if clone is changed, then dispatch create event\n          if (SVG.removeCloneConnectionManager($element)) taskType = 'create';\n\n          if (elementPosition[0] !== oldXCoordinate || elementPosition[1] !== oldYCoordinate) {\n            // dispatch event that svg has changed\n            __dispatchEvent(document, 'svg.change', {}, {\n              svg: {\n                id: $svg.id,\n                task: taskType,\n                node: $element,\n                nodeName: $element.nodeName,\n                contextMenu: false,\n              },\n            });\n          }\n        }));\n  }\n}\n","import {\n  __addClass,\n  __removeClass,\n  __hasClass,\n  __dispatchEvent,\n} from '../../lib/utils';\n\nimport SVG from '../svg';\nimport SVGDragNDrop from './svg-dragndrop';\n\nexport default class SVGText {\n  static createText(maxLength = 333, minLength = 2) {\n    const $svg = document.querySelector('[data-svg-active=\"true\"]');\n    const svgID = $svg.id;\n    const svgGroup = d3.select($svg).select('.svg-view');\n\n    // const $canvas = $svg.querySelector('.svg-view');\n    const $radialMenu = document.querySelector('[data-radial-menu]');\n    const localPosition = {\n      x: $radialMenu.getAttribute('data-local-x'),\n      y: $radialMenu.getAttribute('data-local-y'),\n    };\n    const id = `${svgID}_svg-text-${localPosition.x}-${localPosition.y}`;\n    const hash = `#${id}`;\n    const orientation = {\n      x: (svgGroup.attr('width') - localPosition.x) > 320 ? 'right' : 'left',\n      y: (svgGroup.attr('height') - localPosition.y) > 60 ? 'bottom' : 'top',\n    };\n    // let firstWrite = true;\n\n    // text wrapper\n    const foreignObject = svgGroup.append('svg:foreignObject')\n      .attr('class', `svg-text orientation-${orientation.x} orientation-${orientation.y}`)\n      .attr('data-svg-text', '')\n      .attr('x', localPosition.x)\n      .attr('y', localPosition.y)\n      .attr('width', 1)\n      .attr('height', 1);\n\n    // create visual point of interest for text input\n    foreignObject.append('xhtml:div')\n      .attr('class', 'svg-circle svg-circle-text');\n    // create text input\n    const textarea = foreignObject.append('xhtml:textarea')\n      .attr('maxlength', maxLength)\n      .attr('tabindex', '-1')\n      .attr('id', id)\n      .attr('class', 'svg-textarea')\n      .attr('data-save', '')\n      .attr('data-svg-textarea-target', svgID);\n\n    // set focus to the new text input\n    $svg.querySelector(hash).focus();\n\n    // add events to element\n    SVGText.textEventsManager($svg, textarea.node(), true, minLength);\n  }\n\n  static textEventsManager($svg, $node, isCreated, minLength = 2) {\n    const $canvas = $svg.querySelector('.svg-view');\n    const hash = `#${$node.id}`;\n    let firstWrite = isCreated;\n    let oldText = $node.value;\n\n    // TODO\n    // standalone function\n    // same for all draggable svg elements\n    const $element = $svg.querySelector(hash).parentElement;\n    let elementPosition = [\n      $element.getAttribute('x'),\n      $element.getAttribute('y'),\n    ];\n    let diff = {};\n\n    d3.select(hash)\n      // drag & drop\n      .call(d3.drag()\n        .container($canvas)\n        .subject($element)\n        .on('start', () => {\n          diff = {\n            x: d3.event.x - elementPosition[0],\n            y: d3.event.y - elementPosition[1],\n          };\n\n          SVGDragNDrop.start($element);\n        })\n        .on('drag', () => {\n          SVGDragNDrop.dragged($element, diff);\n        })\n        .on('end', () => {\n          const oldXCoordinate = elementPosition[0];\n          const oldYCoordinate = elementPosition[1];\n          let taskType = 'move';\n\n          SVGDragNDrop.end($element, 'text', diff);\n\n          elementPosition = [\n            $element.getAttribute('x'),\n            $element.getAttribute('y'),\n          ];\n\n          if (!firstWrite && (elementPosition[0] !== oldXCoordinate || elementPosition[1] !== oldYCoordinate)) {\n            // if clone is changed, then dispatch create event\n            if (SVG.removeCloneConnectionManager($element.childNodes[1])) taskType = 'create';\n\n            // dispatch event that svg has changed\n            __dispatchEvent(document, 'svg.change', {}, {\n              svg: {\n                id: $svg.id,\n                task: taskType,\n                node: $element.childNodes[1],\n                nodeName: $element.childNodes[1].nodeName,\n                contextMenu: false,\n              },\n            });\n          }\n        }))\n      // keystroke\n      // control height of the text input on every key stroke\n      .on('keyup', () => {\n        SVGText.updateTextareaHeight(d3.event.target);\n      })\n      // loss of focus\n      .on('blur', () => {\n        const $target = d3.event.target;\n        const value = $target.value;\n        let taskType;\n        let wrongBool = false;\n\n        if (value.length === 0) {\n          SVG.removeItem(false, hash);\n          return;\n        }\n        if (value.length < minLength) {\n          __addClass($target, 'is-wrong');\n          wrongBool = true;\n        } else if ((value.length >= minLength) && __hasClass($target, 'is-wrong')) {\n          __removeClass($target, 'is-wrong');\n          wrongBool = false;\n        }\n\n        if (oldText !== value) {\n          if (firstWrite) {\n            taskType = 'create';\n            firstWrite = false;\n          } else {\n            taskType = 'change';\n          }\n          oldText = value;\n          // if clone is changed, then dispatch create event\n          if (SVG.removeCloneConnectionManager($target)) taskType = 'create';\n\n          // dispatch event that svg has changed\n          __dispatchEvent(document, 'svg.change', {}, {\n            svg: {\n              id: $svg.id,\n              task: taskType,\n              node: $target,\n              nodeName: $target.nodeName,\n              isWrong: wrongBool,\n              contextMenu: false,\n            },\n          });\n        }\n\n        // update oldText\n        oldText = value;\n      })\n      // gain focus\n      .on('focus', () => {\n        d3.select($element).raise();\n      });\n  }\n\n  static updateTextareaHeight($target) {\n    $target.style.height = '1px';\n    $target.style.height = `${22 + $target.scrollHeight}px`;\n  }\n\n  static comicBubblesEventsManager($svg, $node) {\n    let firstWrite = true;\n    let oldText = $node.value;\n\n    d3.select($node).on('keyup', () => {\n      SVGText.updateTextareaHeight(d3.event.target);\n    })\n      .on('blur', () => {\n        const $target = d3.event.target;\n        const value = $target.value;\n        let taskType;\n\n        if (oldText !== value) {\n          if (firstWrite) {\n            taskType = 'create';\n            firstWrite = false;\n          } else {\n            taskType = 'change';\n            if (value.length === 0) {\n              firstWrite = true;\n            }\n          }\n          oldText = value;\n          // if clone is changed, then dispatch create event\n          if (SVG.removeCloneConnectionManager($target)) taskType = 'create';\n\n          // dispatch event that svg has changed\n          __dispatchEvent(document, 'svg.change', {}, {\n            svg: {\n              id: $svg.id,\n              task: taskType,\n              node: $target,\n              nodeName: $target.nodeName,\n              isBubble: true,\n              contextMenu: false,\n            },\n          });\n        }\n\n        // update oldText\n        oldText = value;\n      });\n  }\n}\n","/**\n * čára:\n *  - nakreslit   ( drag'n'drop )\n *  - smazat      ( left click )\n *  - radial menu ( right click)\n *    - změnit barvu\n *    - smazaní\n *    - textový komentář\n * textové pole:\n *  - vytvořit    ( right click on svg )\n *    - nic => smaže se\n *    - málo znaků => zčervená\n *    - přes řádek textu => zvětší se\n *  - změnit      ( click on and write )\n *  - smazat      ( right click on textarea )\n *  - přenést     ( drag'n'drop )\n *  - radial menu ( right click on mark )\n *    - změnit barvu\n *    - smazaní\n *    - textový komentář\n * značka:\n *  - nakreslit   ( left click on svg )\n *  - přenést     ( drag'n'drop )\n *  - smazat      ( left click on mark )\n *  - radial menu ( right click)\n *    - změnit barvu\n *    - smazaní\n *    - textový komentář\n * komiksová bublina:  ( je již vytvořena předem )\n *  - napsat dovnitř\n *    - nic => zůstane\n *    - přes řádek textu => zvětší se\n */\n/* eslint-disable brace-style */\nimport Component from './component';\nimport { __dispatchEvent, __removeClass, __addClass } from '../lib/utils';\nimport SVGDraw from './svg-lib/svg-draw';\nimport SVGText from './svg-lib/svg-text';\n\nexport default class SVG extends Component {\n  constructor($element) {\n    super($element);\n    this.$canvas = this.target.querySelector('.svg-view');\n\n    this.format = d3.format('.0f');\n\n    this._setSize();\n\n    this.init();\n    this._initWhenDone();\n  }\n\n  init() {\n    if (HISTORYLAB.import.done) return;\n\n    // duplicate source of different svg element\n    this.toDuplicate = this.target.getAttribute('data-duplicate-svg');\n\n    // make array from data-attributes (contains what kind of actions can user do on this svg)\n    const svgSpecificActions = this.target.getAttribute('data-svg-target').split(' ');\n\n    // get default color\n    const colors = this.target.getAttribute('data-svg-colors');\n\n    for (let i = 0; i < svgSpecificActions.length; i += 1) {\n      if (svgSpecificActions[i] === 'kresleni') {\n        const svgSpecificColor = colors ? colors.split(' ')[0] : 'yellow';\n        this._initPath(this.showFeedback, svgSpecificColor);\n      }\n      else if (svgSpecificActions[i] === 'znacky') {\n        const svgSpecificColor = colors ? colors.split(' ')[0] : 'blue';\n        this._initCircle(this.showFeedback, svgSpecificColor);\n      }\n      // else if (svgSpecificActions[i] === 'text') {\n      //   this._initText();\n      // }\n    }\n\n    // this._initZoom();\n    // comic bubbles if exists\n    this._initComicBubbles();\n\n    // listen events\n    this._getEvents();\n    this._getDropEvent();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _initWhenDone() {\n    if (!HISTORYLAB.import.done) return;\n\n    d3.selectAll('[data-svg-text] textarea')\n      // local context needed because of `this`\n      // eslint-disable-next-line func-names\n      .on('mouseenter', function () {\n        d3.select(this.closest('foreignObject')).raise();\n      });\n  }\n\n  _setSize() {\n    // NOTE: Cannot set `width` because of change of width when on half slide.\n    // TODO: set size on window resize\n\n    // might not be needed when inside sortable or other higher level module\n    // TODO: add condition for other higher level modules\n    // if (this.target.closest('[data-sortable-target')) return false;\n\n    const viewbox = this.target.getAttribute('viewBox').split(' ');\n    const rect = this.target.getBoundingClientRect(); // max-height: 100vh\n    // const getMaxWidthAbsolute = () => {\n    //   if (matchMedia('screen and (min-width: 1025px)').matches) {\n    //     return window.innerWidth * .8; // max-width: 62vw\n    //   }\n\n    //   return window.innerWidth;\n    // };\n    const maxWidthAbsolute = window.innerWidth;\n    const maxHeightAbsolute = window.innerHeight * .9;\n    const getHeight = () => {\n      if (!rect.height) return viewbox[3];\n      if (rect.height > viewbox[3]) return viewbox[3];\n\n      return rect.height;\n    };\n\n    const height = getHeight() > maxHeightAbsolute ? maxHeightAbsolute : getHeight();\n\n    const scale = height / viewbox[3];\n    const maxWidth = viewbox[2] * scale;\n    const setMaxWidth = scale ? `${maxWidth < maxWidthAbsolute ? maxWidth : maxWidthAbsolute}px` : '';\n\n    this.target.style.maxWidth = setMaxWidth;\n\n    // fix for svg + draggable/gallery (horizontal layout) in Chrome\n    if (\n      this.target.getAttribute('data-svg-drop')\n      && !this.target.closest('.layout-vertical')\n    ) {\n      this.target.closest('.svgs-container').style.maxWidth = setMaxWidth;\n    }\n  }\n\n  // _initZoom() {\n  //   const view = d3.select(`#${this.target.id} .svg-view`);\n  //   const size = [\n  //     view.attr('width'),\n  //     view.attr('height'),\n  //   ];\n  //   SVGZoom.zoom(this.target, view, size);\n  // }\n\n  _initPath(callback, color) {\n    d3.select(this.target)\n      .call(d3.drag()\n        .container(() => this.target)\n        .subject(() => {\n          const p = [d3.event.x.toFixed(), d3.event.y.toFixed()];\n\n          return [p, p];\n        })\n        .on('start', () => {\n          SVGDraw.renderPath(this.target, color, callback);\n        }));\n  }\n  // _initText() {\n  //   d3.select(this.target).on('click', () => {\n  //     SVGText.openTextDialog(this.target);\n  //     d3.event.preventDefault();\n  //   });\n  // }\n\n  _initCircle(callback, color) {\n    d3.select(this.target).on('click', () => {\n      const item = d3.event.target;\n      const nodeName = item.nodeName;\n      const validPlace = (nodeName === 'image');\n      // const isCircle = (__hasClass(item, 'svg-circle'));\n\n      if (!validPlace) {\n        return;\n      }\n\n      SVGDraw.createCircle(this.target, color);\n      callback();\n\n      d3.event.preventDefault();\n    }, false);\n  }\n\n  _initComicBubbles() {\n    const $comicBubbles = this.target.querySelectorAll('.svg-komiks .svg-textarea');\n\n    if ($comicBubbles) {\n      $comicBubbles.forEach(($comicBubble) => {\n        SVGText.comicBubblesEventsManager(this.target, $comicBubble);\n      });\n    }\n  }\n\n  _generateNewID(oldID) {\n    const idParts = oldID.split('_');\n    // beware if it's a error, return oldID\n    if (idParts.length < 2) {\n      console.log('Svg ID error!', oldID);\n      return oldID;\n    }\n\n    // solve thirt part of id\n    if (idParts[idParts.length - 1] !== `clone-${idParts[0]}`) {\n      idParts.push(`clone-${idParts[0]}`);\n    }\n\n    // solve first part of id\n    idParts[0] = this.target.id;\n\n    const newID = idParts.join('_');\n    return newID;\n  }\n\n  _getEvents() {\n\n    const svgDuplicateSources = this.toDuplicate ? this.toDuplicate.split(' ') : [];\n\n    if (svgDuplicateSources[0]) {\n\n      document.addEventListener('svg.change', (e) => {\n        if (svgDuplicateSources.includes(e.detail.svg.id)) {\n          const $templateNode = e.detail.svg.node;\n          const nodeName = e.detail.svg.nodeName;\n          const localNodeID = this._generateNewID($templateNode.id);\n          let $localNode = this.target.querySelector(`#${localNodeID}`);\n          let task;\n          // for creating new element or we edit the old one after created one\n          if ($localNode || e.detail.svg.task === 'create') {\n            task = e.detail.svg.task;\n          } else {\n            return;\n          }\n\n          /**\n           * 1. divided by node name\n           * 2. divided by task type\n           * path => svg lines\n           * TEXTAREA => text fields or comic bubbles\n           * foreignObject => svg circles\n           */\n          if (nodeName === 'path') {\n            switch (task) {\n              case 'create':\n                this._clonePath($templateNode, localNodeID);\n                break;\n              case 'color':\n                __removeClass($localNode, 'red blue');\n                __addClass($localNode, e.detail.svg.color);\n                break;\n              case 'remove':\n                $localNode.remove();\n                break;\n              default:\n                console.log('Nondefinated path events task. :(');\n            }\n          } else if (nodeName === 'TEXTAREA') {\n            if (e.detail.svg.isBubble) {\n              switch (task) {\n                case 'create':\n                  this._cloneComicBubbles($templateNode, localNodeID);\n                  break;\n                case 'change':\n                  if ($templateNode.value.length !== 0) {\n                    $localNode.value = $templateNode.value;\n                    // if needs resize\n                    if ($localNode.style.height !== $templateNode.style.height) {\n                      $localNode.style.height = $templateNode.style.height;\n                    }\n                  } else {\n                    $localNode.parentElement.remove();\n                  }\n                  break;\n                default:\n                  console.log('Nondefinated comicBubble events task. :(');\n              }\n            } else {\n              switch (task) {\n                case 'create':\n                  this._cloneTextField(e.detail.svg.isWrong, $templateNode, localNodeID);\n                  break;\n                case 'change':\n                  $localNode.value = $templateNode.value;\n                  // if is now wrong lenght\n                  if (e.detail.svg.isWrong) {\n                    __addClass($localNode, 'is-wrong');\n                  } else {\n                    __removeClass($localNode, 'is-wrong');\n                  }\n                  // if needs resize\n                  if ($localNode.style.height !== $templateNode.style.height) {\n                    $localNode.style.height = $templateNode.style.height;\n                  }\n                  break;\n                case 'color':\n                  $localNode = $localNode.parentElement.childNodes[0];\n                  __removeClass($localNode, 'red blue');\n                  __addClass($localNode, e.detail.svg.color);\n                  break;\n                case 'move':\n                  if ($localNode) {\n                    $localNode.parentElement.remove();\n                  }\n                  this._cloneTextField(e.detail.svg.isWrong, $templateNode, localNodeID);\n                  break;\n                case 'remove':\n                  $localNode.parentElement.remove();\n                  break;\n                default:\n                  console.log('Nondefinated textField events task. :(');\n              }\n            }\n          } else if (nodeName === 'foreignObject') {\n            switch (task) {\n              case 'create':\n                this._cloneCircle($templateNode, localNodeID);\n                break;\n              case 'color':\n                $localNode = $localNode.childNodes[0];\n                __removeClass($localNode, 'red blue');\n                __addClass($localNode, e.detail.svg.color);\n                break;\n              case 'move':\n                if ($localNode) {\n                  $localNode.remove();\n                }\n                this._cloneCircle($templateNode, localNodeID);\n                break;\n              case 'remove':\n                $localNode.remove();\n                break;\n              default:\n                console.log('Nondefinated circle events task. :(');\n            }\n          } else {\n            console.log('Nondefinated events nodeName. :(', nodeName);\n          }\n\n          // dispatch event that svg has changed\n          __dispatchEvent(document, 'svg.change', {}, {\n            svg: {\n              id: this.target.id,\n              task: e.detail.svg.task,\n              node: $templateNode,\n              nodeName,\n              contextMenu: false,\n            },\n          });\n        }\n      });\n    }\n  }\n\n  _getDropEvent() {\n    // need if we drop more than one same item\n    let idSalt = 0;\n\n    document.addEventListener('svg.drop', (event) => {\n\n      if (event.detail.svg.id === this.target.id) {\n\n        const { $node, position, type, size } = event.detail.svg;\n\n        const getMultiply = () => {\n          // make images smaller when dropped\n          if (type === 'image' || type === 'svg') return .62;\n          // make tags larger when dropped to not jump on more lines\n          if (type === 'tag') return 1.075;\n\n          return 1;\n        }\n        const multiply = getMultiply();\n\n        size.width = size.width * multiply;\n        size.height = size.height * multiply;\n\n        const $d3canvas = d3.select(`#${this.target.id} .svg-view`);\n        const $d3foreignObject = $d3canvas.append('svg:foreignObject')\n          .attr('width', size.width)\n          .attr('height', size.height)\n          .attr('x', this.format(position[0] - (size.width / 2)))\n          .attr('y', this.format(position[1] - (size.height / 2)))\n          .attr('id', `${this.target.id}_${$node.getAttribute('data-id')}_${idSalt}_dropItem`);\n          // _dropItem is important identifier\n\n        const $dropItem = document.createElement('div');\n        $dropItem.classList.add('dropped__item', `dropped__item--${type}`);\n        $dropItem.appendChild($node.firstElementChild.firstElementChild);\n\n        $d3foreignObject.append(() => $dropItem);\n\n        const $foreignObject = $d3foreignObject.node();\n\n        // increment salt\n        idSalt += 1;\n\n        // add events to element\n        SVGDraw.circleEventsManager(this.target, $foreignObject);\n\n        // dispatch event that svg has changed\n        __dispatchEvent(document, 'svg.change', {}, {\n          svg: {\n            id: this.target.id,\n            task: 'create',\n            node: $foreignObject,\n            nodeName: $foreignObject.nodeName,\n            contextMenu: false,\n          },\n        });\n      }\n    });\n  }\n\n  _clonePath($templateNode, localNodeID) {\n    const $localNode = $templateNode.cloneNode(true);\n    $localNode.id = localNodeID;\n    this.$canvas.appendChild($localNode);\n    // add events to element\n    SVGDraw.pathEventsManager(this.target, $localNode);\n  }\n\n  _cloneTextField(isWrong, $templateNode, localNodeID) {\n    const $localNode = $templateNode.parentElement.cloneNode(true);\n    $localNode.childNodes[1].id = localNodeID;\n    this.$canvas.appendChild($localNode);\n    if (isWrong) {\n      __addClass($localNode, 'is-wrong');\n    } else {\n      __removeClass($localNode, 'is-wrong');\n    }\n    // add events to element\n    SVGText.textEventsManager(this.target, $localNode.childNodes[1], false);\n  }\n\n  _cloneCircle($templateNode, localNodeID) {\n    const $localNode = $templateNode.cloneNode(true);\n    $localNode.id = localNodeID;\n    this.$canvas.appendChild($localNode);\n    // add events to element\n    SVGDraw.circleEventsManager(this.target, $localNode);\n  }\n\n  _cloneComicBubbles($templateNode, localNodeID) {\n    const $localNode = $templateNode.parentElement.cloneNode(true);\n    $localNode.childNodes[1].id = localNodeID;\n    this.$canvas.appendChild($localNode);\n    // add events to element\n    SVGText.comicBubblesEventsManager(this.target, $localNode.childNodes[1]);\n  }\n\n  static selectItem(item) {\n    item.setAttribute('data-svg-selected', 'true');\n  }\n\n  // Remove 'selected' classname from element within SVG\n  static deselectItem() {\n    // previously \"selected\" elements\n    const selected = document.querySelectorAll('[data-svg-selected=\"true\"]');\n    // unselect them\n    for (let i = 0; i < selected.length; i += 1) {\n      selected[i].setAttribute('data-svg-selected', 'false');\n    }\n  }\n\n  // Remove element from within SVG\n  // [data-svg-selected=\"true\"] marks selected element in SVG\n  static removeItem(isRadial, element = '[data-svg-selected=\"true\"]') {\n    let $element = document.querySelector(element);\n    let nodeName = $element.nodeName;\n    const $parent = $element.parentElement; // for <foreignObject>\n\n    // TEXTAREA => text field(right click in textarea)\n    // DIV => text field(click in radial menu) or circle\n    switch (nodeName) {\n      case 'path':\n        // $element = $element;\n        break;\n      case 'TEXTAREA':\n        // $element = $element;\n        break;\n      case 'DIV':\n        if ($parent.childNodes[1]) {\n          $element = $parent.childNodes[1];\n        } else {\n          $element = $parent;\n        }\n        nodeName = $element.nodeName;\n        break;\n      default:\n        console.log('Nondefinated node type. :(', nodeName);\n    }\n\n    // get svg id from object id\n    const svgID = $element.id.split('_')[0];\n\n    // dispatch event that svg has changed\n    __dispatchEvent(document, 'svg.change', {}, {\n      svg: {\n        id: svgID,\n        task: 'remove',\n        node: $element,\n        nodeName,\n        contextMenu: isRadial,\n      },\n    });\n\n    if ($parent.nodeName === 'foreignObject') {\n      d3.select($parent).remove();\n\n      // dispatch event that drop item was deleted\n      const idParts = $parent.id.split('_');\n      if (idParts[idParts.length - 1] === 'dropItem') {\n        __dispatchEvent(document, 'svg.drop.delete', {}, {\n          item: {\n            id: idParts[1],\n            $object: $element.firstChild,\n          },\n        });\n      }\n    } else {\n      d3.select($element).remove();\n    }\n  }\n\n  // Unmark all SVGs with 'svg-active' classname\n  static deactivate() {\n    const allActiveSvgs = document.querySelectorAll('[data-svg-active=\"true\"]');\n    for (let i = 0; i < allActiveSvgs.length; i += 1) {\n      allActiveSvgs[i].setAttribute('data-svg-active', 'false');\n    }\n  }\n\n  // Mark active SVG with 'svg-active' classname\n  static activate(svg) {\n    SVG.deactivate();\n    svg.setAttribute('data-svg-active', 'true');\n  }\n\n  // Remove connection between clone and template\n  // Remove third part of id if exists\n  static removeCloneConnectionManager($node) {\n    const idParts = $node.id.split('_');\n    if (idParts[idParts.length - 1].includes('clone')) {\n      idParts.pop();\n      $node.id = idParts.join('_');\n      return true;\n    }\n    return false;\n  }\n}\n","import Component from './component';\nimport AudioPlayer from './media/audio-player';\nimport SVG from './svg';\nimport { stopPlayingVideoPlayers } from './media/media';\nimport { __dispatchEvent } from '../lib/utils';\n\nexport default class Sortable extends Component {\n  constructor($element) {\n    super($element);\n    this.$settings = document.querySelector(\n      `[data-sortable-id-reference=\"${this.target.id}\"]`,\n    );\n    this.feedback = JSON.parse(\n      this.$settings.getAttribute('data-module-zpetnavazba'),\n    );\n    this.$container = this.target;\n    this.$items = this.target.querySelectorAll('[data-sortable-drag]');\n    this.$droppables = this.target.querySelectorAll('[data-sortable-drop]');\n    this.$placeholder = () => document.querySelector('#sortable-placeholder');\n    this.$players = this.$container.querySelectorAll('[data-player-audio]');\n    this.$inheritors = document.querySelectorAll(\n      `[data-sortable-inheritor=${this.target.id}]`,\n    );\n    this.inheritors = [];\n    this.order = [];\n\n    // get direction (type of sortable \"horizontalni\" or \"vertikalni\")\n    this.direction = this.target.getAttribute('data-sortable-target');\n    this.trackingTouch = false;\n    this.before = false;\n    this.after = false;\n    this.evaluation = undefined;\n\n    this.mouse = {\n      x: (event) => event.clientX || event.touches[0].clientX,\n      y: (event) => event.clientY || event.touches[0].clientY,\n      x0: 0,\n      y0: 0,\n      x1: 0,\n      y1: 0,\n    };\n\n    this.dragged = {\n      el: null,\n      clone: null,\n      posRel: {},\n      rect: () => this.dragged.el.getBoundingClientRect(),\n      size: {},\n      type: null,\n    };\n\n    this.siblings = {\n      prev: null,\n      next: null,\n    };\n\n    this._onStart = this._onStart.bind(this);\n    this._onMove = this._onMove.bind(this);\n    this._onEnd = this._onEnd.bind(this);\n    this._update = this._update.bind(this);\n\n    this._setupInitialOrder();\n    this._setupInheritors();\n    this._addEventListeners();\n\n    this.cache = {\n      colors: []\n    };\n\n    // get colors for all feedback variants\n    if (this.feedback) {\n      this.cache.colors = this.feedback.map(feedback => feedback.barva);\n    }\n  }\n\n  _onStart(event) {\n    if (!event.target.hasAttribute('data-sortable-drag')) {\n      return;\n    }\n\n    // TODO: zastavit všechno audio on drag start\n    if (this.$players.length > 0) {\n      stopPlayingVideoPlayers(this.$players);\n    }\n\n    this.trackingTouch = true;\n\n    this.dragged.el = event.target;\n    this.dragged.type = event.target.getAttribute('data-sortable-drag');\n    this.dragged.clone = this.dragged.el.cloneNode(true);\n    this.dragged.posRel.top = this.dragged.el.offsetTop;\n    this.dragged.posRel.left = this.dragged.el.offsetLeft;\n    this.dragged.size.width = this.dragged.el.offsetWidth;\n    this.dragged.size.height = this.dragged.el.offsetHeight;\n\n    this.dragged.el.style.top = `${this.dragged.posRel.top}px`;\n    this.dragged.el.style.left = `${this.dragged.posRel.left}px`;\n    this.dragged.el.style.width = `${this.dragged.size.width}px`;\n    this.dragged.el.style.height = `${this.dragged.size.height}px`;\n    this.dragged.el.classList.add('is-dragged');\n\n    this.$container.classList.add('is-dragged');\n\n    this._addPlaceholder(this.dragged.el);\n    this._onOver();\n\n    this.mouse.x0 = this.mouse.x(event);\n    this.mouse.y0 = this.mouse.y(event);\n\n    event.preventDefault();\n  }\n\n  _onMove(event) {\n    if (!this.trackingTouch) {\n      return;\n    }\n\n    this.mouse.x1 = this.mouse.x(event) - this.mouse.x0;\n    this.mouse.y1 = this.mouse.y(event) - this.mouse.y0;\n\n    window.requestAnimationFrame(this._update);\n\n    this._onOver();\n  }\n\n  _onEnd(event) {\n    if (!this.trackingTouch) {\n      return;\n    }\n\n    this.trackingTouch = false;\n    this.$container.classList.remove('is-dragged');\n    this.dragged.el.classList.remove('is-dragged');\n    this.dragged.el.style.top = '';\n    this.dragged.el.style.left = '';\n    this.dragged.el.style.width = '';\n    this.dragged.el.style.height = '';\n    this.dragged.el.style.transform = '';\n\n    const $placeholder = this.$placeholder();\n    const rect = $placeholder.getBoundingClientRect();\n\n    switch (this.direction) {\n      case 'horizontal':\n        if (rect.left <= this.mouse.x(event) <= rect.right) {\n          this._onDrop();\n        }\n        break;\n      case 'vertical':\n        if (rect.top <= this.mouse.y(event) <= rect.bottom) {\n          this._onDrop();\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    this._removePlaceholder();\n    this._updateOrder();\n    this._updateOrderInInheritors();\n    this._dispatchEvent();\n    this._checkAndResolveFeedback();\n  }\n\n  // _onEnter() {}\n\n  _onOver() {\n    this.before = false;\n    this.after = false;\n\n    this._getReference();\n\n    if (\n      this.siblings.next\n      && this.siblings.next.hasAttribute('data-sortable-drop')\n    ) {\n      const next = this.siblings.next.getBoundingClientRect();\n\n      switch (this.direction) {\n        case 'horizontal':\n          if (this.dragged.rect().right > next.left + next.width / 1.5) {\n            this.after = true;\n            this._addPlaceholder(this.siblings.next);\n          }\n          break;\n        case 'vertical':\n          if (this.dragged.rect().bottom > next.top + next.height / 1.5) {\n            this.after = true;\n            this._addPlaceholder(this.siblings.next);\n          }\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    if (\n      this.siblings.prev\n      && this.siblings.prev.hasAttribute('data-sortable-drop')\n    ) {\n      const prev = this.siblings.prev.getBoundingClientRect();\n\n      switch (this.direction) {\n        case 'horizontal':\n          if (this.dragged.rect().left < prev.right - prev.width / 1.5) {\n            this.before = true;\n            this._addPlaceholder(this.siblings.prev);\n          }\n          break;\n        case 'vertical':\n          if (this.dragged.rect().top < prev.bottom - prev.height / 1.5) {\n            this.before = true;\n            this._addPlaceholder(this.siblings.prev);\n          }\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  // _onLeave() {}\n\n  _onDrop() {\n    const $placeholder = this.$placeholder();\n\n    this._addEventListenerToItem(this.dragged.clone);\n    // TODO: přiřadit eventListenery audio playerům\n    if (this.dragged.clone.querySelector('[data-player-audio]')) {\n      AudioPlayer.addEventListeners(this.dragged.clone, this.showFeedback);\n    }\n\n    this.$container.insertBefore(this.dragged.clone, $placeholder);\n    this.dragged.el.parentElement.removeChild(this.dragged.el);\n  }\n\n  _update() {\n    this.dragged.el.style.transform = `translate3d(${this.mouse.x1}px, ${this.mouse.y1}px, 0) rotate(5deg)`;\n  }\n\n  _addPlaceholder(item) {\n    this._removePlaceholder();\n\n    const $placeholder = document.createElement('div');\n    $placeholder.classList.add('sortable-item', 'sortable-placeholder');\n    $placeholder.setAttribute('id', 'sortable-placeholder');\n    $placeholder.style.minHeight = `${this.dragged.size.height}px`;\n\n    if (this.dragged.el.querySelector('img')) {\n      const src = this.dragged.el.querySelector('img').getAttribute('src');\n      const img = document.createElement('img');\n      img.setAttribute('src', src);\n      $placeholder.appendChild(img);\n    }\n\n    if (this.after) {\n      this.$container.insertBefore($placeholder, item.nextElementSibling);\n    } else if (this.before) {\n      this.$container.insertBefore($placeholder, item);\n    } else {\n      this.$container.insertBefore($placeholder, item);\n    }\n  }\n\n  _removePlaceholder() {\n    const $placeholder = this.$placeholder();\n    if ($placeholder) $placeholder.parentElement.removeChild($placeholder);\n  }\n\n  _getReference() {\n    const $placeholder = this.$placeholder();\n    this.siblings.prev =\n      $placeholder.previousElementSibling === this.dragged.el\n        ? this.dragged.el.previousElementSibling\n        : $placeholder.previousElementSibling;\n    this.siblings.next =\n      $placeholder.nextElementSibling === this.dragged.el\n        ? this.dragged.el.nextElementSibling\n        : $placeholder.nextElementSibling;\n  }\n\n  _addEventListenerToItem($item) {\n    // touch events\n    $item.addEventListener('touchstart', this._onStart, false);\n    // mouse events\n    $item.addEventListener('mousedown', this._onStart, false);\n\n    if (this.dragged.type === 'svg') {\n      const svg = new SVG($item.querySelector('[data-svg-target]'));\n    }\n  }\n\n  _addEventListeners() {\n    // touch events\n    document.addEventListener('touchmove', this._onMove);\n    document.addEventListener('touchend', this._onEnd);\n    // mouse events\n    document.addEventListener('mousemove', this._onMove);\n    document.addEventListener('mouseup', this._onEnd);\n\n    this.$items.forEach(($item) => {\n      this._addEventListenerToItem($item);\n    });\n  }\n\n  // Methods for check if the array is sorted or not\n  // Return True: array is in the right state, False: array is NOT in the right state\n  // Array looks like: [1,2,3,4]\n  // eslint-disable-next-line class-methods-use-this\n  checkIfTheArrayIsGood(array) {\n    // condition for function some(), return if there is item in array which is not in right position\n    const elementInWrongPosition = (element, index) => index !== (element - 1);\n    // all has to be negate, to return the right condition (true: sorted, false:not sorted)\n    return !array.some(elementInWrongPosition);\n  }\n\n  // Method which check how many steps needs to be done to sort array\n  // Return: 0 -> 0 steps, array is sorted\n  //        1 -> 1 steps is needed for sort the array\n  //        2 -> 2 and more steps is needed for sort the array\n  // Array looks like: [1,2,3,4]\n  oneMove(array) {\n    if (this.checkIfTheArrayIsGood(array)) return 0; // Check if the array is sorted\n    for (let i = 0; i < array.length; i += 1) {\n      if (array[i] !== i + 1) {\n        const changedArray = [...array];\n        const element = changedArray[i];\n        changedArray.splice(i, 1);\n        changedArray.splice(element - 1, 0, element);\n\n        if (this.checkIfTheArrayIsGood(changedArray)) return 1; // Check if the array after 1 step is sorted\n      }\n    }\n    return 2; // In every other results the array needs more than 2 steps to be sorted\n  }\n\n  // After interaction with modul razeni this method is called to resolve a feedback button\n  _checkAndResolveFeedback() {\n    if (this.feedback) {\n      // Get the array of items (gets only their correct position - in int), example -> [1,3,4,2]\n      const arrayOfItems = [\n        ...this.target.querySelectorAll('[data-sortable-drag]'),\n      ].map((item) => parseInt(item.dataset.sortableSpravnaodpoved, 10));\n\n      // variable to map a feedback which is got from condition in JSON\n      let feedbackResult = 0;\n\n      // Check if the zpetnaVazba is 2 or 3 conditional\n      if (this.feedback.length === 2) {\n        if (!this.checkIfTheArrayIsGood(arrayOfItems)) {\n          feedbackResult = 1;\n        }\n      }\n      else {\n        feedbackResult = this.oneMove(arrayOfItems);\n      }\n\n      // map feedback via feedbackResult\n      const feedbackActual = this.feedback.find((feedback) => feedback.podminka === feedbackResult);\n\n      this.$buttonFeedback.classList.remove(...this.cache.colors);\n      this.$buttonFeedback.classList.add(feedbackActual.barva);\n      this.$buttonFeedbackText.innerText = feedbackActual.text;\n      this.evaluation = feedbackActual.splneno;\n    }\n    this.showFeedback();\n  }\n\n  _setupInitialOrder() {\n    this._updateOrder();\n  }\n\n  _setupInheritors() {\n    if (this.$inheritors.length > 0) {\n      this.inheritors = Array.from(this.$inheritors).map(($inheritor) => ({\n        $inheritor,\n        $container: $inheritor.querySelector('[data-sortable-inheritor-item]')\n          .parentElement,\n      }));\n    }\n  }\n\n  _updateOrder() {\n    this.order = Array.from(\n      this.target.querySelectorAll('[data-sortable-drag]'),\n    ).map(($item) => ({ id: parseInt($item.dataset.sortableIndex, 10) }));\n  }\n\n  _updateOrderInInheritors() {\n    if (this.$inheritors.length > 0) {\n      this.inheritors.forEach((inheritor) => {\n        this.order.forEach((item) => {\n          inheritor.$container.appendChild(\n            inheritor.$container.querySelector(\n              `[data-sortable-inheritor-item=\"${item.id}\"]`,\n            ),\n          );\n        });\n      });\n    }\n  }\n\n  _dispatchEvent() {\n    __dispatchEvent(\n      this.target,\n      'sortable.change',\n      {},\n      {\n        id: this.target.id,\n        evaluation: this.evaluation,\n        order: this.order,\n      },\n    );\n  }\n}\n","/* eslint-disable brace-style */\nimport {\n  __addClass,\n  __removeClass,\n  __hasClass,\n  __localPosition,\n  __globalPosition,\n  __dispatchEvent,\n} from '../../lib/utils';\nimport SVG from '../svg';\nimport SVGText from './svg-text';\n\nexport default class SVGRadialMenu {\n\n  constructor($radialMenu, $svgs) {\n    this.$radialMenu = $radialMenu;\n    this.$radialMenuItems = this.$radialMenu.querySelectorAll('[data-radial-menu-item]');\n    this.$colorItems = this.$radialMenu.querySelectorAll('.radial-menu-color');\n    this.$textItems = this.$radialMenu.querySelectorAll('.radial-menu-text');\n    this.$createTextItem = this.$radialMenu.querySelector('#create-text');\n    this.$removeItem = this.$radialMenu.querySelector('#remove-content');\n    this.$tooltip = this.$radialMenu.querySelector('[data-radial-menu-tooltip]');\n    this.$svgs = $svgs;\n\n    this.initialSetUp = true;\n\n    this.menuRadius = parseInt(window.getComputedStyle(this.$radialMenu.querySelector('.radial-menu-wrapper'), null).getPropertyValue('width'), 10) / 2;\n    this.itemRadius = parseInt(window.getComputedStyle(this.$radialMenu.querySelector('.radial-menu-item'), null).getPropertyValue('width'), 10) / 2;\n\n    this.init();\n  }\n\n  init() {\n    this.setUpRadialMenuItems();\n    this.addEventListenersToRadialMenu();\n\n    // activate radial menu when right click on svg\n    this.$svgs.forEach(($svg) => {\n      //define functions\n      const svgSpecificActions = $svg.getAttribute('data-svg-target').split(' ');\n      const colors = $svg.getAttribute('data-svg-colors');\n      const svgSpecificColor = colors ? colors.split(' ') : undefined;\n      const hasText = svgSpecificActions.includes('text');\n      const hasMoreColors = (svgSpecificColor && svgSpecificColor.length > 1) || !colors;\n\n      d3.select($svg).on('contextmenu', () => {\n        // mark this SVG as the active one\n        SVG.activate($svg);\n        // deselect all previously selected items\n        SVG.deselectItem();\n        // show radial menu buttons based on clicked element\n        // and .select appropriate elements based on clicked element\n        this.filterMenuButtons(d3.event.target, hasText, hasMoreColors);\n        this.showRadialMenu($svg, d3.event);\n        // prevent default 'contextmenu' event\n        d3.event.preventDefault();\n      });\n    });\n\n    this.initialSetUp = false;\n  }\n\n  setUpRadialMenuItems() {\n    // this.positionRadialMenuItems(this.$radialMenuItems);\n\n    this.$radialMenuItems.forEach(($item) => {\n      this.addEventListenersToRadialMenuItem($item);\n    });\n  }\n\n  positionRadialMenuItems($items) {\n    const _itemsLength = $items.length;\n    const _menuRadius = this.menuRadius;\n    const _itemRadius = this.itemRadius;\n    const _menuOffset = _menuRadius - _itemRadius;\n    const _interval = 0.6283185307;\n    // if more items center them\n    const _centerOffset = (-_interval / 2) + ((_itemsLength * _interval) / 2);\n\n    // make a \"flower\"\n    $items.forEach(($item, index) => {\n      // Calculate the angle at which the element will be placed.\n      // For a semicircle, we would use (index / _itemsLength) * Math.PI.\n      const angle = (Math.PI + ((index * _interval) * -1)) + _centerOffset;\n\n      // get position\n      const x = (_menuRadius * Math.sin(angle)) + _menuOffset;\n      const y = (_menuRadius * Math.cos(angle)) + _menuOffset;\n\n      // console.log('x: ' + x);\n      // console.log('y: ' + y);\n\n      $item.style.left = `${x.toFixed(1)}px`;\n      $item.style.top = `${y.toFixed(1)}px`;\n\n      // if (this.initialSetUp === true) {\n      //   this.addEventListenersToRadialMenuItem($item);\n      // }\n    });\n  }\n\n  addEventListenersToRadialMenu() {\n    this.onMouseLeave();\n\n    this.$radialMenu.addEventListener('click', (event) => {\n      this.hideRadialMenu(this.$radialMenu);\n      event.preventDefault();\n    });\n\n    this.$radialMenu.addEventListener('contextmenu', (event) => {\n      this.hideRadialMenu(this.$radialMenu);\n      event.preventDefault();\n    });\n  }\n\n  addEventListenersToRadialMenuItem(item) {\n    const $item = item;\n\n    // actions\n    const action = $item.getAttribute('data-radial-menu-item');\n    // remove item\n    if (action === 'remove-content') {\n      $item.addEventListener('click', () => {\n        SVG.removeItem(true);\n        this.hideRadialMenu();\n      }, false);\n    }\n    // create user text\n    else if (action === 'create-text') {\n      d3.select($item).on('click', () => {\n        SVGText.createText();\n        this.hideRadialMenu();\n      }, false);\n    }\n    // označit podobnost\n    else if (action === 'color-point-blue') {\n      $item.addEventListener('click', () => {\n        SVGRadialMenu.changeColor('blue');\n        this.hideRadialMenu();\n      }, false);\n    }\n    // označit rozdil\n    else if (action === 'color-point-red') {\n      $item.addEventListener('click', () => {\n        SVGRadialMenu.changeColor('red');\n        this.hideRadialMenu();\n      }, false);\n    }\n    // označit rozdil\n    else if (action === 'color-point-red') {\n      $item.addEventListener('click', () => {\n        SVGRadialMenu.changeColor('red');\n        this.hideRadialMenu();\n      }, false);\n    }\n    // přiřadit kategorii\n    // else if (action === 'category') {\n    //   const category = $item.getAttribute('data-category');\n    //   const categoryLabel = $item.getAttribute('data-radial-menu-item-tooltip');\n\n    //   $item.addEventListener('click', () => {\n    //     const $selected = document.querySelector('[data-svg-selected=\"true\"]');\n    //     const $parentForeignObject = $selected.parentElement;\n    //     let $category = $parentForeignObject.querySelector('.svg-category-label');\n\n    //     $selected.setAttribute('data-svg-category', category);\n\n    //     if (!$category) {\n    //       $category = document.createElement('div');\n    //       $category.classList.add('svg-category-label');\n    //       $parentForeignObject.prepend($category);\n    //     }\n\n    //     $category.innerText = categoryLabel;\n\n    //     this.hideRadialMenu();\n    //   }, false);\n    // }\n\n    // tooltip\n    $item.addEventListener('mouseenter', (event) => {\n      this.$tooltip.innerHTML = event.currentTarget.getAttribute('data-radial-menu-item-tooltip');\n      this.$tooltip.style.display = 'block';\n    }, false);\n    $item.addEventListener('mouseleave', () => {\n      this.$tooltip.innerHTML = '';\n      this.$tooltip.style.display = 'none';\n    }, false);\n  }\n\n  // Draw a SVG circle on click\n  static changeColor(color, element = '[data-svg-selected=\"true\"]') {\n    let $element = document.querySelector(element);\n    let nodeName = $element.nodeName;\n    let taskType = 'color';\n\n    __removeClass($element, 'red blue');\n    __addClass($element, color);\n\n    // DIV => text field  or circle\n    switch (nodeName) {\n      case 'path':\n        // $element = $element;\n        break;\n      case 'DIV':\n        if ($element.parentElement.childNodes[1]) {\n          $element = $element.parentElement.childNodes[1];\n        } else {\n          $element = $element.parentElement;\n        }\n        nodeName = $element.nodeName;\n        break;\n      default:\n        console.log('Nondefinated node type. :(', nodeName);\n    }\n\n    // if clone is changed, then dispatch create event\n    if (SVG.removeCloneConnectionManager($element)) taskType = 'create';\n\n    // get svg id from object id\n    const svgID = $element.id.split('_')[0];\n\n    // dispatch event that svg has changed\n    __dispatchEvent(document, 'svg.change', {}, {\n      svg: {\n        id: svgID,\n        task: taskType,\n        node: $element,\n        nodeName,\n        contextMenu: true,\n        color,\n      },\n    });\n  }\n\n  showRadialMenu($activeSVG, event) {\n    const $svg = $activeSVG || document.querySelector('[data-svg-active=\"true\"]');\n    // get global position of the right click event\n    const globalPosition = __globalPosition(event);\n    const localPosition = __localPosition($svg);\n    this.$radialMenu.setAttribute('data-local-x', localPosition.x);\n    this.$radialMenu.setAttribute('data-local-y', localPosition.y);\n    // set position of radial menu\n    // number of 13 is size of #radial-menu\n    this.$radialMenu.style.top = `${globalPosition.y - 7}px`;\n    this.$radialMenu.style.left = `${globalPosition.x - 7}px`;\n\n    // make a flower\n    const $activeRadialMenuItem = this.$radialMenu.querySelectorAll('.is-active');\n    this.positionRadialMenuItems($activeRadialMenuItem);\n\n    // show radial menu\n    __addClass(this.$radialMenu, 'is-active');\n\n    // return {\n    //   localPosition,\n    //   globalPosition,\n    // };\n  }\n\n  hideRadialMenu() {\n    // hide radial menu\n    __removeClass(this.$radialMenu, 'is-active');\n    // deactivate all SVGs\n    SVG.deactivate();\n    // deselect all SVG items\n    SVG.deselectItem();\n\n    // deactivate radial menu items when the menu is hidden\n    setTimeout(() => {\n      if (!__hasClass(this.$radialMenu, 'is-active')) {\n        this.$radialMenuItems.forEach(($item) => {\n          __removeClass($item, 'is-active');\n        });\n      }\n    }, 150);\n  }\n\n  onMouseLeave() {\n    let mouseLeaveDelay;\n\n    this.$radialMenu.addEventListener('mouseleave', () => {\n      mouseLeaveDelay = setTimeout(() => {\n        this.hideRadialMenu(this.$radialMenu);\n      }, 500);\n    });\n\n    this.$radialMenu.addEventListener('mouseenter', () => {\n      clearTimeout(mouseLeaveDelay);\n    });\n  }\n\n  filterMenuButtons(clickedItem, hasText, hasMoreColors) {\n    if (__hasClass(clickedItem, 'svg-path') || clickedItem.nodeName === 'path') {\n      if (hasText) {\n        __addClass(this.$createTextItem, 'is-active');\n      } else {\n        __removeClass(this.$createTextItem, 'is-active');\n      }\n      // __addClass(this.$removeItem, 'is-active');\n\n      if (hasMoreColors) {\n        this.$colorItems.forEach(($colorItem) => {\n          __addClass($colorItem, 'is-active');\n        });\n      }\n\n      this.$textItems.forEach(($textItem) => {\n        __removeClass($textItem, 'is-active');\n      });\n\n      // mark it as slected\n      // SVG.selectItem(clickedItem);\n    }\n    if (__hasClass(clickedItem, 'svg-circle')) {\n      if (hasText) {\n        __addClass(this.$createTextItem, 'is-active');\n      } else {\n        __removeClass(this.$createTextItem, 'is-active');\n      }\n      // __addClass(this.$removeItem, 'is-active');\n\n      if (hasMoreColors) {\n        this.$colorItems.forEach(($colorItem) => {\n          __addClass($colorItem, 'is-active');\n        });\n      }\n\n      this.$textItems.forEach(($textItem) => {\n        __removeClass($textItem, 'is-active');\n      });\n\n      // mark it as slected\n      // SVG.selectItem(clickedItem);\n    }\n    if (__hasClass(clickedItem, 'svg-textarea')) {\n      __removeClass(this.$createTextItem, 'is-active');\n      // __addClass(this.$removeItem, 'is-active');\n\n      if (!__hasClass(clickedItem, 'do-not-remove')) {\n        this.$colorItems.forEach(($colorItem) => {\n          __removeClass($colorItem, 'is-active');\n        });\n\n        this.$textItems.forEach(($textItem) => {\n          __addClass($textItem, 'is-active');\n        });\n      }\n\n      // mark it as slected\n      // SVG.selectItem(clickedItem);\n    }\n    if (clickedItem.nodeName === 'image') {\n      if (hasText) {\n        __addClass(this.$createTextItem, 'is-active');\n      } else {\n        __removeClass(this.$createTextItem, 'is-active');\n      }\n\n      __removeClass(this.$removeItem, 'is-active');\n\n      this.$colorItems.forEach(($colorItem) => {\n        __removeClass($colorItem, 'is-active');\n      });\n\n      this.$textItems.forEach(($textItem) => {\n        __removeClass($textItem, 'is-active');\n      });\n    }\n    else {\n      if (__hasClass(clickedItem, 'do-not-remove')) {\n        __removeClass(this.$removeItem, 'is-active');\n      } else {\n        if (hasText) {\n          __addClass(this.$createTextItem, 'is-active');\n        } else {\n          __removeClass(this.$createTextItem, 'is-active');\n        }\n        __addClass(this.$removeItem, 'is-active');\n      }\n      // mark it as slected\n      SVG.selectItem(clickedItem);\n    }\n  }\n}\n","import {\n  __mergeDeep,\n  __hasClass,\n  __addClass,\n  __removeClass,\n  __position,\n  __positionTranslated,\n  __remove,\n  __getRealDimensions,\n  __insertBefore,\n  __keycodeIsPrintableCharacter,\n  __toggleClass,\n  __dispatchEvent,\n  __isTouchEnabled,\n  __isTouchOnly,\n} from '../../lib/utils';\nimport Component from '../component';\n\n\nexport default class Editor extends Component {\n\n  constructor($element) {\n    super($element);\n\n    // TODO: should extend default Component class and use this.target?\n    // this.$editor is better, more readable\n    this.$editor = this.target;\n    this.id = this.$editor.id;\n    // TODO: is DOM element before/after the editor itself.. move it to the editor?\n    this.settings = JSON.parse(document.querySelector(`[data-editor-id-reference=\"${this.id}\"]`).getAttribute('data-module-settings'));\n\n    this.opts = __mergeDeep(Editor.defaults, this.settings);\n\n    this.models = {\n      passive: [\n        'cteni',\n      ],\n      interactive: [\n        'predznaceny', 'zvyraznovani', 'komentáře', 'psani',\n      ],\n      withMenu: [\n        'predznaceny', 'zvyraznovani', 'komentáře',\n      ],\n    };\n\n    this.totalTagId = 0;\n\n    this.hasMenu = true;\n\n    this.selection = null;\n    this.lastSelectionSettings = {};\n    this.isCollapsed = null;\n    this.savedSelectionRange = null;\n    this.selectionAttributes = null;\n    this.dummyRangeElement = null;\n\n    this.selectionMouseDown = false;\n    this.selectionDirection = null;\n\n    this.hasEditableContentChanged = false;\n    this.lastPressedKey = null;\n\n    this.hasToolbar = false;\n    this.toolbar = {};\n\n    this.originalContent = {};\n    this.currentContent = {};\n\n    this._handlers = [];\n\n    this.wrapLastDeletesTimeoutClass = '';\n    this.wrapLastDeletesTimeoutFunction = () => { };\n    this.wrapLastAdditionsTimeoutClass = '';\n    this.wrapLastAdditionsTimeoutFunction = () => { };\n    this.isWrappingLastText = false;\n    this.isWriting = false;\n\n    this.$groupDeleted = null;\n\n    this.cache = {\n      body: document.body,\n      window,\n    };\n\n    this.init();\n  }\n\n  init() {\n    if (Editor._hasMenu(this.opts)) {\n      try {\n        this.$menu = this.$editor.querySelector(`.${this.opts.menuClass}`);\n\n        // TODO: generalize .item class via defaults and opts\n        this.$menuActions = this.$menu.querySelector('.menu').querySelectorAll('.menu-item');\n        this.$menuClose = this.$menu.querySelector('.close');\n      } catch (error) {\n        this.hasMenu = false;\n      }\n    } else {\n      this.hasMenu = false;\n    }\n\n    if (Editor._hasToolbar(this.opts)) {\n      this.hasToolbar = true;\n    }\n\n    this.$canvas = this.$editor.querySelector(`.${this.opts.canvasClass}`);\n\n    // only if the editor is INTERACTIVE\n    if (this.opts.funkce !== 'cteni') {\n      __addClass(this.$menu, 'hidden');\n\n      // only if the editor is for WRITING\n      if (this.opts.funkce === 'psani') {\n        this.originalContent.html = this.$canvas.innerHTML;\n        this.originalContent.text = this.$canvas.innerText;\n        this.currentContent.html = this.$canvas.innerHTML;\n        this.currentContent.text = this.$canvas.innerText;\n\n        this.wrapLastDeletesTimeoutClass = this._generateNewTagGroupClass();\n        this.wrapLastAdditionsTimeoutClass = this._generateNewTagGroupClass();\n      }\n\n      // only if the editor is with extra TOOLBAR\n      if (this.hasToolbar) {\n        this.toolbar.$element = this.$editor.querySelector('.editor-toolbar');\n        this.toolbar.$btnReset = this.toolbar.$element.querySelector('.editor-toolbar-action-reset');\n      }\n\n      this.registerEditableHandlers();\n    }\n\n    // only if the editor is with PREHIGHLIGHTED text\n    if (this.opts.funkce === 'predznaceny') {\n      this.initPreHighlightedTextOptions();\n    }\n\n  }\n\n  _generateNewTagId() {\n    this.totalTagId = this.totalTagId + 1;\n    return `${this.id}-${this.totalTagId}`;\n  }\n\n  _generateNewTagGroupClass() {\n    this.totalTagId = this.totalTagId + 1;\n    return `group-${this.id}-${this.totalTagId}`;\n  }\n\n  // add all eventListeners\n  // TODO: separate special case from universal ones?\n  registerEditableHandlers() {\n\n    this.$canvas.addEventListener('mousedown', this.handlerFocus.bind(this), false);\n    this.$canvas.addEventListener('touchstart', this.handlerFocus.bind(this), false);\n    this.$canvas.addEventListener('focusout ', this.handlerFocus.bind(this), false);\n\n    // Necessary when mouseup is outside the $canvas element\n    // therefore we have to capture the event outside the element through body element\n    this.cache.body.addEventListener('mouseup', this.handlerFocus.bind(this), false);\n    this.cache.body.addEventListener('touchend', this.handlerFocus.bind(this), false);\n\n    if (\n      __isTouchOnly()\n      || (window.innerWidth <= 1024 && __isTouchEnabled())\n    ) {\n      this.$canvas.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n    }\n\n    if (this.opts.funkce === 'psani') {\n\n      this.$canvas.addEventListener('keydown', (e) => {\n\n        const selection = window.getSelection();\n        const keyCode = e.which || e.keyCode;\n        let keyName = e.key;\n\n        // show OK button or feedback\n        this.showFeedback();\n\n        // start DELETE\n        if (keyName === 'Backspace' || keyName === 'Delete') {\n          if (selection.rangeCount) {\n            window.clearTimeout(this.wrapLastDeletesTimeoutFunction);\n\n            const range = selection.getRangeAt(0);\n            const cloneRange = range.cloneRange();\n\n            if (this.lastSelectionSettings.isCollapsed) {\n\n              try {\n                cloneRange.setStart(range.startContainer, range.startOffset - 1);\n              } catch (e) {\n                // backspace was pressed at the beginning of the node\n                cloneRange.setStart(range.startContainer, range.startOffset);\n                cloneRange.collapse(true);\n              }\n\n            } else {\n              cloneRange.setStart(range.startContainer, range.startOffset);\n\n            }\n\n            cloneRange.setEnd(range.endContainer, range.endOffset);\n\n            // do nothing when it's space\n            const addedFragment = cloneRange.cloneContents();\n            const addedFragmentString = addedFragment.textContent.trim();\n\n            if ((addedFragmentString !== '' && addedFragmentString !== '&nbsp;') || this.isWrappingLastText) {\n\n              const dummyElementInner = document.createElement('span');\n              dummyElementInner.className = `user-removed-text-inner ${this.wrapLastDeletesTimeoutClass}`;\n\n              cloneRange.surroundContents(dummyElementInner);\n\n              selection.removeAllRanges();\n              selection.addRange(range);\n\n              this.wrapLastDeletesTimeoutFunction = setTimeout(() => {\n\n                this.isWrappingLastText = false;\n\n                // wrap all previous deletes to one element\n                const dummyElement = document.createElement('span');\n                dummyElement.contentEditable = false;\n                dummyElement.className = 'user-removed-text';\n\n                const newGeneratedId = this._generateNewTagId();\n                dummyElement.id = newGeneratedId;\n\n                const $elements = document.querySelectorAll(`.${this.wrapLastDeletesTimeoutClass}`);\n\n                __insertBefore(dummyElement, $elements[0]);\n\n                $elements.forEach((el, i) => {\n                  dummyElement.appendChild(el);\n                });\n\n\n                // create close button\n                const $btnClose = document.createElement('span');\n                $btnClose.className = this.opts.closeBtnClass;\n\n                const clickHandler = (e) => {\n                  const $nodeElement = e.currentTarget.parentNode;\n                  this._removeNodeKeepTextContent($nodeElement);\n                  e.stopPropagation();\n                };\n\n                $btnClose.addEventListener('click', clickHandler.bind(this));\n\n                document.getElementById(newGeneratedId).appendChild($btnClose);\n\n                this.wrapLastDeletesTimeout = true;\n                this.wrapLastDeletesTimeoutClass = this._generateNewTagGroupClass();\n\n              }, 700);\n\n              this.isWrappingLastText = true;\n\n              e.preventDefault();\n\n            } else {\n\n              if (!this.isWrappingLastText) {\n                // we're removing spaces, do nothing use browser's default behaviour, unless the wrapping is going on\n                return;\n              }\n              e.preventDefault();\n            }\n          }\n        }\n        // end DELETE\n\n        // start WRITING\n        else if (__keycodeIsPrintableCharacter(keyCode)) {\n\n          // if nothing is selected (selection is empty)\n          if (this.lastSelectionSettings.isCollapsed) {\n\n            // if \"space\" was written\n            if (keyCode === 32) {\n              if (!this.isWrappingLastText) {\n                // we're adding spaces, do nothing use browser's default behaviour, unless the wrapping is going on\n                return;\n              }\n              // fill a space as the keyname for the spacebar\n              keyName = ' ';\n            }\n\n            // The Selection.rangeCount read-only property returns the number of ranges in the selection.\n            if (selection.rangeCount) {\n\n              window.clearTimeout(this.wrapLastAdditionsTimeoutFunction);\n\n              const range = selection.getRangeAt(0);\n              const cloneRange = range.cloneRange();\n\n              cloneRange.setStart(range.startContainer, range.startOffset);\n              cloneRange.setEnd(range.endContainer, range.endOffset);\n\n              const textToAddElement = document.createElement('span');\n              textToAddElement.contentEditable = false;\n              textToAddElement.className = `user-inserted-text-inner ${this.wrapLastAdditionsTimeoutClass}`;\n              textToAddElement.innerHTML = keyName;\n\n              cloneRange.insertNode(textToAddElement);\n\n              // move the caret after the inserted character\n              range.setStartAfter(textToAddElement);\n\n              selection.removeAllRanges();\n              selection.addRange(range);\n\n              this.wrapLastAdditionsTimeoutFunction = setTimeout(() => {\n\n                this.isWrappingLastText = false;\n\n                // wrap all previous deletes to one element\n                const dummyElement = document.createElement('span');\n                dummyElement.contentEditable = false;\n                dummyElement.className = 'user-inserted-text';\n\n                const newGeneratedId = this._generateNewTagId();\n                dummyElement.id = newGeneratedId;\n\n                const $elements = document.querySelectorAll(`.${this.wrapLastAdditionsTimeoutClass}`);\n\n                __insertBefore(dummyElement, $elements[0]);\n\n                $elements.forEach((el, i) => {\n                  dummyElement.appendChild(el);\n                });\n\n\n                // create close button\n                const $btnClose = document.createElement('span');\n                $btnClose.className = this.opts.closeBtnClass;\n\n                const clickHandler = (e) => {\n                  const $nodeElement = e.currentTarget.parentNode;\n                  __remove($nodeElement);\n                  e.stopPropagation();\n                };\n\n                $btnClose.addEventListener('click', clickHandler.bind(this));\n                document.getElementById(newGeneratedId).appendChild($btnClose);\n\n                this.wrapLastAdditionsTimeoutClass = this._generateNewTagGroupClass();\n\n              }, 700);\n\n              this.isWrappingLastText = true;\n\n            }\n\n\n            if (this.hasEditableContentChanged === false) {\n              this.hasEditableContentChanged = true;\n            }\n\n            e.preventDefault();\n          }\n\n          // writing over existing text is selected\n          else {\n            window.clearTimeout(this.wrapLastAdditionsTimeoutFunction);\n\n            const range = selection.getRangeAt(0);\n            const cloneRange = range.cloneRange();\n\n            cloneRange.setStart(range.startContainer, range.startOffset);\n            cloneRange.setEnd(range.endContainer, range.endOffset);\n\n            // 1. handle deleting the text that was selected when writing started\n            if (this.isWriting === false && selection.toString().length > 0) {\n              // add deleted text node only for the first time and only if there is some selected text\n              this.$groupDeleted = document.createElement('span');\n              this.$groupDeleted.contentEditable = false;\n              this.$groupDeleted.className = 'user-removed-text';\n\n              const groupDeletedId = this._generateNewTagId();\n              this.$groupDeleted.id = groupDeletedId;\n\n              const $groupInnerDeleted = document.createElement('span');\n              $groupInnerDeleted.className = 'user-removed-text-inner';\n\n              this.$groupDeleted.appendChild($groupInnerDeleted);\n\n              cloneRange.surroundContents(this.$groupDeleted);\n\n              // create close button\n              const $btnClose = document.createElement('span');\n              $btnClose.className = this.opts.closeBtnClass;\n\n              const clickHandler = (e) => {\n                const $nodeElement = e.currentTarget.parentNode;\n                this._removeNodeKeepTextContent($nodeElement);\n                e.stopPropagation();\n              };\n\n              $btnClose.addEventListener('click', clickHandler.bind(this));\n              this.$groupDeleted.appendChild($btnClose);\n            }\n\n\n            // 2. adding new text\n            this.isWriting = true;\n\n            const $groupInnerAdded = document.createElement('span');\n            $groupInnerAdded.contentEditable = false;\n            $groupInnerAdded.className = `user-inserted-text-inner ${this.wrapLastAdditionsTimeoutClass}`;\n\n            // add a space so there is a space between the added and removed text\n            $groupInnerAdded.innerHTML = `${keyName}`;\n\n            // TODO: error after deleted selection\n            __insertBefore($groupInnerAdded, this.$groupDeleted);\n            range.setStartAfter($groupInnerAdded);\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            this.wrapLastAdditionsTimeoutFunction = setTimeout(() => {\n              this.isWriting = false;\n\n              // wrap all previous deletes to one element\n              const $groupAdded = document.createElement('span');\n              $groupAdded.contentEditable = false;\n              $groupAdded.className = 'user-inserted-text';\n\n              const newGeneratedId = this._generateNewTagId();\n              $groupAdded.id = newGeneratedId;\n\n              const $elements = document.querySelectorAll(`.${this.wrapLastAdditionsTimeoutClass}`);\n\n              __insertBefore($groupAdded, $elements[0]);\n\n              $elements.forEach((el, i) => {\n                $groupAdded.appendChild(el);\n              });\n\n              const $btnClose = document.createElement('span');\n              $btnClose.className = this.opts.closeBtnClass;\n\n              const clickHandler = (e) => {\n                const $nodeElement = e.currentTarget.parentNode;\n                __remove($nodeElement);\n                e.stopPropagation();\n              };\n\n              $btnClose.addEventListener('click', clickHandler.bind(this));\n              document.getElementById(newGeneratedId).appendChild($btnClose);\n\n              this.wrapLastAdditionsTimeoutClass = this._generateNewTagGroupClass();\n\n            }, 700);\n\n            e.preventDefault();\n          }\n        }\n        // end WRITING\n      });\n    }\n\n\n    if (this.hasMenu) {\n      this.registerMenuHandler();\n    }\n\n    if (this.hasToolbar) {\n      this.toolbar.$btnReset.addEventListener('click', () => {\n\n        const isConfirmed = confirm('Opravdu chcete vrátit text do původní podoby? Vaše změny se tímto ztratí.');\n\n        if (isConfirmed) {\n          this.$canvas.innerHTML = this.originalContent.html;\n        }\n\n      });\n    }\n\n  }\n\n  registerMenuHandler() {\n    for (let i = 0, len = this.$menuActions.length; i < len; i += 1) {\n      this.$menuActions[i].addEventListener('click', this.handlerMenuActions.bind(this), false);\n    }\n\n    this.$menuClose.addEventListener('click', this.handlerMenuClose.bind(this), false);\n  }\n\n  initPreHighlightedTextOptions() {\n    // Example of data from JSON:\n    //\n    // \"predznaceni\": [\n    //     {\n    //       \"vyraz\": \"Obracíme se na vás\",\n    //       \"data\": {\n    //         \"osoba\": \"my\",\n    //         \"slovesnyZpusob\": \"oznamovací\"\n    //       }\n    //     }\n    //   ]\n    // }\n    //\n    // In PUG, object for every item is injected into `data-text-option` so this JS has access to it\n\n    const dataAttr = 'data-text-option';\n\n    // loop over updated DOM via DOM manipulation\n    this.$textOptionsElements = this.$editor.querySelectorAll(`[${dataAttr}]`);\n    this.$textOptionsElements.forEach(($textOption) => {\n\n      $textOption.addEventListener('click', () => {\n        __toggleClass($textOption, this.opts.textOptions.selectedClass);\n        const idForSend = this.id.replace('editor-', '');\n\n        if (__hasClass($textOption, this.opts.textOptions.selectedClass)) {\n\n          // dispatch event that editor has changed\n          const tagData = JSON.parse($textOption.getAttribute('data-text-option'));\n\n          __dispatchEvent(document, 'editor.change', {}, {\n            text: {\n              id: idForSend,\n              task: 'add',\n              tagData,\n              value: $textOption.cloneNode(true),\n            },\n          });\n        } else {\n          // dispatch event that editor has changed\n          __dispatchEvent(document, 'editor.change', {}, {\n            text: {\n              id: idForSend,\n              task: 'remove',\n              value: $textOption,\n            },\n          });\n        }\n\n        // show OK button or feedback\n        this.showFeedback();\n      });\n\n    });\n\n  }\n\n  toggleMenu(clickClose = false) {\n\n    if (clickClose === true) {\n      __addClass(this.$menu, 'hidden');\n      return;\n    }\n\n    if (this.selectionMouseDown === true) {\n      __addClass(this.$menu, 'hidden');\n      return;\n    }\n\n    if (__hasClass(this.$menu, 'hidden') && this.selectionMouseDown === false) {\n      this._setmenuDimensions();\n      __removeClass(this.$menu, 'hidden');\n    }\n\n  }\n\n  _setmenuDimensions() {\n    const menuDimensions = __getRealDimensions(this.$menu);\n    const parentTranslatedPosition = __positionTranslated(this.$editor);\n    const parentDimensions = __position(this.$editor);\n\n    // let additionalSize = ( this.selectionDirection === \"right\" ) ?\n\n    const isOverflowAt = {\n      right: (this.selectionAttributes.left + this.selectionAttributes.width + menuDimensions.width + this.opts.menuMargin.x) > (parentTranslatedPosition.left + parentDimensions.width),\n      top: (this.selectionAttributes.top - menuDimensions.height - this.opts.menuMargin.y) < (parentTranslatedPosition.top),\n      bottom: (this.selectionAttributes.top + this.selectionAttributes.height + menuDimensions.height + this.opts.menuMargin.y) > (parentTranslatedPosition.top + parentDimensions.height),\n    };\n\n    let leftDimensions;\n    let topDimensions;\n\n    if (isOverflowAt.right) {\n\n      leftDimensions = this.selectionAttributes.left - menuDimensions.width - this.opts.menuMargin.x;\n\n    } else {\n\n      leftDimensions = this.selectionAttributes.left + this.selectionAttributes.width + this.opts.menuMargin.x;\n\n    }\n\n    if (isOverflowAt.top) {\n\n      topDimensions = this.selectionAttributes.top + menuDimensions.height + this.opts.menuMargin.y;\n\n    } else {\n\n      topDimensions = this.selectionAttributes.top - menuDimensions.height - this.opts.menuMargin.y;\n\n    }\n\n    this.$menu.style.left = `${leftDimensions}px`;\n    this.$menu.style.top = `${topDimensions}px`;\n\n  }\n\n  handlerMenuClose(e) {\n\n    this.toggleMenu(true);\n\n    e.preventDefault();\n\n  }\n\n  handlerMenuActions(e) {\n\n    const $el = e.currentTarget;\n    const command = $el.getAttribute('data-command');\n    const commandName = $el.getAttribute('data-command-name');\n\n    /* :TODO: Cache the options for given element to avoid JSON parsing each time */\n    const options = JSON.parse($el.getAttribute('data-command-options'));\n\n    this.setSelection(command, commandName, options);\n\n    e.preventDefault();\n\n  }\n\n  handlerFocus(e) {\n    if (e.target.closest('.canvas') === null) return;\n\n    const isMouseRightClick = e.which === 3;\n\n    if (isMouseRightClick) { return; }\n\n    if (__hasClass(e.target, 'node-close')) { return; }\n\n    if (__hasClass(e.target, 'node-selected')) { return; }\n\n    if (e.type === 'mousedown' || e.type === 'touchstart') {\n\n      // start tracking the mouse down\n      this.selectionMouseDown = true;\n\n      if (this.hasMenu === true) {\n        this.toggleMenu();\n      }\n\n    }\n\n    if ((e.type === 'mouseup' || e.type === 'touchend') && this.selectionMouseDown) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      // reset saved last selection settings\n      this.lastSelectionSettings = {};\n\n      this.selection = window.getSelection();\n      this.isCollapsed = this.selection.isCollapsed;\n      this.lastSelectionSettings.isCollapsed = this.selection.isCollapsed;\n      this.savedSelectionRange = this.selection.getRangeAt(0);\n\n      this.selectionMouseDown = false;\n\n      this.lastSelectionSettings.anchorOffset = this.selection.anchorOffset;\n      this.lastSelectionSettings.focusOffset = this.selection.focusOffset;\n      this.lastSelectionSettings.text = this.savedSelectionRange.toString();\n\n      /* https://developer.mozilla.org/en-US/docs/Web/API/Selection/isCollapsed */\n      /* Returns a Boolean indicating whether the selection's start and end points are at the same position. */\n      /* display context menu only if the cursor is NOT at the same position */\n      if (this.selection.isCollapsed === false && this.savedSelectionRange.toString().trim() !== '') {\n\n        this.selectionDirection = (this.selection.anchorOffset <= this.selection.focusOffset) ? 'right' : 'left';\n\n        if (this.hasMenu === true) {\n\n          this._setSelectionPosition(); // :TODO: cannot be used in contentEditable editor yet\n\n          this.toggleMenu();\n        }\n\n      }\n\n    }\n\n  }\n\n  _setSelectionPosition() {\n\n    const dummyElement = document.createElement('span');\n    dummyElement.className = 'dummy-range-element';\n\n    this.savedSelectionRange.surroundContents(dummyElement);\n\n    const selectionPosition = __positionTranslated(dummyElement);\n    const selectionDimension = __position(dummyElement);\n\n    this.selectionAttributes = {\n      left: selectionPosition.left,\n      top: selectionPosition.top,\n      width: selectionDimension.width,\n      height: selectionDimension.height,\n    };\n\n    __removeClass(dummyElement, 'dummy-range-element');\n\n    this._removeNodeKeepTextContent(dummyElement);\n\n  }\n\n  _highlightContents($domEl, newTagId) {\n    $domEl.appendChild(this.savedSelectionRange.extractContents());\n    this.savedSelectionRange.insertNode($domEl);\n\n    $domEl.setAttribute('data-tag-id', newTagId);\n  }\n\n  _storeHighlightedContents($domEl, newTagId) {\n    const tagName = $domEl.getAttribute('data-command-name');\n\n    // get tag color\n    const classes = $domEl.getAttribute('class');\n    // const colors = classes.match(/(?<=node-text-)[a-z]*/g);\n    const classesArray = classes.split(' ');\n    let color = '';\n    classesArray.forEach((value) => {\n      if (value.includes('node-text-')) {\n        color = value.replace('node-text-', '');\n      }\n    });\n\n    // dispatch event that editor has changed\n    const idForSend = this.id.replace('editor-', '');\n    __dispatchEvent(document, 'editor.change', {}, {\n      text: {\n        id: idForSend,\n        task: 'add',\n        tagData: { tagName },\n        value: $domEl.cloneNode(true),\n        tagColor: color,\n      },\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  _removeNodeKeepTextContent(node) {\n    const text = node.textContent;\n    node.parentNode.insertBefore(document.createTextNode(text), node);\n    __remove(node);\n  }\n\n  _createCloseBtnForElement($parentEl, opts = {}) {\n\n    const $elClose = document.createElement('span');\n    $elClose.innerHTML = '×';\n    $elClose.setAttribute('class', opts.class);\n\n    const classesToToggle = opts.toggleClass.split(' ');\n\n\n    const clickHandler = (e) => {\n\n      const $closeBtn = e.currentTarget;\n      const $nodeElement = $closeBtn.parentNode;\n\n      $closeBtn.removeEventListener('click', clickHandler);\n      $nodeElement.removeChild($closeBtn);\n\n      if (undefined !== $nodeElement.commentRef) {\n\n        /* :TODO: temporary way to save the reference to the DOM element */\n        this.$editor.removeChild($nodeElement.commentRef);\n        $nodeElement.commentRef = null;\n\n      }\n\n      this._removeNodeKeepTextContent($nodeElement);\n\n      const tagName = $nodeElement.getAttribute('data-command-name');\n\n      // dispatch event that editor has changed\n      const idForSend = this.id.replace('editor-', '');\n      __dispatchEvent(document, 'editor.change', {}, {\n        text: {\n          id: idForSend,\n          task: 'remove',\n          tagData: { tagName },\n          value: $nodeElement,\n        },\n      });\n\n      e.stopPropagation();\n\n    };\n\n    $elClose.addEventListener('click', clickHandler.bind(this));\n\n    $parentEl.appendChild($elClose);\n\n  }\n\n  _calculateCommentPosition($node) /* : Object */ {\n\n    const nodePosition = __positionTranslated($node);\n\n    return {\n      left: `${nodePosition.left + parseInt($node.offsetWidth, 10) + this.opts.commentMargin.x}px`,\n      top: `${nodePosition.top + this.opts.commentMargin.y}px`,\n    };\n\n  }\n\n  _createCommentForNode($el, opts = {}) {\n\n    const commentTemplate = document.getElementById('comment-template').innerHTML;\n\n    const div = document.createElement('div');\n    div.innerHTML = commentTemplate;\n\n    const commentDiv = div.childNodes[1];\n\n    // attach js reference to the dom element\n    commentDiv.data = {};\n    commentDiv.data.nodeRef = $el;\n\n    const commentNewTextarea = commentDiv.querySelector('.comment-new-text');\n    const commentDivButtonSubmit = commentDiv.querySelector('button');\n    const commentCommentsContainer = commentDiv.querySelector('.comments-container');\n\n    const calculatedCommentPosition = this._calculateCommentPosition($el);\n\n    commentDiv.style.left = calculatedCommentPosition.left;\n    commentDiv.style.top = calculatedCommentPosition.top;\n\n    __addClass(commentDiv, opts.class);\n\n    commentDiv.addEventListener('click', (e) => {\n\n      if (__hasClass(e.target, 'close')) {\n\n        __addClass(commentDiv, 'hidden');\n        __removeClass($el, 'active');\n\n      }\n\n    });\n\n    commentDivButtonSubmit.addEventListener('click', (e) => {\n\n      if (commentNewTextarea.value !== '') {\n\n        const commentItem = document.createElement('div');\n        commentItem.className = 'comment-item';\n\n        commentItem.innerText = commentNewTextarea.value;\n\n        commentCommentsContainer.appendChild(commentItem);\n\n        commentNewTextarea.value = '';\n      }\n\n    });\n\n    this.$editor.append(commentDiv);\n\n    __addClass($el, 'comment-created');\n\n    /* :TODO: Temporary way to save the reference to the DOM element */\n    $el.commentRef = commentDiv;\n\n\n  }\n\n  _addCommentHandlerForElement($el, opts = {}) {\n\n    __addClass($el, 'has-comments');\n\n    function clickHandler(e) {\n\n      if (!__hasClass(e.target, 'node-close')) {\n\n        if (!__hasClass($el, 'comment-created')) {\n\n          this._createCommentForNode($el, opts);\n\n        } else {\n\n          /* recalculate comment div position */\n          const calculatedCommentPosition = this._calculateCommentPosition($el);\n\n          $el.commentRef.style.left = calculatedCommentPosition.left;\n          $el.commentRef.style.top = calculatedCommentPosition.top;\n\n          __removeClass($el.commentRef, 'hidden');\n\n        }\n\n        if (!__hasClass($el, 'active')) {\n\n          __addClass($el, 'active');\n\n        } else {\n\n          __removeClass($el, 'active');\n          __addClass($el.commentRef, 'hidden');\n\n        }\n\n      }\n\n      e.stopPropagation();\n\n    }\n\n    $el.addEventListener('click', clickHandler.bind(this));\n\n  }\n\n  setSelection(command, commandName, opts = {}) {\n\n    if (this.selection) {\n\n      if (command === 'toggle-class') {\n\n        const $el = document.createElement('span');\n        $el.setAttribute('class', opts.toggleClass);\n        $el.setAttribute('data-command-name', commandName);\n\n        const newTagId = this._generateNewTagId();\n\n        this._highlightContents($el, newTagId);\n\n        if (opts.closeBtn === true) {\n          this._createCloseBtnForElement($el, {\n            class: 'node-close',\n            toggleClass: opts.toggleClass,\n          });\n        }\n\n        if (opts.comments === true) {\n          this._addCommentHandlerForElement($el, {\n            class: opts.commentsClass,\n          });\n        }\n\n        this._storeHighlightedContents($el, newTagId);\n\n        if (opts.showCommentsOnInit === true) {\n          $el.click();\n        }\n\n      }\n\n      // hide context menu after selecting the action#\n      this.toggleMenu(true);\n\n      // show OK button or feedback\n      this.showFeedback();\n\n    }\n\n  }\n\n}\n\nEditor.defaults = {\n  menuClass: 'contextual-menu-component',\n  canvasClass: 'canvas',\n  resetBtnClass: 'reset',\n  closeBtnClass: 'node-close',\n  nodeSelectedClass: 'node-selected',\n  commentMargin: {\n    x: 50,\n    y: 0,\n  },\n  menuMargin: {\n    x: 15,\n    y: 15,\n  },\n  textOptions: {\n    enable: false,\n    animatedClass: 'active',\n    selectedClass: 'selected',\n    deselectedClass: 'deselected',\n  },\n\n};\n\nEditor._hasMenu = (opts) => opts.funkce !== 'cteni' && opts.funkce !== 'psani' && (opts.menu !== false && opts.menu !== undefined);\nEditor._hasToolbar = (opts) => opts.funkce === 'psani' || (opts.toolbar !== false && opts.toolbar !== undefined);\n","import { __toggleClass, __getHTML, __dispatchEvent } from '../lib/utils';\nimport Component from './component';\n\n// zoom the image\nexport default class Keywords extends Component {\n  constructor($element, opts = {}) {\n    super($element);\n    this.id = this.target.id;\n    this.function = this.target.getAttribute('data-keywords') || 'selekce-' || 'selekce+';\n    this.$controls = this.target.querySelectorAll('[data-keywords-control]');\n\n    this.opts = { ...Keywords.defaults, ...opts };\n\n    this.$itemsContainer = this.target.querySelector(`.${this.opts.itemsContainerClassName}`);\n\n    if (this.opts.inherit && this.opts.inherit.from.length > 0) {\n      // console.log(this.opts.inherit.from);\n      this.isInherited = true;\n    }\n    else {\n      this.$items = this.target.querySelectorAll(`.${this.opts.itemClassName}`);\n    }\n\n  }\n\n  init() {\n    switch (this.function) {\n      case 'selekce-':\n      case 'selekce+':\n        // we have data at the instantiation for importing\n        if (this.opts.import && this.opts.import.length > 0) {\n          this.$itemsContainer.innerHTML = Keywords._getHTMLFromItems(this.opts.import);\n        }\n\n        // console.log(this.id, this.isInherited);\n        if (this.isInherited) {\n          // if onInit, we copy the elements\n          // by their ids into the itemsContainer of this object\n          if (this.opts.inherit.onInit) {\n            this._regenerateItemsContainerFromInherited();\n          }\n        }\n\n        this._registerHandlers();\n        break;\n      case 'wordcloud':\n        this.$items.forEach(($item) => {\n          $item.setAttribute('data-keywords-item', 0);\n        });\n        this._changeSizeOfKeywordItem(this.opts.skala);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  _changeSizeOfKeywordItem(maxLevel) {\n    maxLevel = maxLevel ? parseInt(maxLevel, 10) : 4;\n\n    function setNewLevelValue($keyword, number, feedback) {\n      const oldValue = parseInt($keyword.getAttribute('data-keywords-item'), 10);\n      const newValue = oldValue + number;\n      const value = Math.abs(newValue) > maxLevel ? oldValue : newValue;\n      $keyword.setAttribute('data-keywords-item', value);\n\n      feedback();\n    }\n\n    this.$controls.forEach(($control) => {\n      const $keyword = $control.parentElement.parentElement;\n      const controlFunction = $control.getAttribute('data-keywords-control');\n\n      switch (controlFunction) {\n        case 'minus':\n          $control.addEventListener('click', (event) => {\n            setNewLevelValue($keyword, -1, this.showFeedback);\n            event.preventDefault();\n          });\n          break;\n\n        case 'plus':\n          $control.addEventListener('click', (event) => {\n            setNewLevelValue($keyword, 1, this.showFeedback);\n            event.preventDefault();\n          });\n          break;\n\n        default:\n          break;\n      }\n    });\n  }\n\n  _regenerateItemsContainerFromInherited() {\n    let tempContent = '';\n\n    this.opts.inherit.from.forEach((id) => {\n      const temp = document.getElementById(id).querySelector(`.${this.opts.itemsContainerClassName}`).innerHTML;\n      // rename ids of the original items to avoid duplicates in the DOM\n      tempContent += Keywords.renameItemsIds(id, this.id, temp);\n      // console.log(tempContent);\n    });\n\n    this.$itemsContainer.innerHTML = tempContent;\n\n    this.$items = this.target.querySelectorAll(`.${this.opts.itemClassName}`);\n  }\n\n  _registerHandlers() {\n\n    // this.target.querySelectorAll(`.${this.opts.itemClassName}`).forEach(($item) => {\n    this.$items.forEach(($item) => {\n      $item.addEventListener('click', this._clickEventHandler.bind(this), true);\n      document.addEventListener('keyword.change', (e) => { this._dispatchEventHandler(e, $item); }, false);\n    });\n\n  }\n\n\n  _clickEventHandler(e) {\n\n    if (e.type === 'click') {\n\n      __toggleClass(e.currentTarget, 'disabled');\n\n      // dispatch event that keyword has changed\n      __dispatchEvent(document, 'keyword.change', {}, {\n        keywords: {\n          id: this.id,\n          node: e.currentTarget,\n        },\n      });\n\n      this.showFeedback();\n    }\n  }\n\n  _dispatchEventHandler(e, $item) {\n    const { id, node } = e.detail.keywords;\n\n    if (this.isInherited && this.opts.inherit.from.includes(id)) {\n      const currentId = $item.id;\n      const nodeId = node.id;\n      const removeFeatureIdFromCurrentId = currentId.replace(this.id, '');\n      const removeFeatureIdFromNodeId = nodeId.replace(id, '');\n\n      if (removeFeatureIdFromCurrentId === removeFeatureIdFromNodeId) {\n        __toggleClass($item, 'disabled');\n      }\n    }\n  }\n}\n\n\nKeywords._getItemFromDOMElement = ($item) => ({\n  class: $item.className,\n  id: $item.getAttribute('id'),\n  text: $item.innerText,\n});\n\nKeywords._getItemsHTML = ($itemsContainer) => $itemsContainer.innerHTML;\n\nKeywords._getItemsFromHTML = ($itemsContainer, itemsClassName) => {\n  const $items = $itemsContainer.querySelectorAll(`.${itemsClassName}`);\n  const itemsArray = [];\n\n  $items.forEach(($item) => {\n    itemsArray.push(Keywords._getItemFromDOMElement($item));\n  });\n\n\n  return itemsArray;\n\n};\n\nKeywords._getDOMElementFromItem = (item) => {\n\n  const newDiv = document.createElement('div');\n  newDiv.setAttribute('class', item.class);\n  newDiv.setAttribute('id', item.id);\n  newDiv.innerHTML = item.text;\n\n  return __getHTML(newDiv);\n\n};\n\nKeywords._getHTMLFromItems = (items) => {\n\n  let contentHTML = '';\n\n  items.forEach((item) => {\n\n    contentHTML += Keywords._getDOMElementFromItem(item);\n\n  });\n\n  return contentHTML;\n\n};\n\n\nKeywords.renameItemsIds = (oldId, newId, itemsHTML) => {\n\n  const expString = new RegExp(oldId, 'g');\n\n  return itemsHTML.replace(expString, newId);\n\n};\n\nKeywords.defaults = {\n  itemsContainerClassName: 'keywords-items-container',\n  itemClassName: 'keywords-item',\n};\n","import { __removeClass, __toggleClass } from '../lib/utils';\nimport Component from './component';\n\n\nexport default class TestQuiz extends Component {\n\n  constructor(id, element, opts) {\n    super(element);\n\n    this.id = id;\n\n    this.opts = { ...TestQuiz.defaults, ...opts };\n\n    this.$questions = this.target.querySelectorAll(`.${this.opts.itemClass}`);\n    this.cache = {\n      answersCorrect: 0,\n      colors: [],\n      questions: [],\n    };\n\n    // get colors for all feedback variants\n    if (this.opts.zpetnaVazba) {\n      this.cache.colors = this.opts.zpetnaVazba.map((feedback) => feedback.barva);\n    }\n  }\n\n  init() {\n    this._registerHandlers();\n  }\n\n  _registerHandlers() {\n\n    this.$questions.forEach(($question, questionIndex) => {\n      // all questions are without answer by default\n      this.cache.questions.push({ answered: false });\n\n      const answerCorrect = parseInt($question.getAttribute('data-module-answer'), 10);\n      const $answers = $question.querySelectorAll(`.${this.opts.optionClass}`);\n\n      $answers.forEach(($answer, answerIndex) => {\n        $answer.addEventListener('click', () => {\n          const $answerCurrent = $answer;\n\n          // if already selected do nothing\n          if ($answerCurrent.classList.contains('selected')) {\n            return;\n          }\n\n          // remove the selection\n          $answers.forEach(($answersItem) => __removeClass($answersItem, this.opts.selectedClass));\n          // select the clicked one\n          __toggleClass($answerCurrent, this.opts.selectedClass);\n\n          // get sum of all corect answers\n          if (this.opts.zpetnaVazba) {\n            if (answerIndex === answerCorrect) {\n              this.cache.answersCorrect += 1;\n            } else if (this.cache.answersCorrect !== 0 && this.cache.questions[questionIndex].answered === true) {\n              this.cache.answersCorrect -= 1;\n            }\n            // loop through all \"zpetnaVazba\" to get the one with the fullfilled condition\n            const feedbackActual = this.opts.zpetnaVazba.find((feedback) => feedback.podminka.includes(this.cache.answersCorrect));\n\n            // show the right feedback message\n            this.$buttonFeedback.classList.remove(...this.cache.colors);\n            this.$buttonFeedback.classList.add(feedbackActual.barva);\n            this.$buttonFeedbackText.innerText = feedbackActual.text;\n          }\n\n          // note that this question has been answered (whether true or false)\n          this.cache.questions[questionIndex].answered = true;\n\n          // show OK button with feedback only when all question have been answered\n          if (this.cache.questions.find((question) => !question.answered) === undefined) {\n            this.showFeedback();\n          }\n\n        }, false);\n      });\n    });\n  }\n}\n\nTestQuiz.defaults = {\n  itemClass: 'test-quiz-item',\n  optionClass: 'option',\n  selectedClass: 'selected',\n};\n","/* eslint-disable max-classes-per-file */\n// [data-fullscreen]\nimport Component from './component';\nimport MagnifyingGlass from './magnifying-glass';\nimport { imageIsLoaded } from '../lib/utils';\n\nclass Fullscreen extends Component {\n  constructor($element) {\n    super($element);\n\n    this.$fullscreen = document.querySelector('[data-fullscreen=\"fullscreen\"]');\n    this.$fullscreenContainer = this.$fullscreen.querySelector('[data-fullscreen=\"container\"]');\n    this.$fullscreenTarget = this.$fullscreen.querySelector('[data-fullscreen=\"target\"]');\n\n    this.window = {};\n    this.image = {};\n\n    this.window.width = window.innerWidth;\n    this.window.height = window.innerHeight;\n    this.window.ratio = this.window.width / this.window.height;\n  }\n}\n\nexport default class FullscreenToggle extends Fullscreen {\n  constructor($element) {\n    super($element);\n\n    this.target.addEventListener('click', (event) => {\n      this.$fullscreenContainer.innerHTML = this.target.nextElementSibling.outerHTML;\n      this.$fullscreenTarget = this.$fullscreenContainer.firstElementChild;\n      this.$fullscreenTarget.removeAttribute('style');\n      this.$fullscreenTarget.removeAttribute('id');\n\n      switch (this.target.nextElementSibling.nodeName.toLowerCase()) {\n        case 'img':\n          setTimeout(() => {\n            imageIsLoaded(this.$fullscreenTarget.currentSrc)\n              .then(() => {\n                this.image.width = this.$fullscreenTarget.naturalWidth;\n                this.image.height = this.$fullscreenTarget.naturalHeight;\n                this.image.ratio = this.image.width / this.image.height;\n\n                this.setSize();\n\n                const magnifyingGlass = new MagnifyingGlass(this.$fullscreenTarget);\n              });\n          }, 10);\n          break;\n\n        case 'svg':\n          // eslint-disable-next-line no-case-declarations\n          const viewbox = this.$fullscreenTarget.getAttribute('viewBox').split(' ');\n\n          [, , this.image.width, this.image.height] = viewbox;\n          this.image.ratio = this.image.width / this.image.height;\n\n          this.setSize();\n\n          // eslint-disable-next-line no-case-declarations\n          const $svgTexts = this.$fullscreenTarget.querySelectorAll('textarea');\n          if ($svgTexts.length > 0) {\n            $svgTexts.forEach(($svgText) => {\n              const { id } = $svgText;\n              $svgText.removeAttribute('id');\n              $svgText.value = document.getElementById(id).value;\n              $svgText.readOnly = true;\n            });\n          }\n          break;\n\n        default:\n          break;\n      }\n\n      this.$fullscreen.classList.toggle('hidden');\n\n      this.showFeedback();\n\n      event.preventDefault();\n      event.stopPropagation();\n    }, false);\n\n  }\n\n  setSize() {\n    if (this.image.ratio >= this.window.ratio) {\n      this.$fullscreenTarget.style.width = '100%';\n      this.$fullscreenTarget.style.height = 'auto';\n    }\n    else {\n      this.$fullscreenTarget.style.width = 'auto';\n      this.$fullscreenTarget.style.height = `${this.window.height}px`;\n    }\n  }\n}\n","import Component from './component';\nimport { __dispatchEvent } from '../lib/utils';\n\nexport default class UserText extends Component {\n  constructor($element) {\n    super($element);\n    this.$userTexts = this.$slide.querySelectorAll('[data-textarea-target]');\n    this.$counter = this.target.nextElementSibling.querySelector('[data-usertext-counter]');\n    this.$wrapper = this.$counter.parentElement;\n\n    this.feedback = JSON.parse(this.target.getAttribute('data-feedback'));\n\n    this.lengthExpected = {\n      min: parseInt(this.target.getAttribute('minlength') === '0' ? 1 : this.target.getAttribute('minlength'), 10),\n      avg: null,\n      max: parseInt(this.target.getAttribute('maxlength') / 2, 10),\n    };\n    this.lengthExpected.avg = Math.floor((this.lengthExpected.max - this.lengthExpected.min) / 4 + this.lengthExpected.min);\n\n    this.cache = {\n      answersCorrect: 0,\n      colors: [\n        'color-red',\n        'color-orange',\n        'color-green',\n      ],\n      questions: [],\n    };\n\n    this.lastValue = '';\n    this.hadData = this.target.value && this.target.value.length > 0;\n    this.wasUsed = false;\n\n    if (this.hadData) {\n      this.updateCharacterCounter();\n    }\n\n    if (!HISTORYLAB.import.done) {\n      // duplicate source of different text element\n      this.toDuplicate = this.target.getAttribute('data-duplicate-text');\n      this.textDuplicateSources = this.toDuplicate ? this.toDuplicate.split(' ') : [];\n\n      // listen events\n      this.getEvents();\n      this.addEventListeners();\n    }\n  }\n\n  updateCharacterCounter(length = this.target.value.length) {\n    this.$wrapper.classList.remove(...this.cache.colors);\n    if (length < this.lengthExpected.min) this.$wrapper.classList.add(this.cache.colors[0]);\n    else if (length <= this.lengthExpected.avg) this.$wrapper.classList.add(this.cache.colors[1]);\n    else if (length > this.lengthExpected.avg) this.$wrapper.classList.add(this.cache.colors[2]);\n\n    this.$counter.innerText = length;\n    this.target.classList.add('is-used', !this.wasUsed);\n    this.wasUsed = true;\n  }\n\n  updateFeedback(length = this.target.value.length) {\n    if (!this.$buttonFeedback) return;\n\n    this.$buttonFeedback.classList.remove(...this.cache.colors);\n    if (length < this.lengthExpected.min) {\n      this.$buttonFeedback.classList.add(this.cache.colors[0]);\n      this.$buttonFeedbackText.innerText = this.feedback.none;\n    } else {\n\n      if (length <= this.lengthExpected.avg) {\n        this.$buttonFeedback.classList.add(this.cache.colors[1]);\n        this.$buttonFeedbackText.innerText = this.feedback.short;\n      }\n      else if (length > this.lengthExpected.avg) {\n        this.$buttonFeedback.classList.add(this.cache.colors[2]);\n        this.$buttonFeedbackText.innerText = this.feedback.ok;\n      }\n\n      this.target.setAttribute('data-textarea-target', 'success');\n      // check if all conditions of the same component on the same slide are met\n      const conditionAll = Array.from(this.$userTexts).find(($userText) => ($userText.getAttribute('data-textarea-target') !== 'success'));\n\n      if (conditionAll === undefined) {\n        // show OK button or feedback\n        this.showFeedback();\n      }\n    }\n  }\n\n  addEventListeners() {\n    // BLUR\n    this.target.addEventListener('blur', (event) => {\n      this.updateCharacterCounter();\n\n      if (event.target.value !== this.lastValue) {\n        const taskName = (this.lastValue === '') ? 'create' : 'change';\n        this.lastValue = event.target.value;\n\n        // dispatch event that text has changed\n        __dispatchEvent(document, 'text.change', {}, {\n          text: {\n            id: event.target.id,\n            task: taskName,\n            text: event.target.value,\n          },\n        });\n\n        // remove connection of any textfields\n        this.textDuplicateSources = [];\n      }\n    });\n\n    // KEYUP\n    this.target.addEventListener('keyup', (event) => {\n      event.stopPropagation();\n\n      const valueLength = this.target.value.length;\n      this.updateCharacterCounter(valueLength);\n      this.updateFeedback(valueLength);\n    });\n  }\n\n  getEvents() {\n    if (this.textDuplicateSources[0]) {\n\n      document.addEventListener('text.change', (e) => {\n        if (this.textDuplicateSources.includes(e.detail.text.id)) {\n\n          const taskName = (this.target.value === '') ? 'create' : 'change';\n          switch (e.detail.text.task) {\n            case 'create':\n            case 'change':\n              // if is something already there\n              if (this.target.value !== '') this.target.value += '\\n';\n\n              // if array length is one it means that can by connection line\n              if (this.textDuplicateSources.length === 1) {\n                this.target.value = e.detail.text.text;\n              } else {\n                this.target.value += `${e.detail.text.text}\\n`;\n              }\n\n              // dispatch event that text has changed\n              __dispatchEvent(document, 'text.change', {}, {\n                text: {\n                  id: this.target.id,\n                  task: taskName,\n                  text: this.target.value,\n                },\n              });\n\n              // make different first value if is need\n              this.lastValue = this.target.value;\n\n              this.updateCharacterCounter();\n              break;\n            default:\n              console.log('Nondefinated text events task. :(');\n          }\n        }\n      });\n    }\n  }\n}\n","import Component from '../component';\n\nexport default class AudioPlayerNormal extends Component {\n\n  constructor($element) {\n    super($element);\n\n    this.$playButton = this.target.querySelector('[data-player-control]');\n    this.$loadWave = this.target.querySelector('[data-audio-wave]');\n    this.$leftTime = this.target.querySelector('[data-audio-time-left]');\n    this.$audioDuration = this.target.querySelector('[data-audio-time-duration]');\n\n    this.wavesurfer = WaveSurfer.create({\n      container: this.$loadWave,\n      waveColor: '#A77977',\n      progressColor: '#FCE4E3',\n      height: 80,\n      responsive: true,\n      barWidth: 2,\n    });\n    this.wavesurfer.load(this.$loadWave.dataset.src);\n\n    this.initWave();\n  }\n\n  initWave() {\n    this.wavesurfer.on('ready', () => {\n      this.$leftTime.textContent = '0:00';\n      const duration = this.wavesurfer.getDuration();\n      const minutes = Math.floor((duration % 3600) / 60);\n      const seconds = (`00${Math.floor(duration % 60)}`).slice(-2);\n      this.$audioDuration.textContent = `${minutes}:${seconds}`;\n\n      this.addListenerAfterReady();\n    });\n  }\n\n  addListenerAfterReady() {\n    this.wavesurfer.on('audioprocess', (time) => {\n      const minutes = Math.floor((time % 3600) / 60);\n      const seconds = (`00${Math.floor(time % 60)}`).slice(-2);\n      this.$leftTime.textContent = `${minutes}:${seconds}`;\n    });\n\n    this.wavesurfer.on('finish', () => {\n      this.$playButton.setAttribute('data-player-control', 'paused');\n    });\n\n    this.$playButton.addEventListener('click', () => {\n      this.wavesurfer.playPause();\n\n      if (this.$playButton.getAttribute('data-player-control') === 'paused') {\n        this.$playButton.setAttribute('data-player-control', 'playing');\n      } else {\n        this.$playButton.setAttribute('data-player-control', 'paused');\n      }\n\n      this.showFeedback();\n    });\n\n    // stop audio prehravac kdyz se zapne dalsi slajd\n    const $nextSlides = document.querySelectorAll('[data-nav-button]');\n    $nextSlides.forEach(($nextSlide) => {\n      $nextSlide.addEventListener('click', () => {\n        if (this.$playButton.getAttribute('data-player-control') === 'playing') {\n          this.wavesurfer.playPause();\n          this.$playButton.setAttribute('data-player-control', 'paused');\n        }\n      });\n    });\n\n  }\n\n}\n","import AudioPlayer from './audio-player';\nimport { getSecondsMinutesFormat } from './media';\n\nexport default class AudioPlayerSimple extends AudioPlayer {\n  constructor($element) {\n    super($element);\n\n    this.$audio = this.target.querySelector('audio');\n    this.$timeLeft = this.target.querySelector('[data-audio-time-left]');\n    this.$duration = this.target.querySelector('[data-audio-time-duration]');\n\n    this.$duration.innerText = `/${getSecondsMinutesFormat(this.$audio.duration)}`;\n\n    AudioPlayer.addEventListeners(this.target, this.showFeedback);\n  }\n}\n","import Component from './component';\n\nexport default class FakeMap extends Component {\n  constructor($element) {\n    super($element);\n\n    this.$buttons = this.target.querySelectorAll('[data-fake-map=\"toggle\"]');\n    this.$maps = this.target.querySelectorAll('[data-fake-map=\"map\"]');\n    this.lastActiveIndex = 0;\n\n    this.addEventListenerToButtons();\n  }\n\n  switchMap($button, index) {\n    this.$maps[this.lastActiveIndex].classList.remove('active');\n    this.$buttons[this.lastActiveIndex].classList.remove('active');\n\n    this.$maps[index].classList.add('active');\n    $button.classList.add('active');\n\n    this.lastActiveIndex = index;\n  }\n\n  addEventListenerToButtons() {\n    this.$buttons.forEach(($button, index) => {\n\n      $button.addEventListener('click', (event) => {\n        this.switchMap($button, index);\n        this.showFeedback();\n\n        event.preventDefault();\n      });\n\n    });\n  }\n}\n","/* eslint-disable no-nested-ternary */\nimport Component from '../component';\nimport { getSecondsMinutesFormat, mediaEvents } from './media';\n\nexport default class VideoPlayer extends Component {\n  constructor($element, options) {\n    super($element);\n\n    this.$media = this.target.querySelector('video');\n    this.options = Object(options);\n    this.prefix = this.options.prefix || 'media';\n    this.lang = Object(this.options.lang);\n    // lang.currentTime\n    // lang.play\n    // lang.pause\n    // lang.minutes\n    // lang.seconds\n    // lang.leaveFullscreen\n    // lang.enterFullscreen\n\n    this.paused = null;\n    this.currentTime = null;\n    this.duration = null;\n    this.interval = null;\n\n    this.$document = this.target.ownerDocument;\n    this.$controls = this.target.querySelector('.media-player-controls');\n    // play/pause toggle\n    this.$play = this.$controls.querySelector('[data-player-control]');\n    this.$playSymbol = this.$play.querySelector('.media-play-symbol');\n    this.$pauseSymbol = this.$play.querySelector('.media-pause-symbol');\n    // time slider\n    this.$time = this.$controls.querySelector('[data-video-time-progress]');\n    this.$timeMeter = this.$time.querySelector('.media-meter.media-time-meter');\n    this.$timeRange = this.$time.querySelector('.media-range.media-time-range');\n\n    // current time text\n    this.$currentTimeText = this.$document.createTextNode('');\n    this.$currentTime = this.$controls.querySelector('[data-video-time-left]');\n    this.$currentTime.appendChild(this.$currentTimeText);\n\n    // duration time text\n    this.durationTime = this.$media.duration;\n    this.$durationTime = this.$controls.querySelector('[data-video-time-duration]');\n    this.$durationTime.innerText = getSecondsMinutesFormat(this.durationTime);\n    this.$durationTime.setAttribute(\n      'title',\n      `${VideoPlayer.timeToAural(\n        this.durationTime,\n        this.lang.minutes || 'minutes',\n        this.lang.seconds || 'seconds',\n      )}`,\n    );\n\n    // fullscreen button\n    this.$fullscreen = this.$controls.querySelector(\n      '.fullscreen-toggle',\n    );\n    this.$enterFullscreenSymbol = this.$fullscreen.querySelector(\n      '.media-enterFullscreen-symbol',\n    );\n    this.$leaveFullscreenSymbol = this.$fullscreen.querySelector(\n      '.media-leaveFullscreen-symbol',\n    );\n\n    // fullscreen api\n    this._fullscreenchange = 'onfullscreenchange' in this.target\n      ? 'fullscreenchange'\n      : 'onwebkitfullscreenchange' in this.target\n        ? 'webkitfullscreenchange'\n        : 'onMSFullscreenChange' in this.target\n          ? 'MSFullscreenChange'\n          : 'fullscreenchange';\n\n    this._requestFullscreen = this.target.requestFullscreen\n    || this.target.webkitRequestFullscreen\n    // || this.target.mozRequestFullScreen\n    || this.target.msRequestFullscreen;\n\n    this.onCanPlayStart = this.onCanPlayStart.bind(this);\n    this.onLoadStart = this.onLoadStart.bind(this);\n    this.onLoadedData = this.onLoadedData.bind(this);\n    this.onPlayChange = this.onPlayChange.bind(this);\n    this.onTimeChange = this.onTimeChange.bind(this);\n    this.onPlayClick = this.onPlayClick.bind(this);\n    this.onTimeKeydown = this.onTimeKeydown.bind(this);\n    this.onTimeClick = this.onTimeClick.bind(this);\n    this.onTimeKeydown = this.onTimeKeydown.bind(this);\n    this.onFullscreenClick = this.onFullscreenClick.bind(this);\n    this.onFullscreenChange = this.onFullscreenChange.bind(this);\n\n    // add event listeners\n    this.$media.addEventListener('canplaythrough', this.onCanPlayStart);\n    this.$media.addEventListener('loadstart', this.onLoadStart);\n    this.$media.addEventListener('loadeddata', this.onLoadedData);\n    this.$media.addEventListener('pause', this.onPlayChange);\n    this.$media.addEventListener('play', this.onPlayChange);\n    this.$media.addEventListener('timeupdate', this.onTimeChange);\n    this.$controls.addEventListener('click', this.onPlayClick, false);\n    // this.$play.addEventListener('click', this.onPlayClick, false);\n    this.$play.addEventListener('keydown', this.onTimeKeydown);\n    this.$time.addEventListener('click', this.onTimeClick, false);\n    this.$time.addEventListener('keydown', this.onTimeKeydown);\n    this.$fullscreen.addEventListener('click', this.onFullscreenClick, false);\n    // listen for fullscreen changes\n    document.addEventListener(\n      this._fullscreenchange,\n      this.onFullscreenChange,\n    );\n\n    // pointer events from time control\n    VideoPlayer.onDrag(this.$time, this.$timeRange, (percentage) => {\n      this.$media.currentTime = this.duration * Math.max(0, Math.min(1, percentage));\n\n      this.onTimeChange();\n    });\n\n    this.onLoadStart();\n  }\n\n  static _fullscreenElement() {\n    return document.fullscreenElement\n    || document.webkitFullscreenElement\n    // || document.mozFullScreenElement\n    || document.msFullscreenElement;\n  }\n\n  static _exitFullscreen() {\n    return document.exitFullscreen\n    || document.webkitCancelFullScreen\n    // || document.mozCancelFullScreen\n    || document.msExitFullscreen;\n  }\n\n  // when the play state changes\n  onPlayChange() {\n    if (this.paused !== this.$media.paused) {\n      this.paused = this.$media.paused;\n\n      this.$play.setAttribute(\n        'aria-label',\n        this.paused ? this.lang.play || 'play' : this.lang.pause || 'pause',\n      );\n      this.target.setAttribute(\n        'data-player-state',\n        this.paused ? 'paused' : 'playing',\n      );\n      this.$playSymbol.setAttribute('aria-hidden', !this.paused);\n      this.$pauseSymbol.setAttribute('aria-hidden', this.paused);\n\n      clearInterval(this.interval);\n\n      if (!this.paused) {\n        // listen for time changes every 30th of a second\n        this.interval = setInterval(this.onTimeChange, 34);\n      }\n\n      // dispatch new \"playchange\" event\n      this.$media.dispatchEvent(mediaEvents.playchange);\n    }\n  }\n\n  // when the time changes\n  onTimeChange() {\n    if (\n      this.currentTime !== this.$media.currentTime\n      || this.duration !== this.$media.duration\n    ) {\n      this.currentTime = this.$media.currentTime;\n      this.duration = this.$media.duration || 0;\n\n      const currentTimePercentage = this.currentTime / this.duration;\n      // const currentTimeCode = VideoPlayer.timeToTimecode(this.currentTime);\n      const currentTimeCode = getSecondsMinutesFormat(this.currentTime);\n      // const remainingTimeCode = VideoPlayer.timeToTimecode(\n      //   this.duration - Math.floor(this.currentTime),\n      // );\n\n      if (currentTimeCode !== this.$currentTimeText.nodeValue) {\n        this.$currentTimeText.nodeValue = currentTimeCode;\n\n        this.$currentTime.setAttribute(\n          'title',\n          `${VideoPlayer.timeToAural(\n            this.currentTime,\n            this.lang.minutes || 'minutes',\n            this.lang.seconds || 'seconds',\n          )}`,\n        );\n      }\n\n      // if (remainingTimeCode !== this.$remainingTimeText.nodeValue) {\n      //   this.$remainingTimeText.nodeValue = remainingTimeCode;\n\n      //   $(this.$remainingTime, {\n      //     title: `${VideoPlayer.timeToAural(\n      //       this.duration - this.currentTime,\n      //       this.lang.minutes || 'minutes',\n      //       this.lang.seconds || 'seconds',\n      //     )}`,\n      //   });\n      // }\n\n      this.$time.setAttribute('aria-valuenow', this.currentTime);\n      this.$time.setAttribute('aria-valuemin', 0);\n      this.$time.setAttribute('aria-valuemax', this.duration);\n\n      this.$timeMeter.style.width = `${currentTimePercentage * 100}%`;\n\n      // dispatch new \"timechange\" event\n      this.$media.dispatchEvent(mediaEvents.timechange);\n    }\n  }\n\n  // when media loads for the first time\n  onLoadStart() {\n    this.$media.removeEventListener('canplaythrough', this.onCanPlayStart);\n    this.$media.addEventListener('canplaythrough', this.onCanPlayStart);\n\n    this.onPlayChange();\n    this.onFullscreenChange();\n    this.onTimeChange();\n  }\n\n  // when the immediate current playback position is available\n  onLoadedData() {\n    this.onTimeChange();\n  }\n\n  // when the media can play\n  onCanPlayStart() {\n    this.$media.removeEventListener('canplaythrough', this.nCanPlayStart);\n\n    // dispatch new \"canplaystart\" event\n    this.$media.dispatchEvent(mediaEvents.canplaystart);\n\n\n    if (!this.paused || this.$media.autoplay) {\n      this.$media.play();\n    }\n  }\n\n  onFullscreenChange() {\n    const isFullscreen = this.target === VideoPlayer._fullscreenElement();\n\n    this.$fullscreen.setAttribute(\n      'aria-label',\n      isFullscreen\n        ? this.lang.leaveFullscreen || 'leave full screen'\n        : this.lang.enterFullscreen || 'enter full screen',\n    );\n    this.$enterFullscreenSymbol.setAttribute('aria-hidden', isFullscreen);\n    this.$leaveFullscreenSymbol.setAttribute('aria-hidden', !isFullscreen);\n  }\n\n  // when the play control is clicked\n  onPlayClick(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.$media[this.$media.paused ? 'play' : 'pause']();\n  }\n\n  // when the time control\n  onTimeClick(event) {\n    event.stopPropagation();\n\n    // handle click if clicked without pointer\n    if (!event.pointerType && !event.detail) {\n      this.onPlayClick(event);\n    }\n  }\n\n  // click from fullscreen control\n  onFullscreenClick(event) {\n    event.stopPropagation();\n\n    if (this._requestFullscreen) {\n      if (this.target === VideoPlayer._fullscreenElement()) {\n        // exit fullscreen\n        VideoPlayer._exitFullscreen().call(document);\n      } else {\n        // enter fullscreen\n        this._requestFullscreen.call(this.target);\n\n        // maintain focus in internet explorer\n        this.$fullscreen.focus();\n\n        // maintain focus in safari\n        setTimeout(() => {\n          this.$fullscreen.focus();\n        }, 200);\n      }\n    } else if (this.$media.webkitSupportsFullscreen) {\n      // iOS allows fullscreen of the video itself\n      if (this.$media.webkitDisplayingFullscreen) {\n        // exit ios fullscreen\n        this.$media.webkitExitFullscreen();\n      } else {\n        // enter ios fullscreen\n        this.$media.webkitEnterFullscreen();\n      }\n\n      this.onFullscreenChange();\n    }\n  }\n\n  // keydown from play control or current time control\n  onTimeKeydown(event) {\n    const { keyCode, shiftKey } = event;\n\n    // 37: LEFT, 38: UP, 39: RIGHT, 40: DOWN\n    if (keyCode >= 37 && keyCode <= 40) {\n      event.preventDefault();\n\n      const offset = keyCode === 37 || keyCode === 39 ? keyCode - 38 : keyCode - 39;\n\n      this.$media.currentTime = Math.max(\n        0,\n        Math.min(\n          this.$media.duration,\n          this.$media.currentTime + offset * (shiftKey ? 10 : 1),\n        ),\n      );\n\n      this.onTimeChange();\n    }\n  }\n\n  // Handle Drag Ranges\n  static onDrag(target, innerTarget, listener) {\n    // eslint-disable-line max-params\n    const hasPointerEvent = undefined !== target.onpointerup;\n    const hasTouchEvent = undefined !== target.ontouchstart;\n    const pointerDown = hasPointerEvent\n      ? 'pointerdown'\n      : hasTouchEvent\n        ? 'touchstart'\n        : 'mousedown';\n    const pointerMove = hasPointerEvent\n      ? 'pointermove'\n      : hasTouchEvent\n        ? 'touchmove'\n        : 'mousemove';\n    const pointerUp = hasPointerEvent\n      ? 'pointerup'\n      : hasTouchEvent\n        ? 'touchend'\n        : 'mouseup';\n\n    // ...\n    const axisProp = 'clientX';\n\n    let window;\n    let start;\n    let end;\n\n    function onpointermove(event) {\n      // prevent browser actions on this event\n      event.preventDefault();\n\n      // the pointer coordinate\n      const position = axisProp in event\n        ? event[axisProp]\n        : (event.touches && event.touches[0] && event.touches[0][axisProp])\n            || 0;\n\n      // the percentage of the pointer along the container\n      const percentage = (position - start) / (end - start);\n\n      // call the listener with percentage\n      listener(percentage);\n    }\n\n    function onpointerdown(event) {\n      // window\n      window = target.ownerDocument.defaultView;\n\n      // client boundaries\n      const rect = innerTarget.getBoundingClientRect();\n\n      // the container start and end coordinates\n      start = rect.left;\n      end = rect.right;\n\n      onpointermove(event);\n\n      window.addEventListener(pointerMove, onpointermove);\n      window.addEventListener(pointerUp, onpointerup);\n    }\n\n    function onpointerup() {\n      window.removeEventListener(pointerMove, onpointermove);\n      window.removeEventListener(pointerUp, onpointerup);\n    }\n\n    // on pointer down\n    target.addEventListener(pointerDown, onpointerdown);\n  }\n\n  // Time To Timecode\n  // DEPRECATED (media.util)\n  // static timeToTimecode(time) {\n  //   return `${`0${Math.floor(time / 60)}`.slice(-2)}:${`0${Math.floor(\n  //     time % 60,\n  //   )}`.slice(-2)}`;\n  // }\n\n  // Time To Aural\n  // DEPRECATED (media.util)\n  static timeToAural(time, langMinutes, langSeconds) {\n    return `${Math.floor(time / 60)} ${langMinutes}, ${Math.floor(\n      time % 60,\n    )} ${langSeconds}`;\n  }\n}\n","/* eslint-disable linebreak-style */\nimport Component from './component';\nimport { __dispatchEvent } from '../lib/utils';\n\nexport default class Selectable extends Component {\n\n  constructor($element) {\n    super($element);\n\n    // TODO: is DOM element before/after the editor itself.. move it to the editor?\n    this.$settings = document.querySelector(`[data-selectable-id-reference=\"${this.target.id}\"]`);\n\n    this.feedback = JSON.parse(this.$settings.getAttribute('data-module-zpetnavazba'));\n    this.settings = JSON.parse(this.$settings.getAttribute('data-module-settings'));\n\n    this.$items = this.target.querySelectorAll('.selectable-item');\n\n    this.$inputs = this.target.querySelectorAll('input');\n    this.$inputs.forEach(($input) => {\n      this._changeClassIfChecked($input);\n      this._addEventListeners($input);\n    });\n\n    this.cache = {\n      answersCorrect: 0,\n      zpetnaVazba: false,\n      colors: [],\n      checkedInput: 0,\n    };\n\n    // get colors for all feedback variants\n    if (this.feedback) {\n      this.cache.zpetnaVazba = true;\n      this.cache.colors = this.feedback.map((feedback) => feedback.barva);\n    }\n\n  }\n\n  _addEventListeners($input) {\n    $input.addEventListener('change', () => {\n      this.$inputs.forEach(($input_) => {\n        this._changeClassIfChecked($input_);\n      });\n      this._checkAndResolveFeedback();\n    }, false);\n  }\n\n  /* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"_changeClassIfChecked\"] }] */\n  // TODO: might be possible with CSS only with `:checked` selector & sibling combinator`+` or `~`\n  _changeClassIfChecked($input) {\n    $input.parentNode.classList.toggle('is-checked', $input.checked === true);\n  }\n\n  _checkAndResolveFeedback() {\n    this.cache.answersCorrect = 0;\n    if (this.settings.viceOdpovedi) {\n      this.$items.forEach(($item, index) => {\n        if (this.$inputs[index].checked) {\n          this.cache.checkedInput += 1;\n        }\n        if (this.$inputs[index].checked && $item.hasAttribute('data-select-spravnaodpoved')) {\n          this.cache.answersCorrect += 1;\n        }\n        if (!this.$inputs[index].checked && !$item.hasAttribute('data-select-spravnaodpoved')) {\n          this.cache.answersCorrect += 1;\n        }\n      });\n    } else {\n      this.$items.forEach(($item, index) => {\n        if (this.$inputs[index].checked) {\n          this.cache.checkedInput += 1;\n        }\n        if (this.$inputs[index].checked && $item.hasAttribute('data-select-spravnaodpoved')) {\n          this.cache.answersCorrect += 1;\n        }\n      });\n    }\n\n    // Display feedback button (if no checkbox is select, the button is hidden)\n    if ((this.cache.checkedInput === 0 && !this.settings.vybrano) || (this.cache.checkedInput === this.$inputs.length && this.settings.vybrano) || this.settings.disableFeedback) {\n      this.hideFeedback();\n    } else {\n\n      if (this.cache.zpetnaVazba) {\n        const feedbackActual = this.feedback.find((feedback) => feedback.podminka.includes(this.cache.answersCorrect));\n        this.$buttonFeedback.classList.remove(...this.cache.colors);\n        this.$buttonFeedback.classList.add(feedbackActual.barva);\n        this.$buttonFeedbackText.innerText = feedbackActual.text;\n      }\n\n      this.showFeedback();\n    }\n\n    this.cache.checkedInput = 0;\n    this._dispatchEvent();\n  }\n\n  _dispatchEvent() {\n    const items = Array.from(this.$inputs).map(($input) => ({\n      checked: $input.checked,\n      id: $input.id,\n    }));\n\n    __dispatchEvent(this.target, 'selection.change', {}, {\n      id: this.target.id,\n      // task: 'change', // TODO: 'select', 'unselect' ?\n      items,\n    });\n  }\n}\n","/* eslint-disable no-case-declarations */\nimport Component from './component';\n\nexport default class NewTable extends Component {\n  constructor($element) {\n    super($element);\n    // duplicate source of different editor elements\n    this.dataFrom = this.target.parentNode.getAttribute('data-from');\n    this.dataSources = this.dataFrom ? this.dataFrom.split(' ') : [];\n    this.id = $element.getAttribute('id');\n    this.cache = {\n      tasks: [],\n    };\n\n    this.init();\n  }\n\n  init() {\n    const autofill = this.target.parentNode.getAttribute('data-autofill');\n\n    switch (autofill) {\n      case 'columns':\n        this._columnManager();\n        break;\n      case 'rows':\n        this._rowManager();\n        break;\n      case 'cells':\n        const allCells = this.target.querySelectorAll('.table-new__cell');\n\n        allCells.forEach(($cell) => {\n          const columnId = $cell.getAttribute('data-column-id');\n          const rowId = $cell.getAttribute('data-row-id');\n          // add listener only for cells in table\n          if (columnId && rowId) {\n            this._cellManager($cell, columnId, rowId);\n          }\n        });\n        break;\n      default:\n        console.log('NewTableERROR: Undefinated autofill key word!', autofill);\n    }\n  }\n\n  _rowManager() {\n    document.addEventListener('editor.change', (e) => {\n      const data = e.detail.text;\n\n      if (this.dataSources.includes(data.id)) {\n        let $tableRow;\n        let rightToAdd = true;\n\n        // get columns header\n        const $header = this.target.previousSibling;\n        const $headerCells = $header.firstChild.childNodes;\n\n        switch (data.task) {\n          case 'add':\n            $tableRow = document.createElement('div');\n            $tableRow.setAttribute('class', 'table-new__row');\n\n            $headerCells.forEach(($item) => {\n              const $rowCell = document.createElement('div');\n              $rowCell.setAttribute('class', 'table-new__cell');\n              const itemType = JSON.parse($item.getAttribute('data-type'));\n\n              // check if tagName is definated and than set variable to false\n              if (itemType.tagName && itemType.tagName !== data.tagData.tagName) {\n                rightToAdd = false;\n              }\n              else {\n                // add data to cell\n                this.fillCell(itemType, data, $rowCell);\n              }\n\n              // only add if it is right to add\n              if (rightToAdd) $tableRow.appendChild($rowCell);\n            });\n\n            // only add if it is right to add\n            if (rightToAdd) this.target.appendChild($tableRow);\n            break;\n          case 'remove':\n            const tableRows = this.target.childNodes;\n\n            tableRows.forEach(($row) => {\n              $row.childNodes.forEach(($cell, index) => {\n                const itemType = JSON.parse($headerCells[index].getAttribute('data-type'));\n\n                if (NewTable.isRightToDeleteHelper($cell, data.value, itemType)) {\n                  $tableRow = $row;\n\n                }\n              });\n            });\n\n            // olny if row for remove exists\n            if ($tableRow) {\n              // remove tasks from cache\n              $tableRow.childNodes.forEach(($cell) => {\n                this._removeTaskFromCache($cell);\n              });\n\n              $tableRow.remove();\n            }\n            break;\n          default:\n            console.log('NewTableERROR: Undefinated task for new table! (rowManager)');\n        }\n      }\n    });\n  }\n\n  // TODO: adding just specific tags names like in rowManager\n  _columnManager() {\n    document.addEventListener('editor.change', (e) => {\n      const data = e.detail.text;\n\n      if (this.dataSources.includes(data.id)) {\n        const $rows = this.target.childNodes;\n\n        switch (data.task) {\n          case 'add':\n            $rows.forEach(($row) => {\n              const $cell = document.createElement('div');\n              $cell.setAttribute('class', 'table-new__cell');\n\n              const $firstCell = $row.firstChild;\n              const itemType = JSON.parse($firstCell.getAttribute('data-type'));\n\n              // add data to cell\n              this.fillCell(itemType, data, $cell);\n\n              $row.appendChild($cell);\n            });\n            break;\n          case 'remove':\n            let columnIndex;\n            $rows.forEach(($row) => {\n              const $firstCell = $row.firstChild;\n              const itemType = JSON.parse($firstCell.getAttribute('data-type'));\n\n              $row.childNodes.forEach(($cell, index) => {\n                if (NewTable.isRightToDeleteHelper($cell, data.value, itemType)) {\n                  columnIndex = index;\n                }\n              });\n            });\n\n            this.target.childNodes.forEach(($row) => {\n              // remove tasks from cache\n              this._removeTaskFromCache($row.childNodes[columnIndex]);\n\n              $row.childNodes[columnIndex].remove();\n            });\n            break;\n          default:\n            console.log('NewTableERROR: Undefinated task for new table! (columnManager)');\n        }\n      }\n    });\n  }\n\n  _cellManager($cell, columnId, rowId) {\n    const itemType = JSON.parse(this._findCellType($cell));\n    const cellController = (data) => {\n      switch (data.task) {\n        case 'add':\n          const $tag = document.createElement('div');\n          this.fillCell(itemType, data, $cell);\n\n          $cell.appendChild($tag);\n          break;\n        case 'remove':\n          const $tags = $cell.querySelectorAll('div');\n          let removed = false;\n          for (let i = 0; i < $tags.length; i += 1) {\n            if (!removed && NewTable.isRightToDeleteHelper($tags[i], data.value, itemType)) {\n              // TODO: remove only childrens of $elm => empty div is still there\n              $tags[i].remove();\n              removed = true;\n            }\n          }\n          break;\n        default:\n          console.log('NewTableERROR: Undefinated task for new table! (cellManager)');\n      }\n    };\n\n    document.addEventListener('editor.change', (e) => {\n      const data = e.detail.text;\n\n      if (this.dataSources.includes(data.id) && (data.tagData.tagName === rowId || data.tagData.tagName === columnId)) {\n\n        if (!itemType.textId || itemType.textId === data.id) {\n          cellController(data);\n        }\n      }\n    });\n    document.addEventListener('draggable.drop', (e) => {\n      const data = e.detail;\n\n      if (this.dataSources.includes(data.id) && e.detail.columnId === columnId) {\n        // get text\n        const $span = data.$node.querySelector('span').cloneNode(true);\n        $span.classList.add('node-selected', 'node-text-gray');\n        $span.setAttribute('data-by', 'table-drop');\n\n        cellController({ task: data.task, value: $span });\n      }\n    });\n  }\n\n  fillCell(itemType, data, $node) {\n    let $innerItem;\n    let cacheObj;\n\n    // seed init or generate\n    let seed = 0;\n    if (this.cache.tasks.length > 0) {\n      const lastId = this.cache.tasks[this.cache.tasks.length - 1].id;\n      const idParts = lastId.split('-');\n      seed = +idParts[idParts.length - 1] + 1;\n    }\n\n    $node.classList.add(`table-new__cell--${itemType.name}`, `table-new__cell--${itemType.type}`);\n\n    switch (itemType.name) {\n      case 'dup-text':\n        $innerItem = document.createElement('div');\n        if (itemType.type === 'text') {\n          $innerItem.innerHTML = data.value.textContent;\n        }\n        else if (itemType.type === 'tag') {\n          // have to by clone, because if not it will by duplicatet do more tables it will be just in last one\n          $innerItem.appendChild(data.value.cloneNode(true));\n        }\n        break;\n      case 'select':\n        // create task in cache\n        cacheObj = { id: `${this.id}-select-${seed}`, answer: '', rightAnswer: data.tagData };\n        this.cache.tasks.push(cacheObj);\n\n        // create node in html\n        $innerItem = document.createElement(itemType.name);\n\n        $innerItem.setAttribute('id', cacheObj.id);\n        $innerItem.setAttribute('data-save', 'value');\n        $innerItem.setAttribute('tabindex', -1);\n\n        itemType.options.forEach((value) => {\n          const $option = document.createElement('option');\n          $option.innerHTML = value;\n          $innerItem.appendChild($option);\n        });\n\n        // add event listener\n        $innerItem.addEventListener('change', (event) => this._correctedAnswer(event, cacheObj));\n        break;\n      case 'input':\n      case 'textarea':\n        // create task in cache\n        cacheObj = { id: `${this.id}-input-${seed}`, answer: '', rightAnswer: data.tagData };\n        this.cache.tasks.push(cacheObj);\n\n        // create node in html\n        $innerItem = document.createElement(itemType.name);\n\n        $innerItem.setAttribute('id', cacheObj.id);\n        $innerItem.setAttribute('data-save', 'value');\n        $innerItem.setAttribute('tabindex', -1);\n\n        if (itemType.name === 'textarea') {\n          $innerItem.setAttribute('resize', cacheObj.id);\n        }\n\n        Object.keys(itemType.attributes).forEach((key) => {\n          $innerItem.setAttribute(key, itemType.attributes[key]);\n        });\n\n        // add event listener\n        $innerItem.addEventListener('change', (event) => this._correctedAnswer(event, cacheObj));\n        break;\n      case 'drop':\n        $innerItem = document.createElement('div');\n        const numberOfDrops = itemType.number ? itemType.number : -1;\n        // set attribute for draggable logic\n        $innerItem.setAttribute('data-drop-place', numberOfDrops);\n        break;\n      default:\n        $innerItem = document.createElement('div');\n        /*\n          if item Type name is value of data object from delivered cviceni feature\n          then use it and it's value set in table\n          else set empry value and show error\n       */\n        if (data.tagData[itemType.name]) {\n          $innerItem.innerHTML = data.tagData[itemType.name];\n        }\n        else {\n          $innerItem.innerHTML = ' ';\n          console.log('FillCellERROR: Undefinated object name.', itemType);\n        }\n    }\n    $node.appendChild($innerItem);\n  }\n\n  // prepare for more types of duplicate types\n  static isRightToDeleteHelper(elm, deliveredValue, itemType) {\n    let result;\n\n    if (itemType.name === 'dup-text') {\n      // fix for tags\n      // table div textContent include '×' as last char\n      // because it is in self span\n      let elemTextContent;\n      if (itemType.type === 'tag' && elm.textContent[elm.textContent.length - 1] === '×') {\n        elemTextContent = elm.textContent.slice(0, -1);\n      }\n      else {\n        elemTextContent = elm.textContent;\n      }\n      result = elemTextContent === deliveredValue.textContent;\n\n    } // different type then dup-text hasn't duplicate option\n    else {\n      result = false;\n    }\n\n    return result;\n  }\n\n  _findCellType($cell) {\n    const rowType = $cell.parentNode.firstChild.getAttribute('data-type');\n    if (rowType) return rowType;\n\n    // if rows header isn´t definated\n    const columnId = $cell.getAttribute('data-column-id');\n    const $columnHeader = this.target.parentNode.querySelector(`.table-new__cell--header[data-column-id=${columnId}]`);\n    if ($columnHeader) return $columnHeader.getAttribute('data-type');\n\n    return 'empty';\n  }\n\n  _correctedAnswer(event, cacheObj) {\n    this.cache.tasks.forEach((task) => {\n      if (task.id === cacheObj.id) {\n        task.answer = event.target.value;\n      }\n    });\n\n    // console.log('select change', this.cache);\n  }\n\n  _removeTaskFromCache($cell) {\n    this.cache.tasks.forEach((task, index) => {\n      if ($cell.firstChild.tagName === 'SELECT' || $cell.firstChild.tagName === 'INPUT' || $cell.firstChild.tagName === 'TEXTAREA') {\n        if ($cell.firstChild.id === task.id) {\n          this.cache.tasks.splice(index, 1);\n        }\n      }\n    });\n  }\n}\n","import Component from './component';\nimport { __dispatchEvent } from '../lib/utils';\n\n\nexport default class Draggable extends Component {\n  constructor($element) {\n    super($element);\n\n    this.idPrefix = 'drag-item';\n    // duplicate source of different editor elements\n    this.dataFrom = this.target.getAttribute('data-from');\n    this.dataSources = this.dataFrom ? this.dataFrom.split(' ') : [];\n\n    this.position = {\n      x: 0,\n      y: 0,\n      dx: 0,\n      dy: 0,\n    };\n    this.cache = {\n      // to know if draggable item was dropped or not and how many times\n      items: {},\n    };\n\n    this.$targetPrevious = null;\n    this.$targetCurrent = null;\n    this.$draggedItem = null;\n\n    this.objWidth = null;\n    this.objHeight = null;\n\n    this.init();\n  }\n\n  init() {\n    const $dragItems = this.target.querySelectorAll('.draggable__item');\n    $dragItems.forEach(($dragItem) => {\n      // get id\n      const id = $dragItem.getAttribute('data-id');\n      // inicial drop numbers\n      this.cache.items[id] = 0;\n      // use d3 container for $dragItem\n      this.dragAndDropEvents(d3.select($dragItem), id);\n    });\n\n    // initial handler for dropped item to svg\n    this.handleDeleteItemFromSvgDrop();\n\n    // initial handler for adding tags from text\n    this.handleAddTagsFromText();\n  }\n\n  // dropToken is used for handle usecase when user drag from drop-place to drop-place\n  dragAndDropEvents($dragItem, itemId, dropToken = true) {\n    // drag & drop\n    $dragItem.call(d3.drag()\n      .container(this.$slide)\n      .on('start', () => { this.onStart($dragItem); })\n      .on('drag', () => { this.onDrag($dragItem); })\n      .on('end', () => { this.onDrop($dragItem, itemId, dropToken); }));\n  }\n\n  onStart($dragItem) {\n\n    this.$slide.classList.add('is-dragging');\n\n    this.$targetPrevious = d3.event.sourceEvent.target;\n\n    // in this method is better to have classic html node\n    const $dragItemHTML = $dragItem.node();\n\n    // initial position\n    this.objWidth = $dragItemHTML.offsetWidth;\n    this.objHeight = $dragItemHTML.offsetHeight;\n    this.position.x = d3.event.sourceEvent.clientX - d3.event.sourceEvent.offsetX;\n    this.position.y = d3.event.sourceEvent.clientY - d3.event.sourceEvent.offsetY;\n    this.position.dx = 0;\n    this.position.dy = 0;\n\n    // get dragged node\n    // clone element if from DRAG place\n    if ($dragItemHTML.parentNode.hasAttribute('data-drag-place')) {\n      this.$draggedItem = $dragItemHTML.cloneNode(true);\n    }\n    // do not clone if from DROP place\n    else {\n      this.$draggedItem = $dragItemHTML;\n\n      // get table data\n      const $table = $dragItemHTML.closest('.table-new__body');\n      const $cell = $dragItemHTML.closest('.table-new__cell');\n      const columnId = $cell.getAttribute('data-column-id');\n\n      // dispatch event that item has been removed from drop place\n      __dispatchEvent(document, 'draggable.drop', {}, {\n        id: $table.id,\n        task: 'remove',\n        columnId,\n        // type: itemType,\n        $node: $dragItemHTML,\n      });\n    }\n\n    // add to body\n    document.body.appendChild(this.$draggedItem);\n    // convert back to d3 container\n    this.$draggedItem = d3.select(this.$draggedItem);\n\n    this.$draggedItem\n      .classed('is-dragged', true)\n      .classed('was-dropped', false)\n      .attr('style', `top:${this.position.y}px; left:${this.position.x}px;`);\n  }\n\n  onDrag($dragItem) {\n    // console.log($dragItem.node());\n    // update position\n    this.position.dx += d3.event.dx;\n    this.position.dy += d3.event.dy;\n\n    // move with dragging element\n    this.$draggedItem.style('transform', `translate3d(${this.position.dx}px, ${this.position.dy}px, 0) rotate(5deg)`);\n\n    this.$targetCurrent = d3.event.sourceEvent.target;\n    // check for make placeholder in drop place\n    if (this.$targetPrevious !== this.$targetCurrent) {\n\n      // remove placeholder in old target\n      const $placeholderOld = this.$targetPrevious.querySelector('.draggable__item--placeholder');\n      if ($placeholderOld) $placeholderOld.remove();\n\n      // create placeholder in new target\n      if (this.$targetCurrent.hasAttribute('data-drop-place')) {\n        const numberOfPossibleDrops = this.$targetCurrent.getAttribute('data-drop-place');\n        const numberOfDropsDone = this.$targetCurrent.childElementCount;\n\n        // console.log('ondrag', numberOfDropsDone);\n\n        if (numberOfPossibleDrops === '-1' || +numberOfPossibleDrops > numberOfDropsDone) {\n          // remove this class is important for creating placeholder from dragging item from drop place\n          const $placeholderNew = $dragItem.clone(true)\n            .classed('is-dragged', false)\n            .classed('draggable__item--placeholder', true)\n            .attr('style', 'outline: 0px;')\n            .node();\n\n          this.$targetCurrent.appendChild($placeholderNew);\n        }\n      }\n\n      // update target\n      this.$targetPrevious = this.$targetCurrent;\n    }\n  }\n\n  onDrop($dragItem, itemId, dropToken) {\n    this.$targetCurrent = d3.event.sourceEvent.target;\n\n    // when dropping within droppable normal DOM node\n    if (this.$targetCurrent.hasAttribute('data-drop-place')) {\n\n      // get placeholder\n      let $dropItem = this.$targetCurrent.querySelector('.draggable__item--placeholder');\n\n      if ($dropItem) {\n        const itemType = $dropItem.getAttribute('data-draggable-item');\n\n        // remove unneeded classes for dropItem\n        $dropItem.classList.remove('draggable__item--placeholder', 'was-dropped');\n        $dropItem.classList.add('dropped__item');\n\n        // update drops num\n        if (dropToken) {\n          $dragItem.classed('was-dropped', true);\n          this.cache.items[itemId] += 1;\n        }\n\n        if (itemType === 'svg') {\n          $dropItem.querySelector('[data-fullscreen=\"toggle\"]').remove();\n        }\n        else {\n          // add cross for remove item\n          const $rightElmChild = $dropItem.firstElementChild;\n          const $cross = document.createElement('span');\n          $cross.classList.add('node-close');\n          $cross.innerText = '×';\n\n          // remove svg from frop item\n          $rightElmChild.removeChild($rightElmChild.lastElementChild);\n          $rightElmChild.appendChild($cross);\n\n          // remove item after click on cross\n          $cross.addEventListener('click', () => {\n            this.removeDraggableItem($dropItem, itemId, dropToken);\n          });\n        }\n\n        // add events to clone for posible dragging back\n        // dropItem has to by in d3 container\n        this.dragAndDropEvents(d3.select($dropItem), itemId, false);\n      } // only click on drop item\n      else {\n        $dropItem = $dragItem.clone(true)\n          .classed('is-dragged', false)\n          .attr('style', 'outline: 0px;')\n          .node();\n\n        this.$targetCurrent.appendChild($dropItem);\n\n        // add events to clone for posible dragging back\n        // dropItem has to by in d3 container\n        this.dragAndDropEvents(d3.select($dropItem), itemId, false);\n      }\n\n      // get table data\n      const $table = this.$targetCurrent.closest('.table-new__body');\n      const $cell = this.$targetCurrent.closest('.table-new__cell');\n      const columnId = $cell.getAttribute('data-column-id');\n\n      // dispatch event that item has been dropped\n      __dispatchEvent(document, 'draggable.drop', {}, {\n        id: $table.id,\n        task: 'add',\n        columnId,\n        // type: itemType,\n        $node: $dropItem,\n      });\n\n      // remove draggedItem from DOM\n      this.$draggedItem.remove();\n    }\n    // when dropping within SVG\n    else {\n      // get svg\n      const $svg = this.$targetCurrent.closest('svg');\n      // check drop attribute\n      const svgCanDrop = $svg ? $svg.hasAttribute('data-svg-drop') : false;\n\n      // when dropping within droppable svg node\n      if (svgCanDrop) {\n\n        // see __localPosition in ../lib/utils\n        // however d3.event.offsetX does not work here\n        const getLocalPositionBasedOnBrowser = () => {\n          const $slideActive = $svg.closest('.half-slide-active');\n\n          if (platform.name === 'Firefox' && $slideActive) {\n            // this works for Firefox even in transformed container\n            return [\n              d3.mouse($svg)[0] - ($slideActive.offsetWidth + this.objWidth),\n              d3.mouse($svg)[1],\n            ];\n          }\n\n          // this works for Chrome\n          return d3.mouse($svg);\n        };\n\n        const position = getLocalPositionBasedOnBrowser();\n        const $node = this.$draggedItem.classed('is-dragged', false)\n          .attr('style', 'outline: 0px;')\n          .node();\n\n        // update drops num\n        $dragItem.classed('was-dropped', true);\n        this.cache.items[itemId] += 1;\n\n        // add to svg\n        // dispatch event that svg has changed\n        __dispatchEvent(document, 'svg.drop', {}, {\n          svg: {\n            id: $svg.id,\n            $node,\n            type: $node.getAttribute('data-draggable-item'),\n            position,\n            size: {\n              width: this.objWidth,\n              height: this.objHeight,\n            },\n          },\n        });\n\n        this.$draggedItem.remove();\n\n      }\n      // when dropping outside of droppable area\n      else {\n        // if it's last drop then remove drop class\n        this.removeDraggableItem(this.$draggedItem, itemId, dropToken);\n      }\n\n    }\n\n    this.$slide.classList.remove('is-dragging');\n  }\n\n  handleDeleteItemFromSvgDrop() {\n\n    document.addEventListener('svg.drop.delete', (event) => {\n      const { id, $object } = event.detail.item;\n\n      // console.log('smazano', id, $object);\n      const $sameItemFromDragPlace = this.target.querySelector(`div[data-id=${id}]`);\n\n      if ($sameItemFromDragPlace) {\n        // if it's last drop then remove drop class\n        if (this.cache.items[id] === 1) {\n          $sameItemFromDragPlace.classList.remove('was-dropped');\n        }\n\n        // update drop number of concrete item\n        this.cache.items[id] -= 1;\n      }\n    });\n  }\n\n  handleAddTagsFromText() {\n    // need if we drop more than one same item\n    let idSalt = 1;\n\n    document.addEventListener('editor.change', (e) => {\n      const data = e.detail.text;\n      const concreteTagName = this.target.getAttribute('data-tagName');\n\n      // if concreteTagName\n      if (this.dataSources.includes(data.id) && (!concreteTagName || concreteTagName === data.tagData.tagName)) {\n        let $newDaggabletItem;\n        let $tagTextSpan;\n        let textToAdd;\n        let newId;\n        let idParts;\n\n        switch (data.task) {\n          case 'add':\n            // clone hidden tag\n            $newDaggabletItem = this.target.firstElementChild.cloneNode(true);\n            $newDaggabletItem.classList.remove('hidden');\n\n            // find place where to add tags text\n            $tagTextSpan = $newDaggabletItem.querySelector('.keywords-item');\n\n            // get right text to add\n            textToAdd = data.value.textContent;\n            if (textToAdd[textToAdd.length - 1] === '×') {\n              textToAdd = textToAdd.slice(0, -1);\n            }\n\n            // add text\n            $tagTextSpan.firstElementChild.innerHTML = textToAdd;\n\n            // add color to draggable item\n            $newDaggabletItem.firstElementChild.classList.add(`node-text-${data.tagColor}`);\n            $tagTextSpan.classList.add(`node-text-${data.tagColor}`);\n\n            // create new id\n            newId = $newDaggabletItem.getAttribute('data-id');\n            idParts = newId.split('-');\n            idParts.splice(-1, 1, `dup-${idSalt}`);\n            newId = idParts.join('-');\n\n            // set new id\n            $newDaggabletItem.setAttribute('data-id', newId);\n\n            // add to cache\n            this.cache.items[newId] = 0;\n\n            idSalt += 1;\n            this.target.appendChild($newDaggabletItem);\n\n            // add listeners for drag'n'drop\n            this.dragAndDropEvents(d3.select($newDaggabletItem), newId);\n            break;\n          case 'remove':\n            this.target.childNodes.forEach(($cell) => {\n              if (Draggable.isRightToDeleteHelper($cell, data.value, $cell.getAttribute('data-draggable-item'))) {\n                $cell.remove();\n              }\n            });\n            break;\n          default:\n            console.log('NewTableERROR: Undefinated task for new table! (cellManager)');\n        }\n      }\n    });\n  }\n\n  removeDraggableItem($draggedItem, itemId, dropToken) {\n    // if it's last drop then remove drop class\n    if (this.cache.items[itemId] === 1) {\n      const $sameItemFromDragPlace = this.target.querySelector(`div[data-id=${itemId}]`);\n      $sameItemFromDragPlace.classList.remove('was-dropped');\n    }\n\n    // update drop number of concrete item\n    if (!dropToken) {\n      this.cache.items[itemId] -= 1;\n    }\n\n    // remove draggedItem from DOM\n    $draggedItem.remove();\n  }\n\n  // prepare for more types of duplicate types\n  static isRightToDeleteHelper(elm, deliveredValue, itemType) {\n    // fix for tags\n    // table div textContent include '×' as last char\n    // because it is in self span\n    let elemTextContent;\n    if (itemType === 'tag' && elm.textContent[elm.textContent.length - 1] === '×') {\n      elemTextContent = elm.textContent.slice(0, -1);\n    }\n    else {\n      elemTextContent = elm.textContent;\n    }\n    return elemTextContent === deliveredValue.textContent;\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport MagnifyingGlass from './magnifying-glass';\nimport Sortable from './sortable';\nimport SVG from './svg';\nimport SVGRadialMenu from './svg-lib/svg-radial-menu';\nimport Editor from './editor/editor';\nimport Keywords from './keywords';\nimport TestQuiz from './test-quiz';\nimport FullscreenToggle from './fullscreen';\nimport UserText from './user-text';\nimport AudioPlayerNormal from './media/audio-player-normal';\nimport AudioPlayerSimple from './media/audio-player-simple';\nimport FakeMap from './fake-map';\nimport { stopPlayingVideoPlayers } from './media/media';\nimport VideoPlayer from './media/video';\nimport Selectable from './selectable';\nimport NewTable from './new-table';\nimport Draggable from './draggable';\n\nconst windowLoadComponents = () => {\n  console.log('windowLoad:components');\n\n  // Video player - normal\n  const $videoPlayers = document.querySelectorAll('[data-player-video]');\n  if ($videoPlayers.length > 0) {\n    $videoPlayers.forEach(($videoPlayer) => {\n      // console.log('$videoPlayer', $videoPlayer);\n      const videoPlayer = new VideoPlayer($videoPlayer);\n    });\n\n    document.addEventListener('slide.change', () => {\n      stopPlayingVideoPlayers($videoPlayers);\n    });\n  }\n\n  // Audio player - normal\n  const $audioPlayerNormals = document.querySelectorAll('[data-player-audio=\"normal\"]');\n  if ($audioPlayerNormals.length > 0) {\n    $audioPlayerNormals.forEach(($audioPlayerNormal) => {\n      const audioPlayerNormal = new AudioPlayerNormal($audioPlayerNormal);\n    });\n\n    // TODO > audio-player-normal.js#61\n    // document.addEventListener('slide.change', () => {\n    //   stopPlayingVideoPlayers($audioPlayerNormals);\n    // });\n  }\n\n  // Audio player — simple\n  const $audioPlayerSimples = document.querySelectorAll('[data-player-audio=\"simple\"]');\n  if ($audioPlayerSimples.length > 0) {\n    $audioPlayerSimples.forEach(($audioPlayerSimple) => {\n      const audioPlayerSimple = new AudioPlayerSimple($audioPlayerSimple);\n    });\n\n    document.addEventListener('slide.change', () => {\n      stopPlayingVideoPlayers($audioPlayerSimples);\n    });\n  }\n\n  // Fullscreen\n  const $fullscreenToggles = document.querySelectorAll('[data-fullscreen=\"toggle\"]');\n  if ($fullscreenToggles.length > 0) {\n    $fullscreenToggles.forEach(($fullscreenToggle) => {\n      const fullscreenToggle = new FullscreenToggle($fullscreenToggle);\n    });\n  }\n\n  // Magnifying glass\n  const $magnifyingGlass = document.querySelectorAll('[data-lupa-target]');\n  if ($magnifyingGlass.length > 0) {\n    for (let i = 0; i < $magnifyingGlass.length; i += 1) {\n      const magnifyingGlass = new MagnifyingGlass($magnifyingGlass[i]);\n    }\n  }\n\n  // Fake Map\n  const $fakeMaps = document.querySelectorAll('[data-fake-map=\"target\"]');\n  if ($fakeMaps.length > 0) {\n    for (let i = 0; i < $fakeMaps.length; i += 1) {\n      const fakeMap = new FakeMap($fakeMaps[i]);\n    }\n  }\n\n  //\n  // load these below in working mode only\n\n  // User texts\n  // - preview/working mode logic inside the component\n  //  - show\n  const $userTexts = document.querySelectorAll('[data-textarea-target=\"\"]');\n  if ($userTexts.length > 0) {\n    $userTexts.forEach(($userText) => {\n      const userText = new UserText($userText);\n    });\n  }\n\n  // SVG + Radial menu\n  // - preview/working mode logic in side the component\n  //  - to set max-width\n  const $svgs = document.querySelectorAll('[data-svg-target]');\n  if ($svgs.length > 0) {\n\n    if (HISTORYLAB.import.done !== true) {\n      // radial menu\n      const $radialMenu = document.querySelector('[data-radial-menu]');\n      if ($radialMenu) {\n        const radialMenu = new SVGRadialMenu($radialMenu, $svgs);\n      }\n    }\n\n    // svgs\n    // setSize is needed\n    $svgs.forEach(($svg) => {\n      const svg = new SVG($svg);\n    });\n  }\n\n  if (HISTORYLAB.import.done !== true) {\n\n    // Editor\n    const $editors = document.querySelectorAll('[data-editor]');\n    if ($editors.length > 0) {\n      $editors.forEach(($editor) => {\n        const editor = new Editor($editor);\n      });\n    }\n\n    // Test Quizes\n    const $testQuizs = document.querySelectorAll('[data-target-test-quiz]');\n    if ($testQuizs.length > 0) {\n      $testQuizs.forEach(($testQuiz) => {\n        const settings = document.querySelector(\n          `[data-test-quiz-id-reference=\"${$testQuiz.getAttribute(\n            'data-test-quiz-id',\n          )}\"]`,\n        );\n\n        const testQuiz = new TestQuiz(\n          $testQuiz.getAttribute('data-test-quiz-id'),\n          $testQuiz,\n          JSON.parse(settings.getAttribute('data-module-settings')),\n        );\n        testQuiz.init();\n      });\n    }\n\n    // New table\n    const $newTables = document.querySelectorAll('[data-new-table]');\n    if ($newTables.length > 0) {\n      $newTables.forEach(($newTable) => {\n        const newTable = new NewTable($newTable);\n      });\n    }\n\n    // Pretahovani\n    const $draggables = document.querySelectorAll('[data-draggable]');\n    if ($draggables.length > 0) {\n      $draggables.forEach(($draggable) => {\n        const draggable = new Draggable($draggable);\n      });\n    }\n\n    // Sortable\n    const $sortables = document.querySelectorAll('[data-sortable-target]');\n    if ($sortables.length > 0) {\n      $sortables.forEach(($sortable) => {\n        const sortable = new Sortable($sortable);\n      });\n    }\n\n    // Selectable\n    const $selectables = document.querySelectorAll('[data-selectable-target]');\n    if ($selectables.length > 0) {\n      $selectables.forEach(($selectable) => {\n        const selectable = new Selectable($selectable);\n      });\n    }\n\n    // Keywords selection\n    const $keywords = document.querySelectorAll('[data-keywords]');\n    if ($keywords.length > 0) {\n      $keywords.forEach(($keyword) => {\n        const settings = $keyword.hasAttribute('data-module-settings')\n          ? $keyword.getAttribute('data-module-settings')\n          : {};\n        const keywords = new Keywords($keyword, JSON.parse(settings));\n        keywords.init();\n      });\n    }\n  }\n};\n\nexport default windowLoadComponents;\n","/* eslint-disable consistent-return */\nimport domLoadComponents from './dom-load';\nimport windowLoadComponents from './window-load';\nimport unsupportedBrowsers from '../lib/unsupported-browsers';\n\n(() => {\n  if (unsupportedBrowsers()) return false;\n\n  // The DOMContentLoaded event fires when parsing of the current page is complete. DOMContentLoaded is a great event to use to hookup UI functionality to complex web pages.\n  document.addEventListener('DOMContentLoaded', domLoadComponents, false);\n\n  // The load event fires when all files have finished loading from all resources, including ads and images.\n  window.addEventListener('load', windowLoadComponents, false);\n})();\n","const unsupportedBrowsers = () => {\n\n  // feature detection for unsupported browsers\n  const isUnsupported = !Array.from\n    || !Element.prototype.matches\n    || !Element.prototype.closest\n    || typeof window.CustomEvent !== 'function'\n    || typeof Object.assign !== 'function';\n\n  if (isUnsupported) {\n    console.warn('Not supported browser.');\n\n    const $unsupported = document.querySelector('#unsupported');\n    $unsupported.querySelector('#unsupported-browser').innerHTML = ` ${platform.name} ${platform.version} `;\n    $unsupported.classList.remove('is-hidden');\n\n    return true;\n  }\n\n  return false;\n};\n\nexport default unsupportedBrowsers;\n"],"names":["domLoadComponents","console","log","Component","$element","target","$slide","this","closest","lang","document","documentElement","getAttribute","HISTORYLAB","done","$buttonFeedback","querySelector","$buttonFeedbackText","showFeedback","bind","classList","contains","remove","add","MagnifyingGlass","$canvas","ctx","_this","getContext","_onStart","_onMove","_onEnd","_update","_onResize","zoomGlassSize","targetBCR","zoomed","targetZoomed","x","y","trackingTouch","_addEventListeners","_initCanvas","window","requestAnimationFrame","width","height","dPR","devicePixelRation","style","scale","getBoundingClientRect","event","preventDefault","pageX","touches","pageY","TAU","Math","PI","radius","ratioX","max","min","left","ratioY","top","scaledTargetWidth","scaledTargetHeight","platform","os","family","indexOf","name","shadowColor","shadowBlur","shadowOffsetY","clearRect","fillStyle","beginPath","arc","closePath","fill","save","clip","drawImage","restore","_setTransformStyle","addEventListener","betterX","betterY","halfYoomGlassSize","abs","innerWidth","transform","__createNewCustomEvent","options","data","defaults","bubbles","properties","Object","assign","CustomEvent","detail","__dispatchEvent","type","payload","dispatchEvent","__isObject","item","_typeof","Array","isArray","__insertBefore","newNode","referenceNode","parentNode","insertBefore","__insertAfter","nextSibling","__remove","el","removeChild","__localPosition","container","position","d3","offsetX","offsetY","mouse","format","__positionTranslated","curTransform","WebKitCSSMatrix","getComputedStyle","webkitTransform","body","pageYOffset","scrollTop","pageXOffset","scrollLeft","offsetLeft","m41","offsetTop","m42","__position","elAttibutes","__toggleClass","element","cls","__hasClass","__removeClass","__addClass","className","elements","classes","_elements","_classes","querySelectorAll","tagName","split","i","length","j","replace","RegExp","mediaEvents","playchange","timechange","canplaystart","stopPlayingVideoPlayers","$players","forEach","$player","$media","paused","pause","setAttribute","getSecondsMinutesFormat","seconds","duration","floor","minutes","toString","slice","AudioPlayer","$item","$audio","$playButton","$timeLeft","play","stopPropagation","innerText","currentTime","SVGDragNDrop","select","raise","classed","diff","attr","toFixed","SVGDraw","$svg","color","callback","sourceEvent","nodeName","line","curve","curveLinear","d","subject","x0","y0","id","active","append","datum","on","x1","y1","dx","dy","push","$thisPath","svg","task","node","contextMenu","pathEventsManager","d3svg","localPosition","circleEventsManager","elementPosition","selection","selectAll","nodes","idParts","$object","firstChild","call","drag","start","dragged","oldXCoordinate","oldYCoordinate","taskType","end","SVG","removeCloneConnectionManager","SVGText","maxLength","minLength","svgID","svgGroup","$radialMenu","hash","orientation","foreignObject","textarea","focus","textEventsManager","$node","isCreated","firstWrite","oldText","value","parentElement","childNodes","updateTextareaHeight","$target","wrongBool","isWrong","removeItem","scrollHeight","isBubble","_setSize","init","_initWhenDone","toDuplicate","svgSpecificActions","colors","svgSpecificColor","_initPath","_initCircle","_initComicBubbles","_getEvents","_getDropEvent","viewbox","rect","maxWidthAbsolute","maxHeightAbsolute","innerHeight","getHeight","maxWidth","setMaxWidth","_this2","p","renderPath","createCircle","_this3","$comicBubbles","$comicBubble","comicBubblesEventsManager","_this4","oldID","join","svgDuplicateSources","e","includes","$templateNode","localNodeID","_this5","_generateNewID","$localNode","_clonePath","_cloneComicBubbles","_cloneTextField","_cloneCircle","idSalt","_this6","size","multiply","$d3foreignObject","$dropItem","createElement","appendChild","firstElementChild","$foreignObject","cloneNode","selected","isRadial","$parent","allActiveSvgs","deactivate","pop","Sortable","$settings","feedback","JSON","parse","$container","$items","$droppables","$placeholder","$inheritors","inheritors","order","direction","before","after","evaluation","undefined","clientX","clientY","clone","posRel","siblings","prev","next","_setupInitialOrder","_setupInheritors","cache","map","barva","hasAttribute","offsetWidth","offsetHeight","_addPlaceholder","_onOver","right","_onDrop","bottom","_removePlaceholder","_updateOrder","_updateOrderInInheritors","_dispatchEvent","_checkAndResolveFeedback","_getReference","_addEventListenerToItem","addEventListeners","minHeight","src","img","nextElementSibling","previousElementSibling","array","some","index","checkIfTheArrayIsGood","changedArray","splice","arrayOfItems","_toConsumableArray","parseInt","dataset","sortableSpravnaodpoved","feedbackResult","oneMove","feedbackActual","find","podminka","text","splneno","from","$inheritor","sortableIndex","inheritor","SVGRadialMenu","$svgs","$radialMenuItems","$colorItems","$textItems","$createTextItem","$removeItem","$tooltip","initialSetUp","menuRadius","getPropertyValue","itemRadius","setUpRadialMenuItems","addEventListenersToRadialMenu","hasText","hasMoreColors","activate","deselectItem","filterMenuButtons","showRadialMenu","addEventListenersToRadialMenuItem","_itemsLength","_menuRadius","_itemRadius","_menuOffset","_centerOffset","angle","sin","cos","onMouseLeave","hideRadialMenu","action","createText","changeColor","innerHTML","currentTarget","display","$activeSVG","globalPosition","__globalPosition","$activeRadialMenuItem","positionRadialMenuItems","setTimeout","mouseLeaveDelay","clearTimeout","clickedItem","$colorItem","$textItem","selectItem","Editor","$editor","settings","opts","__mergeDeep","source","output","keys","key","models","passive","interactive","withMenu","totalTagId","hasMenu","lastSelectionSettings","isCollapsed","savedSelectionRange","selectionAttributes","dummyRangeElement","selectionMouseDown","selectionDirection","hasEditableContentChanged","lastPressedKey","hasToolbar","toolbar","originalContent","currentContent","_handlers","wrapLastDeletesTimeoutClass","wrapLastDeletesTimeoutFunction","wrapLastAdditionsTimeoutClass","wrapLastAdditionsTimeoutFunction","isWrappingLastText","isWriting","$groupDeleted","_hasMenu","$menu","menuClass","$menuActions","$menuClose","error","_hasToolbar","canvasClass","funkce","html","_generateNewTagGroupClass","$btnReset","registerEditableHandlers","initPreHighlightedTextOptions","handlerFocus","matchMedia","matches","navigator","maxTouchPoints","msMaxTouchPoints","keycode","getSelection","keyCode","which","keyName","rangeCount","range","getRangeAt","cloneRange","setStart","startContainer","startOffset","collapse","setEnd","endContainer","endOffset","addedFragmentString","cloneContents","textContent","trim","dummyElementInner","surroundContents","removeAllRanges","addRange","dummyElement","contentEditable","newGeneratedId","_generateNewTagId","$elements","$btnClose","closeBtnClass","$nodeElement","_removeNodeKeepTextContent","getElementById","wrapLastDeletesTimeout","textToAddElement","insertNode","setStartAfter","groupDeletedId","$groupInnerDeleted","$groupInnerAdded","$groupAdded","registerMenuHandler","confirm","len","handlerMenuActions","handlerMenuClose","$textOptionsElements","$textOption","textOptions","selectedClass","idForSend","tagData","clickClose","_setmenuDimensions","leftDimensions","topDimensions","menuDimensions","translated","clonedElement","visibility","elDimensions","elPosition","__getRealDimensions","parentTranslatedPosition","parentDimensions","isOverflowAt","menuMargin","toggleMenu","$el","command","commandName","setSelection","anchorOffset","focusOffset","_setSelectionPosition","selectionPosition","selectionDimension","$domEl","newTagId","extractContents","classesArray","tagColor","createTextNode","$parentEl","$elClose","toggleClass","clickHandler","$closeBtn","removeEventListener","commentRef","nodePosition","commentMargin","commentTemplate","div","commentDiv","nodeRef","commentNewTextarea","commentDivButtonSubmit","commentCommentsContainer","calculatedCommentPosition","_calculateCommentPosition","commentItem","_createCommentForNode","_highlightContents","closeBtn","_createCloseBtnForElement","comments","_addCommentHandlerForElement","commentsClass","_storeHighlightedContents","showCommentsOnInit","click","resetBtnClass","nodeSelectedClass","enable","animatedClass","deselectedClass","menu","Keywords","$controls","$itemsContainer","itemsContainerClassName","inherit","isInherited","itemClassName","_getHTMLFromItems","onInit","_regenerateItemsContainerFromInherited","_registerHandlers","_changeSizeOfKeywordItem","skala","maxLevel","setNewLevelValue","$keyword","number","oldValue","newValue","$control","tempContent","temp","renameItemsIds","_clickEventHandler","_dispatchEventHandler","keywords","currentId","nodeId","_getItemFromDOMElement","_getItemsHTML","_getItemsFromHTML","itemsClassName","itemsArray","_getDOMElementFromItem","newDiv","outerHTML","wrapper","__getHTML","items","contentHTML","oldId","newId","itemsHTML","expString","TestQuiz","$questions","itemClass","answersCorrect","questions","zpetnaVazba","$question","questionIndex","answered","answerCorrect","$answers","optionClass","$answer","answerIndex","$answerCurrent","$answersItem","question","FullscreenToggle","$fullscreenContainer","$fullscreenTarget","removeAttribute","toLowerCase","currentSrc","Promise","resolve","reject","Image","onload","onerror","then","image","naturalWidth","naturalHeight","ratio","setSize","$svgTexts","$svgText","readOnly","$fullscreen","toggle","UserText","$userTexts","$counter","$wrapper","lengthExpected","avg","lastValue","hadData","wasUsed","updateCharacterCounter","textDuplicateSources","getEvents","none","ok","conditionAll","$userText","taskName","valueLength","updateFeedback","AudioPlayerNormal","$loadWave","$leftTime","$audioDuration","wavesurfer","WaveSurfer","create","waveColor","progressColor","responsive","barWidth","load","initWave","getDuration","addListenerAfterReady","time","playPause","$nextSlide","AudioPlayerSimple","$duration","FakeMap","$buttons","$maps","lastActiveIndex","addEventListenerToButtons","$button","switchMap","VideoPlayer","prefix","interval","$document","ownerDocument","$play","$playSymbol","$pauseSymbol","$time","$timeMeter","$timeRange","$currentTimeText","$currentTime","durationTime","$durationTime","timeToAural","$enterFullscreenSymbol","$leaveFullscreenSymbol","_fullscreenchange","_requestFullscreen","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","onCanPlayStart","onLoadStart","onLoadedData","onPlayChange","onTimeChange","onPlayClick","onTimeKeydown","onTimeClick","onFullscreenClick","onFullscreenChange","onDrag","percentage","clearInterval","setInterval","currentTimePercentage","currentTimeCode","nodeValue","nCanPlayStart","autoplay","isFullscreen","_fullscreenElement","leaveFullscreen","enterFullscreen","pointerType","_exitFullscreen","webkitSupportsFullscreen","webkitDisplayingFullscreen","webkitExitFullscreen","webkitEnterFullscreen","shiftKey","offset","fullscreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","webkitCancelFullScreen","msExitFullscreen","innerTarget","listener","hasPointerEvent","onpointerup","hasTouchEvent","ontouchstart","pointerDown","pointerMove","pointerUp","onpointermove","defaultView","langMinutes","langSeconds","Selectable","$inputs","$input","_changeClassIfChecked","checkedInput","$input_","checked","viceOdpovedi","vybrano","disableFeedback","hideFeedback","NewTable","dataFrom","dataSources","tasks","autofill","_columnManager","_rowManager","$cell","columnId","rowId","_cellManager","$tableRow","rightToAdd","$headerCells","previousSibling","$rowCell","itemType","fillCell","$row","isRightToDeleteHelper","_removeTaskFromCache","$rows","$firstCell","columnIndex","_findCellType","cellController","$tag","$tags","removed","textId","$span","$innerItem","cacheObj","seed","answer","rightAnswer","$option","_correctedAnswer","attributes","numberOfDrops","rowType","$columnHeader","_this7","elm","deliveredValue","result","Draggable","idPrefix","$targetPrevious","$targetCurrent","$draggedItem","objWidth","objHeight","$dragItem","dragAndDropEvents","handleDeleteItemFromSvgDrop","handleAddTagsFromText","itemId","dropToken","onStart","onDrop","$dragItemHTML","$table","$placeholderOld","numberOfPossibleDrops","numberOfDropsDone","childElementCount","$placeholderNew","$slideActive","$rightElmChild","$cross","lastElementChild","removeDraggableItem","$sameItemFromDragPlace","$newDaggabletItem","$tagTextSpan","textToAdd","concreteTagName","windowLoadComponents","$videoPlayers","$videoPlayer","$audioPlayerNormals","$audioPlayerNormal","$audioPlayerSimples","$audioPlayerSimple","$fullscreenToggles","$fullscreenToggle","$magnifyingGlass","$fakeMaps","$editors","$testQuizs","$testQuiz","$newTables","$newTable","$draggables","$draggable","$sortables","$sortable","$selectables","$selectable","$keywords","Element","prototype","warn","$unsupported","version","unsupportedBrowsers"],"mappings":"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"}